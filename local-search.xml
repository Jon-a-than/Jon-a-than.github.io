<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>🏗MatLabα</title>
    <link href="/2022/03/06/MatLab1/"/>
    <url>/2022/03/06/MatLab1/</url>
    
    <content type="html"><![CDATA[<h2 id="基本命令">基本命令</h2><p><strong>新建脚本</strong></p><figure class="highlight matlab"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs matlab">edit;<br></code></pre></div></td></tr></table></figure><p><strong>帮助</strong></p><figure class="highlight matlab"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs matlab">help &lt;func&gt;;<br></code></pre></div></td></tr></table></figure><p><strong>查看文档</strong></p><figure class="highlight matlab"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs matlab">doc &lt;func&gt;;<br></code></pre></div></td></tr></table></figure><p><strong>清空命令终端</strong></p><figure class="highlight matlab"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs matlab">clc;<br></code></pre></div></td></tr></table></figure><p><strong>清空变量缓存</strong></p><figure class="highlight matlab"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs matlab">clear;<br></code></pre></div></td></tr></table></figure><p><strong>关闭所有图像</strong></p><figure class="highlight matlab"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs matlab">close all;<br></code></pre></div></td></tr></table></figure><h2 id="声明矩阵">声明矩阵</h2><h3 id="实数">🍍实数</h3><figure class="highlight matlab"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs matlab">x = <span class="hljs-number">1</span>;<br>y = <span class="hljs-number">1</span>;<br></code></pre></div></td></tr></table></figure><h3 id="向量">🍍向量</h3><p><code>matlab</code><strong>可用空格代表逗号</strong></p><h4 id="行向量">📌行向量</h4><figure class="highlight matlab"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs matlab">x = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>];<br>y = [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>];<br></code></pre></div></td></tr></table></figure><h4 id="列向量">📌列向量</h4><figure class="highlight matlab"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs matlab">x = [<span class="hljs-number">1</span>; <span class="hljs-number">2</span>; <span class="hljs-number">3</span>;];<br>y = [<span class="hljs-number">1</span>; <span class="hljs-number">1</span>; <span class="hljs-number">1</span>;];<br></code></pre></div></td></tr></table></figure><h4 id="向量组合">📌向量组合</h4><figure class="highlight matlab"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs matlab">x = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>];<br>y = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, x];<br>z = [x, y]<br></code></pre></div></td></tr></table></figure><h3 id="均分取值">🍍均分取值</h3><p><code>linspace(min, max, n)</code><strong>在闭区间</strong><code>[min, max]</code><strong>内均匀取</strong><code>n</code><strong>个数</strong></p><figure class="highlight matlab"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs matlab">x = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">-1</span>, <span class="hljs-number">1</span>);          <span class="hljs-comment">% 默认取100</span><br>y = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">-2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">10</span>);<br></code></pre></div></td></tr></table></figure><h3 id="构造二维表">🍍构造二维表</h3><figure class="highlight matlab"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs matlab">x = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">-10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">20</span>)<br>y = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">-10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">20</span>)<br>[xx, yy] = <span class="hljs-built_in">meshgrid</span>(x, y)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>大一课程</category>
      
      <category>MatLab</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MatLab</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>质点运动学</title>
    <link href="/2022/03/06/%E5%A4%A7%E5%AD%A6%E7%89%A9%E7%90%861/"/>
    <url>/2022/03/06/%E5%A4%A7%E5%AD%A6%E7%89%A9%E7%90%861/</url>
    
    <content type="html"><![CDATA[<h2 id="常见坐标系">常见坐标系</h2><h3 id="直角坐标系">🥝直角坐标系</h3><h3 id="柱面坐标系">🥝柱面坐标系</h3><h3 id="球面坐标系">🥝球面坐标系</h3><h3 id="平面极坐标系">🥝平面极坐标系</h3><h3 id="自然坐标系">🥝自然坐标系</h3><h2 id="质点的运动方程">质点的运动方程</h2><h3 id="位矢">🍊位矢</h3><p><strong>位矢为原点指向质点位置的方程,位矢的大小即位矢的模,方向使用方向余弦表示</strong> <span class="math display">\[\begin{align}&amp;\vec r=x\vec i+y\vec i+z\vec k\\&amp;|\vec r|=\sqrt{x^2+y^2+z^2}\\\\&amp;\cases{\cos\alpha=\frac{x}{|\vec r|}\\\cos\beta=\frac{y}{|\vec r|}\\\cos\gamma=\frac{y}{|\vec r|}}\end{align}\]</span></p><h3 id="位移">🍊位移</h3><p><strong>位移为两位矢的差</strong> <span class="math display">\[\begin{align}\vec x=\vec r(t +\Delta t)-\vec r(t)=\Delta x\vec i+\Delta y\vec j+\Delta y\vec k\end{align}\]</span></p><h4 id="位矢增量">📌位矢增量</h4><p><strong>即位移大小,常用</strong><span class="math inline">\(|\Delta r|\)</span><strong>表示位矢增量的大小</strong></p><h4 id="位矢大小">📌位矢大小</h4><p><strong>位矢模长的大小,常用</strong><span class="math inline">\(\Delta r\)</span><strong>表示位矢大小的增量</strong></p><h4 id="路程">📌路程</h4><p><strong>质点所经路程</strong></p><h3 id="速度">🍊速度</h3><p><strong>速度描述单位时间位移的变化量</strong> <span class="math display">\[\vec v=\frac{\Delta r}{\Delta t}\]</span></p><h4 id="自然坐标系下的速度表示">📌自然坐标系下的速度表示</h4><p><strong>时间很小时平均速率即顺时速度的大小</strong> <span class="math display">\[\begin{align}\vec v&amp;=\lim_{\Delta t\rightarrow 0}{\frac{\Delta\vec r}{\Delta t}}\\\\&amp;=\Big(\lim_{\Delta t\rightarrow 0}{\frac{\Delta\vec r}{\Delta s}}\Big)\Big(\lim_{\Delta s\rightarrow 0}{\frac{\Delta s}{\Delta t}}\Big)\\&amp;=\Big(\lim_{\Delta s\rightarrow 0}{\frac{\Delta\vec r}{\Delta s}}\Big)\frac{ds}{dt}\\&amp;=\frac{ds}{dt}\vec τ\end{align}\]</span></p><h4 id="直角坐标系下的速度表示">📌直角坐标系下的速度表示</h4><h3 id="加速度">🍊加速度</h3><p><strong>加速度描述速度的变换率</strong> <span class="math display">\[\begin{align}\vec a&amp;=\frac{\Delta\vec v}{\Delta t}\\\\&amp;=\frac{\frac{\Delta\vec r}{\Delta t}}{\Delta t}\\&amp;=\frac{d^2r}{dt^2}\end{align}\]</span></p><h2 id="质点的圆周运动">质点的圆周运动</h2><h3 id="角量">🥬角量</h3><h4 id="角速度">📌角速度</h4><p><span class="math display">\[\omega=\frac{d\theta}{dt}\]</span></p><h4 id="角加速度">📌角加速度</h4><p><span class="math display">\[\beta=\frac{d\omega}{dt}=\frac{d^2\theta}{dt^2}\]</span></p><h3 id="加速度-1">🥬加速度</h3><h3 id="加速度的表示">🥬加速度的表示</h3><h2 id="相对运动">相对运动</h2>]]></content>
    
    
    <categories>
      
      <category>大一课程</category>
      
      <category>大学物理</category>
      
      <category>力学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大学物理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电路分析α</title>
    <link href="/2022/03/05/%E7%94%B5%E8%B7%AF%E5%88%86%E6%9E%901/"/>
    <url>/2022/03/05/%E7%94%B5%E8%B7%AF%E5%88%86%E6%9E%901/</url>
    
    <content type="html"><![CDATA[<h1 id="单位与基本概念">单位与基本概念</h1><h2 id="电流">电流</h2><h4 id="计算电流">📌计算电流</h4><p><strong>正电荷的方向为电流方向</strong> <span class="math display">\[i(t)=\frac{dq(t)}{dt}\]</span></p><h4 id="电路中的电流方向">📌电路中的电流方向</h4><ul><li><p><code>参考方向</code><strong>:人为指定的电流方向</strong></p></li><li><p><code>实际方向</code><strong>:电流的实际方向</strong></p></li></ul><h2 id="电压与电位">电压与电位</h2><p><strong>电场力对单位电荷所作的功为电压</strong> <span class="math display">\[u(t)=\frac{dw}{dq}\]</span> <strong>电位为该点与参考点的电压,用</strong><code>┻</code><strong>表示参考点</strong></p><h2 id="基尔霍夫定律">基尔霍夫定律</h2><h3 id="kcl">🥑KCL</h3><p><strong>流入节点电流之和等于流出节点的电流之和</strong></p><h3 id="kvl">🥑KVL</h3><p><strong>回路的电压之和为零</strong></p><h2 id="单口网络等效">单口网络等效</h2>]]></content>
    
    
    <categories>
      
      <category>大一课程</category>
      
      <category>电路分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>电路分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pnpm使用</title>
    <link href="/2022/03/04/pnpm%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/03/04/pnpm%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="安装pnpm">安装pnpm</h2><p><strong>使用</strong><code>npm</code><strong>安装</strong><code>pnpm</code></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">npm install pnpm -g<br></code></pre></div></td></tr></table></figure><p><strong>查看</strong><code>pnpm</code><strong>版本,检查是否安装成功</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">pnpm -v<br></code></pre></div></td></tr></table></figure><p><strong>更新</strong><code>pnpm</code></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">pnpm add<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pnpm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo数学公式</title>
    <link href="/2022/03/03/hexo%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    <url>/2022/03/03/hexo%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="更换文本渲染器">更换文本渲染器</h2><h3 id="卸载原渲染器">🍍卸载原渲染器</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm uninstall hexo-renderer-marked --save<br></code></pre></div></td></tr></table></figure><h3 id="安装渲染器">🍍安装渲染器</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install hexo-renderer-pandoc --save<br></code></pre></div></td></tr></table></figure><h3 id="安装pandoc">🍍安装pandoc</h3><p><a href="https://github.com/jgm/pandoc/releases">Releases · jgm/pandoc (github.com)</a></p><h2 id="开启公式">开启公式</h2><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">math:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">specific:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-comment"># 在文章开头标记`math: true`对需要公式渲染的文章按需渲染</span><br>    <span class="hljs-attr">engine:</span> <span class="hljs-string">mathjax</span><br></code></pre></div></td></tr></table></figure><h2 id="部署">部署</h2><p><strong>注意备份</strong><code>public</code><strong>下的静态文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">hexo clean<br></code></pre></div></td></tr></table></figure><h2 id="mathjax不可换行问题">mathjax不可换行问题</h2><p><strong>可在</strong><code>align</code><strong>公式块中写公式实现换行效果(曲线救国)</strong></p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">$$<br>\begin&#123;align&#125;<br>&amp;E = m c ^ 2\\<br>&amp;F = m a<br>\end&#123;align&#125;<br>$$<br></code></pre></div></td></tr></table></figure><p><span class="math display">\[\begin{align}&amp;E = m c ^ 2\\&amp;F = m a\end{align}\]</span></p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>latex</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>高等数学θ</title>
    <link href="/2022/03/03/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E7%AC%AC%E5%85%AB%E7%AB%A0/"/>
    <url>/2022/03/03/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E7%AC%AC%E5%85%AB%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="向量运算">向量运算</h2><h3 id="点积">🍍点积</h3><p><span class="math display">\[\vec{a} \cdot \vec{b} = |\vec a||\vec b|\cos\theta\]</span></p><p><span class="math inline">\(\vec{a} \cdot \vec{b}\)</span><strong>对三阶向量</strong> <span class="math display">\[(x_1, y_1,z_1) \cdot(x_2, y_2,z_2) = x_1x_2+y_1y_2+z_1z_2\]</span></p><h3 id="叉积">🍍叉积</h3><p><strong>结果为两向量的垂直向量,方向符合右手准则</strong> <span class="math display">\[\vec{a} \times \vec{b} = |\vec a||\vec b|\sin\theta\]</span></p><p><span class="math inline">\(\vec{a} \times \vec{b}\)</span><strong>对三阶向量</strong> <span class="math display">\[(x_1, y_1,z_1) \times (x_2, y_2,z_2) = \begin{vmatrix}\vec i &amp;\vec j &amp;\vec k\\x_1&amp; y_1 &amp; z_1\\x_2&amp; y_2 &amp; z_2 \end{vmatrix}\]</span></p><h3 id="混合积">🍍混合积</h3><p><strong>混合积为零则三向量共面</strong> <span class="math display">\[\left [\begin{matrix}\vec a &amp;\vec b &amp;\vec c\end{matrix}\right ] = (\vec a \times\vec b)\cdot\vec c\]</span></p><h2 id="空间平面">空间平面</h2><p><span class="math display">\[f(x, y, z) = 0\]</span></p><h3 id="点法式方程">🍉点法式方程</h3><p><strong>已知平面法向量</strong><span class="math inline">\((A,B,C)\)</span><strong>则平面的点法式方程为</strong> <span class="math display">\[A(x-x_0) + B(y-y_0)+C(z-z_0) = 0\]</span></p><h3 id="一般方程">🍉一般方程</h3><p><span class="math display">\[Ax+By+Cz+D = 0\]</span></p><h3 id="面面角">🍉面面角</h3><p><span class="math display">\[\cos\theta=\frac{|\vec n_1 \cdot\vec n_2|}{|\vec n_1||\vec n_2|}\ \ (\theta\in[0, \frac \pi 2])\]</span></p><h3 id="过三点求平面">🍉过三点求平面</h3><p><strong>先用叉积求法向量,再写点法式方程</strong> <span class="math display">\[\begin{align}&amp;\cases{\overrightarrow{M_1M_2} = (x_2-x_1, y_2-y_1,z_2-z_1)\\\\\overrightarrow{M_1M_2} = (x_3-x_1, y_3-y_1,z_3-z_1)}\\\\&amp;\vec n=\overrightarrow{M_1M_2}\times\overrightarrow{M_1M_2}\\\\&amp;f: A(x-x_1) + B(y-y_1)+C(z-z_1) = 0\end{align}\]</span></p><h3 id="方向余弦">🍉方向余弦</h3><p><strong>若平面法向量为</strong><span class="math inline">\((x,y,z)\)</span><strong>则其方向余弦为</strong> <span class="math display">\[\begin{align}&amp;\cases{\cos\alpha =\frac x {|\vec n|}\\\\\cos\beta =\frac y {|\vec n|}\\\\\cos\gamma =\frac z {|\vec n|}}\end{align}\]</span></p><h2 id="空间直线">空间直线</h2><h3 id="一般方程-1">🥝一般方程</h3><p><span class="math display">\[\cases{A_0x+B_0y+C_0z+D_0 = 0\\\\A_1x+B_1y+C_1z+D_1 = 0}\]</span></p><p><strong>方向向量为两面法向量叉积</strong> <span class="math display">\[\vec l =\vec n_1\times\vec n_2\]</span></p><h3 id="对称式方程">🥝对称式方程</h3><p><strong>过</strong><span class="math inline">\((x_0,y_0,x_0)\)</span><strong>方向向量为</strong><span class="math inline">\((m,n,k)\)</span><strong>的直线的对称式方程为</strong> <span class="math display">\[\frac{x-x_0}{m}=\frac{y-y_0}{n}=\frac{z-z_0}{k}\]</span></p><h3 id="参数方程">🥝参数方程</h3><p><strong>若设点法式方程比值为</strong><span class="math inline">\(t\)</span><strong>,则直线的参数方程为</strong> <span class="math display">\[\cases {x=x_0+mt\\\\y=y_0+nt\\\\z=z_0+kt}\]</span></p><h3 id="平面束">🥝平面束</h3><p><strong>平面束方程表示过两平面交线的所有方程</strong> <span class="math display">\[\cases{A_0x+B_0y+C_0z+D_0 = 0\\\\A_1x+B_1y+C_1z+D_1 = 0}\]</span></p><p><span class="math display">\[\mu(A_0x+B_0y+C_0z+D_0)+\lambda(A_1x+B_1y+C_1z+D_1) = 0\]</span></p><p><strong>当取</strong><span class="math inline">\(\mu = 1\)</span><strong>时,平面束方程无法表示平面二,但计算更加方便</strong> <span class="math display">\[A_0x+B_0y+C_0z+D_0+\lambda(A_1x+B_1y+C_1z+D_1) = 0\]</span></p><h3 id="线线角">🥝线线角</h3><p><span class="math display">\[\cos\theta=\frac{|\vec n_1 \cdot\vec n_2|}{|\vec n_1||\vec n_2|}\ \ (\theta\in[0, \frac \pi 2])\]</span></p><h3 id="线面角">🥝线面角</h3><p><span class="math display">\[\sin\theta=\frac{|\vec n_1 \cdot\vec n_2|}{|\vec n_1||\vec n_2|}\ \ (\theta\in[0, \frac \pi 2])\]</span></p><h3 id="点面距离">🥝点面距离</h3><p><span class="math display">\[|d| = \frac{|\vec l \times\vec n|}{|\vec l|}\]</span></p><h3 id="点线距离">🥝点线距离</h3><h3 id="点在面的投影">🥝点在面的投影</h3><p><strong>平面法向量与点</strong><span class="math inline">\(P(x_0,y_0,z_0)\)</span><strong>的参数方程</strong> <span class="math display">\[\cases {x=x_0+At\\\\y=y_0+Bt\\\\z=z_0+Ct}\]</span> <strong>线面交点即点在面的投影,参数方程代入平面方程得</strong><span class="math inline">\(t\)</span> <span class="math display">\[f(x,y,z)=0 \Rightarrow f(t) = 0\]</span> <strong>投影点为</strong><span class="math inline">\((x_0+At,y_0+Bt,z_0+Ct)\)</span></p><h3 id="线在面的投影">🥝线在面的投影</h3><p><strong>求出过直线且垂直平面一的平面二的法向量</strong> <span class="math display">\[\begin{align}&amp;\vec n_2 = \vec n_1\times\vec l\\\end{align}\]</span> <strong>由直线上的点也在平面二内得到平面二的点法式方程</strong></p><p><strong>投影线即两面交线</strong></p><h2 id="曲面">曲面</h2><h3 id="旋转曲面">🍍旋转曲面</h3><p><strong>绕</strong><code>x</code><strong>轴旋</strong></p><p><strong>转</strong><span class="math inline">\(f(x,y)\Rightarrow f(x,\sqrt{y^2+z^2})\)</span></p><p><strong>绕</strong><code>y</code><strong>轴旋转</strong><span class="math inline">\(f(x,y)\Rightarrow f(\sqrt{x^2+z^2},y)\)</span></p><p><strong>绕</strong><code>z</code><strong>轴旋转</strong><span class="math inline">\(f(y,z)\Rightarrow f(\sqrt{x^2+y^2},z)\)</span></p><h4 id="球面">📌球面</h4><p><span class="math inline">\(x^2+y^2=R^2\)</span><strong>绕</strong><code>z</code><strong>轴旋转一周</strong> <span class="math display">\[x^2+y^2+z^2=R^2\]</span></p><p><img src="https://s1.ax1x.com/2022/03/06/bBIrJf.png" srcset="/img/loading.gif" lazyload style="zoom:25%;"></p><h4 id="圆锥面">📌圆锥面</h4><p><span class="math inline">\(z=\alpha y\)</span><strong>绕</strong><code>z</code><strong>轴旋转一周</strong> <span class="math display">\[\alpha^2(x^2+y^2)=z^2\]</span></p><h4 id="section">📌</h4><h3 id="柱面">🍍柱面</h3><h3 id="旋转曲面的伸缩">🍍旋转曲面的伸缩</h3><h4 id="椭圆锥面">📌椭圆锥面</h4><p><img src="https://s1.ax1x.com/2022/03/06/bBNSud.png" srcset="/img/loading.gif" lazyload style="zoom:25%;"></p><h4 id="椭球面">📌椭球面</h4><div class="note note-info">            <p><strong>参考文档:</strong></p><p>《高等数学下册 (同济大学)》</p>          </div>]]></content>
    
    
    <categories>
      
      <category>大一课程</category>
      
      <category>高等数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>高等数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WebpackTS环境搭建</title>
    <link href="/2022/02/27/WebpackTS%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/02/27/WebpackTS%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="配置ts环境">配置TS环境</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm init -y<br></code></pre></div></td></tr></table></figure><h3 id="配置">🥝配置</h3><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">&#123;<br>    ...<br>    <span class="hljs-attr">&quot;main&quot;</span>: <span class="hljs-string">&quot;./src/index.ts&quot;</span><br>    ...<br>    <span class="hljs-string">&quot;scripts&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;test&quot;</span>: <span class="hljs-string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>,<br>        <span class="hljs-comment">// 启用配置文件, 需安装依赖`npm install cross-env -D`</span><br>        <span class="hljs-attr">&quot;start&quot;</span>: <span class="hljs-string">&quot;cross-env NODE_ENV=development webpack-dev-server --config ./build/webpack.config.js&quot;</span><br>    &#125;<br>    ...<br>    <span class="hljs-string">&quot;license&quot;</span>: <span class="hljs-string">&quot;MIT&quot;</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="文件目录">🥝文件目录</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">└─TS-demo<br>    ├─build                     <span class="hljs-comment"># 构建配置</span><br>    ├─src                       <span class="hljs-comment"># 项目代码</span><br>    │  ├─api                    <span class="hljs-comment"># 公共接口</span><br>    │  ├─assets                 <span class="hljs-comment"># 静态资源</span><br>    │  │  ├─font                <span class="hljs-comment"># 字体资源</span><br>    │  │  └─img                 <span class="hljs-comment"># 图像资源</span><br>    │  ├─config                 <span class="hljs-comment"># 配置文件</span><br>    │  ├─tools                  <span class="hljs-comment"># 工具函数</span><br>    │  └─utils                  <span class="hljs-comment"># 核心业务代码</span><br>    └─typings                   <span class="hljs-comment"># 模块声明文件</span><br>  <br></code></pre></div></td></tr></table></figure><h3 id="依赖安装">🥝依赖安装</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install typescript tslint -g<br></code></pre></div></td></tr></table></figure><h3 id="初始化ts配置">🥝初始化TS配置</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">tsc --init<br></code></pre></div></td></tr></table></figure><h3 id="初始化tslint">🥝初始化tslint</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">tsl<br></code></pre></div></td></tr></table></figure><h3 id="安装webpack开发依赖">🥝安装webpack开发依赖</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install webpack webpack-cli webpack-dev-server -D<br></code></pre></div></td></tr></table></figure><h3 id="添加webpack配置">🥝添加webpack配置</h3><p><strong>在</strong><code>build</code><strong>目录下添加配置文件</strong><code>webpack.config.js</code></p><p><strong>安装TS打包加载器</strong><code>npm install ts-loader -D</code></p><p><strong>安装插件</strong><code>npm install clean-webpack-plugin html-webpack-plugin -D</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">/* 导入插件 */</span><br><span class="hljs-keyword">const</span> HtmlWebpackPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;html-webpack-plugin&#x27;</span>)<br><span class="hljs-keyword">const</span> &#123;CleanWebpackPlugin&#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;clean-webpack-plugin&#x27;</span>)<br><br><span class="hljs-built_in">module</span>.exports = &#123;<br>    <span class="hljs-comment">/* 打包出入口配置 */</span><br>    <span class="hljs-attr">entry</span>: <span class="hljs-string">&quot;./src/index.ts&quot;</span>,                             <span class="hljs-comment">// 项目入口文件</span><br>    <span class="hljs-attr">output</span>: &#123;<br>        <span class="hljs-attr">filename</span>: <span class="hljs-string">&quot;main.js&quot;</span>                              <span class="hljs-comment">// 出口文件</span><br>    &#125;,<br>    <br>    <span class="hljs-comment">/* 打包文件配置 */</span><br>    <span class="hljs-attr">resolve</span>: &#123;<br>        <span class="hljs-attr">extensions</span>: [<span class="hljs-string">&#x27;.ts&#x27;</span>, <span class="hljs-string">&#x27;.tsx&#x27;</span>, <span class="hljs-string">&#x27;.js&#x27;</span>]               <span class="hljs-comment">// 自动匹配后缀</span><br>    &#125;,<br>    <span class="hljs-attr">module</span>: &#123;<br>        <span class="hljs-attr">rule</span>: [&#123;                                         <span class="hljs-comment">// .ts与.tsx打包</span><br>            <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.tsx?$/</span>,<br>            use: <span class="hljs-string">&#x27;ts-loader&#x27;</span>,<br>            <span class="hljs-attr">exclude</span>: <span class="hljs-regexp">/node_modules/</span>                      <span class="hljs-comment">// 不打包node_modules下的配置文件</span><br>        &#125;]<br>    &#125;,<br>    <br>    <span class="hljs-comment">/* 开发调试工具,只在开发环境加载 */</span><br>    <span class="hljs-attr">devtool</span>: process.env.NODE_ENV === <span class="hljs-string">&#x27;production&#x27;</span> ? <span class="hljs-literal">false</span> : <span class="hljs-string">&#x27;inline-source-map&#x27;</span>,<br><br>    <span class="hljs-comment">/* 本地服务器配置 */</span><br>    <span class="hljs-attr">devServer</span>: &#123;<br>        <span class="hljs-attr">compress</span>: <span class="hljs-literal">false</span>,                                 <span class="hljs-comment">// 是否压缩代码</span><br>        <span class="hljs-attr">host</span>: <span class="hljs-string">`localhost`</span>, <br>        <span class="hljs-attr">port</span>: <span class="hljs-number">8080</span>                                       <span class="hljs-comment">// 端口</span><br>    &#125;,<br>    <br>    <span class="hljs-comment">/* 插件 */</span><br>    <span class="hljs-attr">plugins</span>: [<br>        <span class="hljs-keyword">new</span> CleanWebpackPlugin(&#123;<br>            <span class="hljs-attr">cleanOnceBeforeBuildPatterns</span>: [<span class="hljs-string">&#x27;./dist&#x27;</span>]<br>        &#125;),<br>        <span class="hljs-keyword">new</span> HtmlWebpackPlugin(&#123;<br>            <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;./src/template/index.html&#x27;</span><br>        &#125;)<br>    ]<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="项目安装ts依赖">🥝项目安装TS依赖</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install typescript<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>TypeScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Webpack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗算法-位运算</title>
    <link href="/2022/02/25/%E7%AE%97%E6%B3%95-%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    <url>/2022/02/25/%E7%AE%97%E6%B3%95-%E4%BD%8D%E8%BF%90%E7%AE%97/</url>
    
    <content type="html"><![CDATA[<h1 id="与">与</h1><h2 id="算法">算法</h2><h2 id="性质">性质</h2><h2 id="应用">应用</h2><h1 id="或">或</h1><h2 id="算法-1">算法</h2><h2 id="性质-1">性质</h2><h2 id="应用-1">应用</h2><h1 id="异或">异或</h1><h2 id="算法-2">算法</h2><h2 id="性质-2">性质</h2><ul><li><code>x ^ 0 = x</code></li><li><code>x ^ x = 0</code></li></ul><h2 id="应用-2">应用</h2><h3 id="leetcode-136.-只出现一次的数字">🥝<a href="https://leetcode-cn.com/problems/single-number/">LeetCode 136. 只出现一次的数字</a></h3><p><strong>给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</strong></p><p><strong>说明：</strong></p><p><strong>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</strong></p><p><strong>示例 1:</strong></p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-string">输入:</span> [<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>]<br><span class="hljs-string">输出:</span> <span class="hljs-number">1</span><br></code></pre></div></td></tr></table></figure><p><strong>示例 1:</strong></p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-string">输入:</span> [<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]<br><span class="hljs-string">输出:</span> <span class="hljs-number">4</span><br></code></pre></div></td></tr></table></figure><p><strong>使用异或解答</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> singleNumber = <span class="hljs-function">(<span class="hljs-params">nums</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">let</span> res = <span class="hljs-number">0</span><br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;i &lt; nums.length;i++)<br>    res ^= nums[i]<br>  <span class="hljs-keyword">return</span> res<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>位运算</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>算法-双指针</title>
    <link href="/2022/02/24/%E7%AE%97%E6%B3%95-%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    <url>/2022/02/24/%E7%AE%97%E6%B3%95-%E5%8F%8C%E6%8C%87%E9%92%88/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>双指针</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗算法-排序</title>
    <link href="/2022/02/23/%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F/"/>
    <url>/2022/02/23/%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="冒泡排序">冒泡排序</h1><h2 id="算法实现">算法实现</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> bubbleSort = <span class="hljs-function">(<span class="hljs-params">array</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> L = array.length<br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;i &lt; L;i++)<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>;j &lt; L - <span class="hljs-number">1</span> - i;j++)<br>      <span class="hljs-keyword">if</span>(array[j] &gt; array[j + <span class="hljs-number">1</span>])<br>        [array[j], array[j + <span class="hljs-number">1</span>]] = [array[j + <span class="hljs-number">1</span>], array[j]]<br>&#125;<br></code></pre></div></td></tr></table></figure><style>    .sort {      display: -ms-grid;      display: grid;      grid-template-columns: repeat(10, auto);      justify-content: center;      column-gap: 5px;      align-items: flex-end;    }    .items {      display: inline-block;      padding: 4px 10px;      margin: 1%;      background-color: #787;      color: #fff;      transition: all 1s;    }  </style><div class="sort bubble"><span class="items" style="padding-top: 5px;order: 5;">1</span><span class="items" style="padding-top: 20px;order: 3;">2</span><span class="items" style="padding-top: 35px;order: 7;">3</span><span class="items" style="padding-top: 50px;order: 2;">4</span><span class="items" style="padding-top: 65px;order: 9;">5</span><span class="items" style="padding-top: 80px;order: 1;">6</span><span class="items" style="padding-top: 95px;order: 4;">7</span><span class="items" style="padding-top: 110px;order: 6;">8</span><span class="items" style="padding-top: 125px;order: 8;">9</span></div><script>    const Span = document.querySelectorAll('.bubble > .items')    // 交换与当前比较元素    const swap = (elemt, x, y, n, flg = false) => {      setTimeout(() => elemt[x].style.backgroundColor='#e5b453', (n-1) * 1000)      setTimeout(() => elemt[y].style.backgroundColor='#e5b453', (n-1) * 1000)      if(flg)        setTimeout(() => {          [elemt[x].style.order, elemt[y].style.order] = [elemt[y].style.order,  elemt[x].style.order]        }, n*1000 - 500)      setTimeout(() => elemt[x].style.backgroundColor='#787', n * 1000)      setTimeout(() => elemt[y].style.backgroundColor='#787', n * 1000)    }    const nums = [5, 3, 1, 6, 0, 7, 2, 8, 4]    const L = nums.length    // 冒泡排序    const bubbleSort = (nums, L) => {      let k = 1      for(let i = 0;i < L;i++){        for(let j = 0;j < L - 1 - i;j++){          if(nums[j] > nums[j + 1]){            swap(Span, nums[j], nums[j+1], k++, true);            [nums[j], nums[j+1]] = [nums[j+1], nums[j]]          }          else            swap(Span, nums[j], nums[j+1], k++)          if(j + 1 == L - 1 - i)          setTimeout(() => Span[L - i -1].style.backgroundColor='#d46c75', (k-1)*1000)        }        if(i == L - 1)          setTimeout(() => Span[0].style.backgroundColor='#d46c75', k*1000)      }    }    // 循环播放    bubbleSort([...nums], L)    setInterval(() => {      for(let i = 0;i < L;i++){        Span[nums[i]].style.order = i        Span[i].style.backgroundColor='#787'      }      bubbleSort([...nums], L)    }, 40000);</script><h1 id="选择排序">选择排序</h1><h2 id="算法实现-1">算法实现</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> selectSort = <span class="hljs-function">(<span class="hljs-params">array</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> L = array.length<br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;i &lt; L;i++)&#123;<br>    <span class="hljs-keyword">let</span> maxIndex = L - i - <span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>;j &lt; L - i - <span class="hljs-number">1</span>;j++)<br>      <span class="hljs-keyword">if</span>(array[maxIndex] &lt; array[j])<br>        maxIndex = j<br>    <span class="hljs-keyword">if</span>(maxIndex != L - i - <span class="hljs-number">1</span>)<br>      [array[maxIndex], array[L - i - <span class="hljs-number">1</span>]] = [array[L - i - <span class="hljs-number">1</span>], array[maxIndex]]<br>  &#125;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><div class="sort select" style="margin-top: 20px"><span class="items" style="padding-top: 5px;order: 5">1</span><span class="items" style="padding-top: 20px;order: 3">2</span><span class="items" style="padding-top: 35px;order: 7">3</span><span class="items" style="padding-top: 50px;order: 2">4</span><span class="items" style="padding-top: 65px;order: 9">5</span><span class="items" style="padding-top: 80px;order: 1">6</span><span class="items" style="padding-top: 95px;order: 4">7</span><span class="items" style="padding-top: 110px;order: 6">8</span><span class="items" style="padding-top: 125px;order: 8">9</span></div><script>  const Span2 = document.querySelectorAll('.select > .items')  console.log(Span2.length)  const selectSort = (nums, L) => {    let k = 0    for(let i = 0;i < L;i++){      let maxIndex = L - i - 1      for(let j = 0;j < L - i - 1;j++){        swap(Span2, nums[maxIndex], nums[j], k++)        if(nums[maxIndex] < nums[j])          maxIndex = j      }      if(L - i -1 != maxIndex){        swap(Span2, nums[maxIndex], nums[L - i -1], k, true);        [nums[L - i - 1], nums[maxIndex]] = [nums[maxIndex], nums[L - i - 1]]      }      setTimeout(() => Span2[L - i -1].style.backgroundColor='#d46c75', (k++)*1000)      if(i + 1 == L)        setTimeout(() => Span2[0].style.backgroundColor='#d46c75', (k+1)*1000)    }  }  selectSort([...nums], L)  setInterval(() => {    for(let i = 0;i < L;i++){      Span2[nums[i]].style.order = i      Span2[i].style.backgroundColor='#787'    }    selectSort([...nums], L)  }, 46000);</script>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>排序</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>排序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript严格模式</title>
    <link href="/2022/02/23/JavaScript%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/"/>
    <url>/2022/02/23/JavaScript%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>严格模式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript高阶函数</title>
    <link href="/2022/02/23/JavaScript%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/"/>
    <url>/2022/02/23/JavaScript%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>函数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗JavaScript函数</title>
    <link href="/2022/02/22/JavaScript%E5%87%BD%E6%95%B0/"/>
    <url>/2022/02/22/JavaScript%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="函数定义">函数定义</h2><h3 id="函数声明">🥝函数声明</h3><p><strong>使用函数声明会发生</strong><code>函数声明提升</code><strong>在声明前使用函数也不会报错</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sum</span> (<span class="hljs-params">a, b</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> a + b<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="函数表达式">🥝函数表达式</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> sum = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> a + b<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="箭头函数">🥝箭头函数</h3><p><strong>箭头函数不可使用(</strong><code>arguments</code><strong>,</strong><code>super</code><strong>,</strong><code>new.target</code><strong>)</strong></p><p><strong>箭头函数不会改变</strong><code>this</code><strong>,</strong><code>this</code><strong>为定义箭头函数时的</strong><code>this</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> sum = <span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> a + b<br>&#125;<br><br><span class="hljs-comment">// 不使用花括号的单行之间return</span><br><span class="hljs-keyword">const</span> sum = <span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a+b<br><br><span class="hljs-comment">// 单参数可不用括号</span><br><span class="hljs-keyword">const</span> doubleValue = <span class="hljs-function"><span class="hljs-params">a</span> =&gt;</span> <span class="hljs-number">2</span> * a<br><br><span class="hljs-comment">// 无参数需使用括号</span><br><span class="hljs-keyword">const</span> sayHi = <span class="hljs-function">() =&gt;</span> alert(<span class="hljs-string">&#x27;Hellow World!&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h2 id="函数参数">函数参数</h2><h3 id="arguments">🍌arguments</h3><p><strong>使用</strong><code>function</code><strong>定义的函数可使用类数组对象</strong><code>arguments</code><strong>来访问函数接收参数</strong></p><p><strong>函数可接受任意个参数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> sum = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">a = <span class="hljs-number">1</span>, b = <span class="hljs-number">1</span></span>) </span>&#123;<br>  <span class="hljs-keyword">let</span> res = <span class="hljs-number">0</span><br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;i &lt; <span class="hljs-built_in">arguments</span>.length;i++)<br>    res += <span class="hljs-built_in">arguments</span>[i]<br>  <span class="hljs-keyword">return</span> res<br>&#125;<br><br><span class="hljs-built_in">console</span>.log(sum(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>))<br><span class="hljs-comment">// 10</span><br></code></pre></div></td></tr></table></figure><script>    const sum = function (a, b) {  let res = 0  for(let i = 0;i < arguments.length;i++)    res += arguments[i]  return res}</script><p><a class="btn" onclick="alert(sum(1, 2, 3, 4))">结果</a></p><p><code>arguments.callee([args])</code><strong>方法调用自身</strong></p><h3 id="默认参数">🍌默认参数</h3><p><strong>使用ES6语法可为函数方便的提供默认值</strong></p><p><strong>默认值不可使用函数块内的变量</strong></p><p><strong>默认值按顺序定义,前面的参数不可使用后面的默认参数</strong></p><p><code>arguments</code><strong>不接收默认值</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> sum = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">a = <span class="hljs-number">1</span>, b = <span class="hljs-built_in">Math</span>.random()</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">`sum: <span class="hljs-subst">$&#123;a + b&#125;</span>, arguments: <span class="hljs-subst">$&#123;<span class="hljs-built_in">arguments</span>.length&#125;</span>`</span><br>&#125;<br><br><span class="hljs-built_in">console</span>.log(sum())<br><span class="hljs-comment">// sum: 1.7805692838745435, arguments: 0</span><br></code></pre></div></td></tr></table></figure><script>const sumAB = function (a = 1, b = Math.random()) {    return `sum: ${a + b}, arguments: ${arguments.length}`}</script><p><a class="btn" onclick="alert(sumAB())">结果</a></p><h3 id="函数内部参数">函数内部参数</h3><h3 id="new.target">🥑new.target</h3><h3 id="this">🥑this</h3><h2 id="函数属性与方法">函数属性与方法</h2><h3 id="name属性">🍉name属性</h3><p><strong>函数名指向函数的首地址</strong></p><h3 id="length属性">🍉length属性</h3><p><strong>该属性表示函数定义参数个数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> sum = <span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a + b<br><br><span class="hljs-built_in">console</span>.log(sum.lengh)<br><span class="hljs-comment">// 2</span><br></code></pre></div></td></tr></table></figure><p><a class="btn" onclick="alert(sum.length)">结果</a></p><h3 id="prototype.apply方法">🍉prototype.apply()方法</h3><p><strong>可以改变调用函数的</strong><code>this</code><strong>指向,参数只可传一个</strong><code>arguments</code><strong>对象或数组</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">window</span>.name = <span class="hljs-string">&#x27;Yun&#x27;</span><br><span class="hljs-built_in">window</span>.age = <span class="hljs-number">20</span><br><br><span class="hljs-keyword">const</span> A = &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Lin&#x27;</span>,<br>  <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>,<br>&#125;<br><br><span class="hljs-keyword">const</span> msg = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>&#123;<br>  alert(<span class="hljs-string">`name: <span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.name&#125;</span>, age: <span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.age&#125;</span>, args: <span class="hljs-subst">$&#123;a&#125;</span>, <span class="hljs-subst">$&#123;b&#125;</span>`</span>)<br>&#125;<br><br>msg(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br><span class="hljs-comment">// name: Yun, age: 20, args: 1, 2</span><br>msg.call(A, [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>])<br><span class="hljs-comment">// name: Lin, age: 19, args: 1, 2</span><br></code></pre></div></td></tr></table></figure><script>    window.name = 'Yun'    window.age = 20    const A = {        name: 'Lin',        age: 19,    }    const msg = function(a, b) {  alert(`name: ${this.name}, age: ${this.age}, args: ${a}, ${b}`)}</script><p><a class="btn" onclick="msg(1, 2);msg.apply(A, [1, 2]);">结果</a></p><h3 id="prototype.call方法">🍉prototype.call()方法</h3><p><strong>可以改变调用函数的</strong><code>this</code><strong>指向,参数只可一个一个指明</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">window</span>.name = <span class="hljs-string">&#x27;Yun&#x27;</span><br><span class="hljs-built_in">window</span>.age = <span class="hljs-number">20</span><br><br><span class="hljs-keyword">const</span> A = &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Lin&#x27;</span>,<br>  <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>,<br>&#125;<br><br><span class="hljs-keyword">const</span> msg = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>&#123;<br>  alert(<span class="hljs-string">`name: <span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.name&#125;</span>, age: <span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.age&#125;</span>, args: <span class="hljs-subst">$&#123;a&#125;</span>, <span class="hljs-subst">$&#123;b&#125;</span>`</span>)<br>&#125;<br><br>msg(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br><span class="hljs-comment">// name: Yun, age: 20, args: 1, 2</span><br>msg.apply(A, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br><span class="hljs-comment">// name: Lin, age: 19, args: 1, 2</span><br></code></pre></div></td></tr></table></figure><p><a class="btn" onclick="msg(1, 2);msg.call(A, 1, 2);">结果</a></p><h2 id="闭包">闭包</h2><h2 id="尾调用优化">尾调用优化</h2><h3 id="条件">🍒条件</h3><ul><li><strong>在严格模式下</strong></li><li><strong>调用函数的返回值即为外层函数返回值</strong></li><li><strong>调用函数未使用外层函数闭包变量</strong></li></ul><h3 id="section"></h3><h2 id="高阶函数">高阶函数</h2><h2 id="柯里化">柯里化</h2><div class="note note-info">            <p><strong>参考文档:</strong></p><p>《JavaScript高级程序设计 第四版》</p>          </div>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>函数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript防抖与节流</title>
    <link href="/2022/02/20/JavaScript%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81/"/>
    <url>/2022/02/20/JavaScript%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81/</url>
    
    <content type="html"><![CDATA[<style>    .tips {        background: #787;        color: #fff;        padding: 10px;    }    .input{        border-radius: 5px;        width: 100%;        background: #787;        color: #fff;        outline: none;        border: none;        padding-left: 2em;    }    .input:focus {        outline: none;    }    .input::placeholder {        color: #fff    }</style><h2 id="防抖">防抖</h2><p><strong>事件频繁触发时只在到时间阈值时才触发</strong></p><p><strong>可应用于搜索引擎的搜索框以避免频繁的网络请求</strong></p><div><strong>未应用节流的输入框:</strong> <input class="input" placeholder="请输入" maxlength="50" oninput="event.target.nextElementSibling.innerText = `正在搜索: ${event.target.value}`"><p></p></div><div><strong>应用节流的输入框:</strong> <input id="input1" class="input" placeholder="请输入" maxlength="50" oninput="(event) => { alert('asd'); let timer = null return () =&gt; { if(timer) clearTimeout(timer) timer = setTimeout(() =&gt; event.target.nextElementSibling.innerText = <code>您输入的内容: $&#123;event.target.value&#125;</code>, 1000);}}" &gt; <p><p></p></div><script>    const Input1 = document.getElementById('input1')    const func = (event) => {        event.nextElementSibling.innerText = `正在搜索: ${event.value}`    }    const debounce = function(func, wait) {      let timeout;      return function () {        let [context, args] = [this, arguments];        if (timeout) clearTimeout(timeout);        timeout = setTimeout(() => {            func(context)        }, wait);      }    };  Input1.oninput = debounce(func, 500)</script><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>防抖</tag>
      
      <tag>节流</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗CSS响应式设计</title>
    <link href="/2022/02/19/CSS%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1/"/>
    <url>/2022/02/19/CSS%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="媒体查询">媒体查询</h1><h2 id="media"><span class="citation" data-cites="media">@media</span></h2><div class="note note-info">            <p><strong>参考文档:</strong></p><p><a href="https://www.w3school.com.cn/cssref/pr_mediaquery.asp">《CSS@media规则 (w3school)》</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>✔CSS过渡与动画</title>
    <link href="/2022/02/18/CSS%E8%BF%87%E6%B8%A1%E4%B8%8E%E5%8A%A8%E7%94%BB/"/>
    <url>/2022/02/18/CSS%E8%BF%87%E6%B8%A1%E4%B8%8E%E5%8A%A8%E7%94%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="过渡">过渡</h1><style>    .transition {      padding: 10px;      background: #787;      color: #fff;      display: inline-block;    }</style><p><strong>当可动画的值变化时可响应过渡效果</strong></p><h2 id="transition-property属性">transition-property属性</h2><h3 id="all">🍍all</h3><p><strong>设置</strong><code>all</code><strong>表示所有可动画属性变化时均触发过渡</strong></p><h3 id="指定属性">🍍指定属性</h3><p><strong>指定的可动画属性变化时触发过渡,多个属性以逗号间隔</strong></p><h3 id="none">🍍none</h3><h2 id="transition-duration属性">transition-duration属性</h2><p><strong>该属性设置过渡持续时间,不设置或为</strong><code>0</code><strong>不会触发过渡效果</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transition-duration</span>: <span class="hljs-number">1s</span>;<br>  <span class="hljs-attribute">transition-property</span>: padding, transform;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下(鼠标移至或手指点击元素触发):</strong></p><style>.duration:hover{  transform: rotate(180deg);  padding: 15px;}</style><p><span class="transition duration" style="transition-duration: 1s;transition-property: transform, padding;">效果</span></p><h2 id="transition-delay属性">transition-delay属性</h2><p><strong>该属性设置可动画属性改变多久后触发过渡</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transition-delay</span>: <span class="hljs-number">2s</span>;<br>  <span class="hljs-attribute">transition-duration</span>: <span class="hljs-number">1s</span>;<br>  <span class="hljs-attribute">transition-property</span>: background-color, padding;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下(鼠标移至或手指点击元素触发):</strong></p><p>​ <span class="transition duration" style="transition-delay: 2s;transition-duration: 1s;transition-property: transform, padding;" onclick>效果</span></p><h2 id="transition-timing-function属性">transition-timing-function属性</h2><p><strong>设置过渡时属性变化速度(默认</strong><code>ease-in-out</code><strong>)</strong></p><p><strong>可用</strong><code>cubic-bezier</code><strong>函数绘制更多动画曲线</strong></p><style>    .timing {        --width: 20%;    }    .timing:hover{        --width: 100%;    }    .timing>div {        transition: all 2s;        padding: 10px;        background: #787;        color: #fff;        width: var(--width);        white-space: nowrap;        text-overflow: ellipsis;        overflow: hidden;    }</style><p>​</p><div class="timing"><div style="transition-timing-function:linear;">linear</div><div style="transition-timing-function:ease-in;">ease-in</div><div style="transition-timing-function:ease-out;">ease-out</div><div style="transition-timing-function:ease;-in-out">ease-in-out</div><div style="transition-timing-function:cubic-bezier(0, 1, 1, 0);">cubic-bezier(0, 1, 1, 0)</div><div style="transition-timing-function:cubic-bezier(0.5, 1, 1, 0.5);">cubic-bezier(0.5, 1, 1, 0.5)</div><div style="transition-timing-function:cubic-bezier(0, 2, 1, -2);">cubic-bezier(0, 2, 1, -2)</div></div><h2 id="transition属性">transition属性</h2><p><strong>该属性用于简写动画属性</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transition</span>: padding <span class="hljs-number">1s</span> ease, width <span class="hljs-number">2s</span> linear;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="动画">动画</h1><h2 id="keyframes关键字"><span class="citation" data-cites="keyframes关键字">@keyframes关键字</span></h2><p><strong>可用该关键字定义动画,</strong><code>@keyframes [动画名] &#123;&#125;</code><strong>来添加动画</strong></p><p><strong>在</strong><code>from</code><strong>块中填写第一帧样式</strong></p><p><strong>在</strong><code>to</code><strong>块中填写最后一帧样式</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-keyword">@keyframes</span> myAnimation&#123;<br>  <span class="hljs-selector-tag">from</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">20%</span>;<br>  &#125;<br>  <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>也可使用百分比定义中间帧的样式</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-keyword">@keyframes</span> myAnimation&#123;<br>  <span class="hljs-number">0%</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">20%</span>;<br>  &#125;<br>  <span class="hljs-number">66%</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">125%</span><br>  &#125;<br>  <span class="hljs-number">100%</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="animation-name">animation-name</h2><p><strong>该属性设置应用的动画</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">animation-name</span>: myAnimation;<br>&#125;<br><br><span class="hljs-keyword">@keyframes</span> myAnimation &#123;<br>  <span class="hljs-selector-tag">from</span>&#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">20%</span>;<br>  &#125;<br>  <span class="hljs-selector-tag">to</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="animation-duration">animation-duration</h2><p><strong>该属性设置动画持续时间</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">animation-name</span>: myAnimation;<br>  <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">4s</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><style>    .animation{        color: #fff;        background: #787;        padding: 10px;    }    @keyframes myAnimation {  from{    width: 20%;  }  to {    width: 100%;  }}</style><div class="animation" onclick="event.target.style.animation=&#39;4s myAnimation ease-in-out 1&#39;;setTimeout(()=&gt;event.target.style.animation=&#39;none&#39;, 4000);">点击展示动画</div><h2 id="animation-timing-function">animation-timing-function</h2><p><strong>设置过渡时属性变化速度(默认</strong><code>ease-in-out</code><strong>)</strong></p><p><strong>可用</strong><code>cubic-bezier</code><strong>函数绘制更多动画曲线</strong></p><p><strong>同</strong><a href="#transition-timing-function属性">transition-timing-function</a></p><h2 id="animation-delay">animation-delay</h2><p><strong>设置延时多久后执行动画</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">animation-name</span>: myAnimation;<br>  <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">4s</span>;<br>  <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">2s</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><div class="animation" onclick="event.target.style.animation=&#39;4s myAnimation ease-in-out 2s&#39;;setTimeout(()=&gt;event.target.style.animation=&#39;none&#39;, 6000);">点击展示动画</div><h2 id="animation-iteration-count">animation-iteration-count</h2><p><strong>该属性设置动画重复次数(默认1次)</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">animation-name</span>: myAnimation;<br>  <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">4s</span>;<br>  <span class="hljs-attribute">animation-iteration-count</span>: <span class="hljs-number">2</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><style>    @keyframes myAnimation2{        from {            transform:rotate(0);        }        to {            transform:rotate(360deg);        }    }</style><div class="animation" onclick="event.target.style.animation=&#39;2s myAnimation ease-in-out 2&#39;;setTimeout(()=&gt;event.target.style.animation=&#39;none&#39;, 4000);">点击展示动画</div><h3 id="infinite">🍒infinite</h3><p><strong>设置次数为</strong><code>infinite</code><strong>一直重复</strong></p><p><strong>效果如下:</strong></p><div class="animation" style="animation: 3s myAnimation infinite"></div><h2 id="animation-direction">animation-direction</h2><p><strong>该属性设置动画的播放方式</strong></p><h3 id="normal默认">🍕normal(默认)</h3><p><strong>效果如下:</strong></p><div class="animation" onclick="event.target.style.animation=&#39;4s myAnimation ease-in-out 1 normal&#39;;setTimeout(()=&gt;event.target.style.animation=&#39;none&#39;, 4000);">点击展示动画</div><h3 id="reverse">🍕reverse</h3><p><strong>效果如下:</strong></p><div class="animation" onclick="event.target.style.animation=&#39;4s myAnimation ease-in-out 1 reverse&#39;;setTimeout(()=&gt;event.target.style.animation=&#39;none&#39;, 4000);">点击展示动画</div><h3 id="alternate">🍕alternate</h3><p><strong>正反动画均会占用一次</strong><code>animation-iteration-count</code></p><p><strong>效果如下:</strong></p><div class="animation" onclick="event.target.style.animation=&#39;4s myAnimation 2 ease-in-out alternate&#39;;setTimeout(()=&gt;event.target.style.animation=&#39;none&#39;, 8000);">点击展示动画</div><h3 id="alternate-reverse">🍕alternate-reverse</h3><p><strong>正反动画均会占用一次</strong><code>animation-iteration-count</code></p><p><strong>效果如下:</strong></p><div class="animation" onclick="event.target.style.animation=&#39;4s myAnimation ease-in-out 2 alternate-reverse&#39;;setTimeout(()=&gt;event.target.style.animation=&#39;none&#39;, 8000);">点击展示动画</div><h2 id="animation-fill-mode">animation-fill-mode</h2><p><strong>该属性设置动画开始前与结束后元素的样式是否跟随动画首末帧改变</strong></p><p><strong>(动画设有两秒延时,刷新重开😀)</strong></p><h3 id="none默认">🥕none(默认)</h3><p><strong>开始前与结束后均不改变</strong></p><div class="animation" onclick="event.target.style.animation=&#39;4s myAnimation 2 ease-in-out 2s alternate&#39;;">点击载入动画</div><h3 id="forwards">🥕forwards</h3><p><strong>结束后改变</strong></p><div class="animation" onclick="event.target.style.animation=&#39;4s myAnimation 2 ease-in-out 2s alternate forwards&#39;;">点击载入动画</div><h3 id="backwards">🥕backwards</h3><p><strong>开始前改变(包括延时期间)</strong></p><div class="animation" onclick="event.target.style.animation=&#39;4s myAnimation 2 ease-in-out 2s alternate backwards&#39;;">点击载入动画</div><h3 id="both">🥕both</h3><p><strong>均改变</strong></p><div class="animation" onclick="event.target.style.animation=&#39;4s myAnimation 2 ease-in-out 2s alternate both&#39;;">点击载入动画</div><h2 id="animation-play-state">animation-play-state</h2><p><strong>该属性设置动画暂停(</strong><code>paused</code><strong>)或执行(</strong><code>running</code><strong>)</strong></p><div class="animation" style="animation: 3s myAnimation infinite" onclick="event.target.style.animationPlayState = event.target.style.animationPlayState == &#39;paused&#39; ? &#39;running&#39; : &#39;paused&#39;;">点击暂停/继续</div><h2 id="animation">animation</h2><p><strong>动画属性的简写</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">animation</span>: myAnimation;<br>  <span class="hljs-attribute">animation-duration</span>: <span class="hljs-number">4s</span>;<br>  <span class="hljs-attribute">animation-timing-function</span>: ease;<br>  <span class="hljs-attribute">animation-delay</span>: <span class="hljs-number">1s</span>;<br>  <span class="hljs-attribute">animation-iteration-count</span>: infinite;<br>  <span class="hljs-attribute">animation-direction</span>: alternate;<br>  <span class="hljs-attribute">animation-fill-mode</span>: both;<br>  <span class="hljs-attribute">animation-play-state</span>: running;<br>&#125;<br><span class="hljs-comment">/* 等价缩写 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">animation</span>: myAnimation <span class="hljs-number">4s</span> ease <span class="hljs-number">1s</span> infinite alternate both running;<br>&#125;<br></code></pre></div></td></tr></table></figure><div class="animation" onclick="event.target.style.animation=&#39;myAnimation 4s ease 1s infinite alternate both running&#39;">点击插入动画</div><h1 id="小demo">小Demo</h1><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">  <span class="hljs-selector-id">#loading</span>&#123;</span><br><span class="css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-id">#loading</span> <span class="hljs-selector-tag">td</span>&#123;</span><br><span class="css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">3px</span>;</span><br><span class="css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;</span><br><span class="css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">60px</span>;</span><br><span class="css">    <span class="hljs-attribute">animation</span>: rotate <span class="hljs-number">3s</span> linear infinite;</span><br><span class="css">    <span class="hljs-attribute">animation-delay</span>: <span class="hljs-built_in">calc</span>(-<span class="hljs-number">0.1s</span>*<span class="hljs-built_in">var</span>(--i));</span><br><span class="css">    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">3px</span>;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-keyword">@keyframes</span> rotate &#123;</span><br><span class="css">    <span class="hljs-number">0%</span>&#123;</span><br><span class="css">      <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">17</span>, <span class="hljs-number">128</span>, <span class="hljs-number">255</span>);</span><br><span class="css">      <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-built_in">rgb</span>(<span class="hljs-number">17</span>, <span class="hljs-number">128</span>, <span class="hljs-number">255</span>);</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateX</span>(<span class="hljs-number">0deg</span>);</span><br><span class="css">    &#125;</span><br><span class="css">    <span class="hljs-number">50%</span>&#123;</span><br><span class="css">      <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">75</span>, <span class="hljs-number">255</span>, <span class="hljs-number">135</span>);</span><br><span class="css">      <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-built_in">rgb</span>(<span class="hljs-number">75</span>, <span class="hljs-number">255</span>, <span class="hljs-number">135</span>);</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateX</span>(<span class="hljs-number">180deg</span>);</span><br><span class="css">    &#125;</span><br><span class="css">    <span class="hljs-number">100%</span>&#123;</span><br><span class="css">      <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">17</span>, <span class="hljs-number">128</span>, <span class="hljs-number">255</span>);</span><br><span class="css">      <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-built_in">rgb</span>(<span class="hljs-number">17</span>, <span class="hljs-number">128</span>, <span class="hljs-number">255</span>);</span><br><span class="css">      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateX</span>(<span class="hljs-number">360deg</span>);</span><br><span class="css">    &#125;</span><br><span class="css">  &#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loading&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">  <span class="hljs-keyword">const</span> LOAD = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">const</span> BOX = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;loading&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">while</span>(n--)&#123;</span><br><span class="javascript">      <span class="hljs-keyword">const</span> BAR = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;td&#x27;</span>)</span><br><span class="javascript">      BAR.setAttribute(<span class="hljs-string">&#x27;style&#x27;</span>, <span class="hljs-string">`--i:<span class="hljs-subst">$&#123;n&#125;</span>`</span>)</span><br><span class="javascript">      BOX.appendChild(BAR)</span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;</span><br><span class="javascript">  LOAD(<span class="hljs-number">20</span>)</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><style>#loading{display: flex;}#loading td{ margin: 3px;width: 10px;height: 60px;animation: 3s rotate linear infinite;animation-delay: calc(-0.1s*var(--i));border-radius: 3px;} @keyframes rotate {0%{background-color: rgb(17, 128, 255);box-shadow: 2px 2px 2px rgb(17, 128, 255);transform: rotateX(0deg);}50%{background-color: rgb(75, 255, 135);box-shadow: 2px 2px 2px rgb(75, 255, 135);transform: rotateX(180deg);}100%{background-color: rgb(17, 128, 255);box-shadow: 2px 2px 2px rgb(17, 128, 255);transform: rotateX(360deg);}}</style><div style="display: flex;justify-content: center"><div id="loading"></div></div><script>    const LOAD = function(n){        const BOX = document.getElementById('loading')        while(n--){            const BAR = document.createElement('td')            BAR.setAttribute('style', `--i:${n}`)            BOX.appendChild(BAR)        }    }    LOAD(20)</script><div class="note note-info">            <p><strong>参考文档:</strong></p><p><a href="https://www.w3school.com.cn/css/index.asp">《CSS教程 (w3school)》</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗CSS布局</title>
    <link href="/2022/02/17/CSS%E5%B8%83%E5%B1%80/"/>
    <url>/2022/02/17/CSS%E5%B8%83%E5%B1%80/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p><strong>本节子元素均默认设有以下属性</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#787</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">15px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>          </div><h1 id="flexbox布局">Flexbox布局</h1><style>    .flex {        display: flex !important;        border-radius: 5px !important;        background: #666 !important;    }    .flex > div {        background: #787 !important;        padding: 10px 15px !important;        margin: 5px !important;        color: #fff !important;    }    .flex > div::selection {        background: #787 !important;    }</style><h2 id="父容器属性">父容器属性</h2><h3 id="display设置">🍓display设置</h3><p><strong>将容器</strong><code>display</code><strong>属性设为</strong><code>flex</code><strong>(自动继承),容器成为一个</strong><code>Flex</code><strong>容器</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex"><div class="q">1</div><div>2</div><div>3</div><div>4</div></div><h3 id="flex-direction属性">🍓flex-direction属性</h3><p><strong>该属性设置子元素的排列方向</strong></p><h4 id="row默认">📌row(默认)</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-direction</span>: row;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="flex-direction: row;"><div>1</div><div>2</div><div>3</div><div>4</div></div><h4 id="row-reverse">📌row-reverse</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-direction</span>: row-reverse;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="flex-direction: row-reverse;"><div>1</div><div>2</div><div>3</div><div>4</div></div><h4 id="column">📌column</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-direction</span>: column;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="flex-direction: column;"><div>1</div><div>2</div><div>3</div><div>4</div></div><h4 id="column-reverse">📌column-reverse</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-direction</span>: column-reverse;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="flex-direction: column-reverse;"><div>1</div><div>2</div><div>3</div><div>4</div></div><h3 id="flex-wrap属性">🍓flex-wrap属性</h3><p><strong>该属性设置</strong><code>Flex</code><strong>容器子元素过多时是否换行</strong></p><h4 id="nowrap默认">📌nowrap(默认)</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-wrap</span>: nowrap;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">600px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="max-width: 600px;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div><div>10</div><div>11</div><div>12</div><div>13</div><div>14</div><div>15</div><div>16</div></div><h4 id="wrap">📌wrap</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-wrap</span>: wrap;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">600px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="flex-wrap: wrap;max-width: 600px;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div><div>10</div><div>11</div><div>12</div><div>13</div><div>14</div><div>15</div><div>16</div></div><h4 id="wrap-reverse">📌wrap-reverse</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-wrap</span>: wrap-reverse;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">600px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="flex-wrap: wrap-reverse;max-width: 600px;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div><div>10</div><div>11</div><div>12</div><div>13</div><div>14</div><div>15</div><div>16</div></div><h3 id="flex-flow属性">🍓flex-flow属性</h3><p><strong>该属性简写</strong><code>flex-direction</code><strong>和</strong><code>flex-wrap</code></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-direction</span>: column;<br>  <span class="hljs-attribute">flex-wrap</span>: wrap;<br>&#125;<br><span class="hljs-comment">/* 下面是等价写法 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-flow</span>: column wrap;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="justify-content属性">🍓justify-content属性</h3><p><strong>该属性设置主轴轴线的排列方式</strong></p><h4 id="flex-start默认">📌flex-start(默认)</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: flex-start;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="justify-content: flex-start;"><div>1</div><div>2</div><div>3</div><div>4</div></div><h4 id="flex-end">📌flex-end</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: flex-end;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="justify-content: flex-end;"><div>1</div><div>2</div><div>3</div><div>4</div></div><h4 id="center">📌center</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="justify-content: center;"><div>1</div><div>2</div><div>3</div><div>4</div></div><h4 id="space-around">📌space-around</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: space-around;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="justify-content: space-around;"><div>1</div><div>2</div><div>3</div><div>4</div></div><h4 id="space-between">📌space-between</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: space-between;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="justify-content: space-between;"><div>1</div><div>2</div><div>3</div><div>4</div></div><h3 id="align-items属性">🍓align-items属性</h3><p><strong>该属性用于设置交叉轴元素的排列方式</strong></p><h4 id="stretch默认">📌stretch(默认)</h4><p><strong>拉伸元素以填充空余(若元素尺寸固定则无效)</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">align-items</span>: stretch;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="align-items: stretch;height: 100px;"><div>1</div><div>2</div><div>3</div><div>4</div></div><h4 id="flex-start">📌flex-start</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">align-items</span>: flex-start;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="align-items: flex-start;height: 100px;"><div>1</div><div>2</div><div>3</div><div>4</div></div><h4 id="flex-end-1">📌flex-end</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">align-items</span>: flex-end;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="align-items: flex-end;height: 100px;"><div>1</div><div>2</div><div>3</div><div>4</div></div><h4 id="center-1">📌center</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="align-items: center;height: 100px;"><div>1</div><div>2</div><div>3</div><div>4</div></div><h4 id="baseline">📌baseline</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">align-items</span>: baseline;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下(已设置不同的字体大小):</strong></p><div class="flex" style="align-items: baseline;height: 100px;"><div style="font-size: 0.5rem">1</div><div style="font-size: 1rem">2</div><div style="font-size: 1.5rem">3</div><div style="font-size: 2rem">4</div></div><h3 id="align-content属性">🍓align-content属性</h3><p><strong>该属性设置不同交叉轴的排列方式</strong></p><h4 id="stretch默认-1">📌stretch(默认)</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-wrap</span>: wrap;<br>  <span class="hljs-attribute">align-content</span>: stretch;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="align-content: stretch;height: 200px;max-width: 500px;flex-wrap: wrap;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div><div>10</div><div>11</div><div>12</div><div>13</div><div>14</div><div>15</div><div>16</div></div><h4 id="flex-start-1">📌flex-start</h4><h4 id="section"></h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-wrap</span>: wrap;<br>  <span class="hljs-attribute">align-content</span>: flex-start;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="align-content: flex-start;height: 200px;max-width: 500px;flex-wrap: wrap;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div><div>10</div><div>11</div><div>12</div><div>13</div><div>14</div><div>15</div><div>16</div></div><h4 id="flex-end-2">📌flex-end</h4><h4 id="section-1"></h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-wrap</span>: wrap;<br>  <span class="hljs-attribute">align-content</span>: flex-end;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="align-content: flex-end;height: 200px;max-width: 500px;flex-wrap: wrap;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div><div>10</div><div>11</div><div>12</div><div>13</div><div>14</div><div>15</div><div>16</div></div><h4 id="center-2">📌center</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-wrap</span>: wrap;<br>  <span class="hljs-attribute">align-content</span>: center;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="align-content: center;height: 200px;max-width: 500px;flex-wrap: wrap;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div><div>10</div><div>11</div><div>12</div><div>13</div><div>14</div><div>15</div><div>16</div></div><h4 id="space-between-1">📌space-between</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-wrap</span>: wrap;<br>  <span class="hljs-attribute">align-content</span>: space-between;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="align-content: space-between;height: 200px;max-width: 500px;flex-wrap: wrap;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div><div>10</div><div>11</div><div>12</div><div>13</div><div>14</div><div>15</div><div>16</div></div><h4 id="space-around-1">📌space-around</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-wrap</span>: wrap;<br>  <span class="hljs-attribute">align-content</span>: space-around;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex" style="align-content: space-around;height: 200px;max-width: 500px;flex-wrap: wrap;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div><div>10</div><div>11</div><div>12</div><div>13</div><div>14</div><div>15</div><div>16</div></div><h2 id="子元素属性">子元素属性</h2><h3 id="order属性">🍌order属性</h3><p><strong>该属性用于指定元素的排列顺序,若顺序重复则再按定义顺序排列(默认为0,顺序为定义顺序)</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;flexbox&quot;</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 已设置不同order --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;order: 4&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;order: 1&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;order: 0&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;order: 1&quot;</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex"><div style="order: 4">1</div><div style="order: 1">2</div><div style="order: 3">3</div><div style="order: 1">4</div></div><h3 id="flex-grow属性">🍌flex-grow属性</h3><p><strong>该属性用于设置元素占取空余区域的相对大小(默认值为0,不拉伸)</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;flexbox&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;flex-grow: 0&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;flex-grow: 1&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;flex-grow: 1.5&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;flex-grow: 3&quot;</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><style>    @keyframes width {        0% {            max-width: 200px;         }        100% {            max-width: 100%;        }    }</style><div class="flex" style="animation: width 4s linear infinite;"><div style="flex-grow: 0">1</div><div style="flex-grow: 1">2</div><div style="flex-grow: 1.5">3</div><div style="flex-grow: 3">4</div></div><h3 id="flex-shrink属性">🍌flex-shrink属性</h3><p><strong>该属性设置当空间不足时元素相对收缩的大小(默认为0)</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;flexbox&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; flex-shrink: 0;&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; flex-shrink: 1;&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; flex-shrink: 1.5;&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; flex-shrink: 3;&quot;</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><style>    @keyframes width2 {        0% {            max-width: 100%;         }        100% {            max-width: 300px;        }    }</style><div class="flex" style="animation: width2 4s linear infinite;"><div style="width: 100px;flex-shrink: 0">1</div><div style="width: 100px;flex-shrink: 1">2</div><div style="width: 100px;flex-shrink: 1.5">3</div><div style="width: 100px;flex-shrink: 3">4</div></div><h3 id="flex-basis">🍌flex-basis</h3><p><strong>该属性设置元素主轴方向初始长度</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;flexbox&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;flex-basis: 40px&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;flex-basis: 50px&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;flex-basis: 60px&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;flex-basis: 70px&quot;</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="flex"><div style="flex-basis: 40px">1</div><div style="flex-basis: 50px">2</div><div style="flex-basis: 60px">3</div><div style="flex-basis: 70px">4</div></div><h3 id="flex属性">🍌flex属性</h3><p><code>flex-grow</code><strong>,</strong><code>flex-shrink</code><strong>,</strong><code>flex-basis</code><strong>的缩写</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">2</span>;<br>  <span class="hljs-attribute">flex-shrink</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">flex-basis</span>: <span class="hljs-number">20px</span>;<br>&#125;<br><span class="hljs-comment">/* 等价缩写 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">flex</span>: <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">20px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="align-self属性">🍌align-self属性</h3><p><strong>对单个元素设置不同的</strong><code>align-items</code><strong>属性,单个元素的属性值与效果同</strong><code>align-items</code></p><h1 id="grid网格布局">Grid网格布局</h1><h2 id="网格容器">网格容器</h2><h3 id="创建grid">🍍创建grid</h3><p><strong>将元素</strong><code>display</code><strong>属性设为</strong><code>grid</code><strong>或</strong><code>inline-grid</code></p><h4 id="grid">📌grid</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><style>    .grid {        display: grid;        border-radius: 5px;        background: #666;    }    .grid > div {        background: #787;        padding: 10px 15px;        margin: 5px;        color: #fff;    }    .grid > div::selection {        background: #787;    }</style><div style="border: black solid 3px;">块级<div class="grid" style="grid-template-columns: auto auto;width: 50%"><div>1</div><div>2</div><div>3</div><div>4</div></div>网格</div><h4 id="inline-grid">📌inline-grid</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: inline-grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: auto auto;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div style="border: black solid 3px;">行内<div class="grid" style="display: inline-grid;grid-template-columns: auto auto;width: 50%"><div>1</div><div>2</div><div>3</div><div>4</div></div>网格</div><h3 id="grid-template-columns属性">🍍grid-template-columns属性</h3><p><strong>该属性设置网格容器列数与各列的宽度</strong></p><h4 id="基础使用">📌基础使用</h4><p><code>auto</code><strong>为自动设置宽度(均分剩余空间)</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-number">50px</span> <span class="hljs-number">70px</span> auto auto;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><div class="grid" style="grid-template-columns: 50px 70px auto auto;animation: width2 4s linear infinite;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h4 id="repeat方法">📌repeat()方法</h4><p><code>repeat(n, value)</code><strong>重复n次</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-number">5px</span> <span class="hljs-number">5px</span> auto auto auto;<br>&#125;<br><span class="hljs-comment">/* 等价于 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">2</span>, <span class="hljs-number">5px</span>) <span class="hljs-built_in">repeat</span>(<span class="hljs-number">3</span>, auto);<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>auto-fill</code><strong>作为重复次数可自动重复最大次数</strong></p><p><strong>使用两次</strong><code>auo-fill</code><strong>或</strong><code>repeat(auto-fill, auto)</code><strong>会失败(只有一列)</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(auto-fill, <span class="hljs-number">60px</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><div style="height: 250px"><div class="grid" style="grid-template-columns: repeat(auto-fill, 60px);animation: width 4s linear infinite;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div></div><h4 id="fr单位">📌fr单位</h4><p><strong>表示占余下空间的份额(占比=设置份额/总份额)</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: gird;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-number">1</span>fr <span class="hljs-number">2</span>fr <span class="hljs-number">3</span>fr <span class="hljs-number">4</span>fr;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><div class="grid" style="grid-template-columns: 1fr 2fr 3fr 4fr;animation: width2 4s linear infinite;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h3 id="grid-template-rows">🍍grid-template-rows</h3><p><strong>该属性设置网格容器行数与各行的高度,若元素多出则向下以</strong><code>auto</code><strong>行填充</strong></p><p><code>grid-template-columns</code><strong>属性设置均可用于该属性</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: auto auto;<br>  grid-template-rows: <span class="hljs-number">50px</span> <span class="hljs-number">70px</span> auto;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="grid-template-rows: 50px 70px auto;grid-template-columns: auto auto;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h3 id="justify-content属性-1">🍍justify-content属性</h3><p><strong>该属性设置各列的排列方式,宽度未设或过小时失效</strong></p><h4 id="space-evenly">📌space-evenly</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">4</span>, auto);<br>  <span class="hljs-attribute">justify-content</span>: space-evenly;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="grid-template-columns: repeat(4, auto); justify-content: space-evenly;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h4 id="space-around-2">📌space-around</h4><p><strong>与</strong><code>space-evenly</code><strong>的区别是:</strong></p><p><code>space-evenly</code><strong>每个元素之间和外侧有一个空隙,两个相邻元素间有一个空隙</strong></p><p><code>space-around</code><strong>每个元素两边有一个空隙,两个相邻元素间有两个空隙</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">4</span>, auto);<br>  <span class="hljs-attribute">justify-content</span>: space-around;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="grid-template-columns: repeat(4, auto); justify-content: space-around;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h4 id="space-between-2">📌space-between</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">4</span>, auto);<br>  <span class="hljs-attribute">justify-content</span>: space-between;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="grid-template-columns: repeat(4, auto); justify-content: space-between;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h4 id="start">📌start</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">4</span>, auto);<br>  <span class="hljs-attribute">justify-content</span>: start;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="grid-template-columns: repeat(4, auto); justify-content: start;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h4 id="end">📌end</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">4</span>, auto);<br>  <span class="hljs-attribute">justify-content</span>: end;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="grid-template-columns: repeat(4, auto); justify-content: end;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h4 id="center-3">📌center</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">4</span>, auto);<br>  <span class="hljs-attribute">justify-content</span>: center;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="grid-template-columns: repeat(4, auto); justify-content: center;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h3 id="align-content属性-1">🍍align-content属性</h3><p><strong>该属性设置各行的排列方式,高度未设或过小时失效</strong></p><h4 id="space-evenly-1">📌space-evenly</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">4</span>, auto);<br>  <span class="hljs-attribute">align-content</span>: space-evenly;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">250px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="height: 250px;grid-template-columns: repeat(4, auto); align-content: space-evenly;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h4 id="space-around-3">📌space-around</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">4</span>, auto);<br>  <span class="hljs-attribute">align-content</span>: space-around;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">250px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="height: 250px;grid-template-columns: repeat(4, auto); align-content: space-around;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h4 id="space-between-3">📌space-between</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">4</span>, auto);<br>  <span class="hljs-attribute">align-content</span>: space-between;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="height: 250px;grid-template-columns: repeat(4, auto); align-content: space-between;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h4 id="start-1">📌start</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">4</span>, auto);<br>  <span class="hljs-attribute">align-content</span>: start;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="height: 250px;grid-template-columns: repeat(4, auto); align-content: start;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h4 id="end-1">📌end</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">4</span>, auto);<br>  <span class="hljs-attribute">align-content</span>: end;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="height: 250px;grid-template-columns: repeat(4, auto); align-content: end;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h4 id="center-4">📌center</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">4</span>, auto);<br>  <span class="hljs-attribute">align-content</span>: center;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="height: 250px;grid-template-columns: repeat(4, auto); align-content: center;"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div></div><h3 id="row-gap">🍍row-gap</h3><p><strong>设置行间距</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">3</span>, auto);<br>  row-gap: <span class="hljs-number">30px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="height: 250px;grid-template-columns: repeat(3, auto);row-gap: 30px"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div></div><h3 id="column-gap">🍍column-gap</h3><p><strong>设置列间距</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">3</span>, auto);<br>  row-gap: <span class="hljs-number">50px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="height: 250px;grid-template-columns: repeat(3, auto);column-gap: 50px"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div></div><h3 id="gap">🍍gap</h3><p><strong>行列间距缩写</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">display</span>: grid;<br>  grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">3</span>, auto);<br>  gap: <span class="hljs-number">30px</span> <span class="hljs-number">50px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="height: 250px;grid-template-columns: repeat(3, auto);gap: 30px 50px"><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div></div><h2 id="子元素设置">子元素设置</h2><h3 id="grid-row">🥝grid-row</h3><p><strong>设置元素所占行</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">  <span class="hljs-selector-class">.gridblock</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">display</span>: grid;</span><br><span class="css">    grid-template-<span class="hljs-attribute">columns</span>: auto auto auto auto;</span><br><span class="css">  &#125;</span><br><span class="css"></span><br><span class="css">  <span class="hljs-selector-class">.item1</span> &#123;</span><br><span class="css">    grid-row: <span class="hljs-number">1</span> / <span class="hljs-number">4</span>;</span><br><span class="css">  &#125;</span><br><span class="css"></span><br><span class="css">  <span class="hljs-selector-class">.item2</span> &#123;</span><br><span class="css">    grid-row: <span class="hljs-number">1</span> / span <span class="hljs-number">2</span>;</span><br><span class="css">  &#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;gridblock&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item1&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item2&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>6<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>7<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="grid-template-columns: auto auto auto auto;"><div style="grid-row: 1 / 4;">1</div><div style="grid-row: 1 / span 2;">2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div></div><h3 id="grid-column">🥝grid-column</h3><p><strong>设置元素所占列</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">  <span class="hljs-selector-class">.gridblock</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">display</span>: grid;</span><br><span class="css">    grid-template-<span class="hljs-attribute">columns</span>: auto auto auto auto;</span><br><span class="css">  &#125;</span><br><span class="css"></span><br><span class="css">  <span class="hljs-selector-class">.item1</span> &#123;</span><br><span class="css">    grid-column: <span class="hljs-number">1</span> / <span class="hljs-number">5</span>;</span><br><span class="css">  &#125;</span><br><span class="css"></span><br><span class="css">  <span class="hljs-selector-class">.item2</span> &#123;</span><br><span class="css">    grid-column: <span class="hljs-number">1</span> / span <span class="hljs-number">3</span>;</span><br><span class="css">  &#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;gridblock&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item1&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item2&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>6<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>7<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="grid-template-columns: auto auto auto auto;"><div style="grid-column: 1 / 5;">1</div><div style="grid-column: 1 / span 3;">2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div></div><h3 id="grid-area">🥝grid-area</h3><h4 id="gird-row与grid-column缩写">📌gird-row与grid-column缩写</h4><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-class">.item1</span> &#123;<br>  grid-row: <span class="hljs-number">1</span> / <span class="hljs-number">3</span>;<br>  grid-column: <span class="hljs-number">2</span> / span <span class="hljs-number">3</span>;<br>&#125;<br><span class="hljs-comment">/* 等价缩写 */</span><br><span class="hljs-selector-class">.item2</span> &#123;<br>  grid-area: <span class="hljs-number">1</span> / <span class="hljs-number">2</span> / <span class="hljs-number">3</span> / span <span class="hljs-number">3</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="grid-template-columns: auto auto auto auto;"><div style="grid-row: 1 / 3;grid-column: 2 / span 3;">class="item1"</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div></div><p><br></p><div class="grid" style="grid-template-columns: auto auto auto auto;"><div style="grid-area: 1 / 2 / 3 / span 3;">class="item2"</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div></div><h4 id="命名区域">📌命名区域</h4><p><code>grid-template-areas</code><strong>在父容器中命名区域(</strong><code>.</code><strong>表示没有名字的单元)</strong></p><p><code>grid-area</code><strong>使用命名的区域</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">  <span class="hljs-selector-class">.grid</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">display</span>: grid;</span><br><span class="css">    grid-template-<span class="hljs-attribute">columns</span>: <span class="hljs-built_in">repeat</span>(<span class="hljs-number">4</span>, auto);</span><br><span class="css">    grid-template-areas: <span class="hljs-string">&#x27;header header header header&#x27;</span></span><br><span class="css">                         <span class="hljs-string">&#x27;. main main aside&#x27;</span></span><br><span class="css">                         <span class="hljs-string">&#x27;. main main aside&#x27;</span></span><br><span class="css">                         <span class="hljs-string">&#x27;footer footer footer footer&#x27;</span>;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-tag">header</span> &#123;</span><br><span class="css">    grid-area: header;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-tag">main</span> &#123;</span><br><span class="css">    grid-area: main;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-tag">aside</span> &#123;</span><br><span class="css">    grid-area: aside;</span><br><span class="css">  &#125;</span><br><span class="css">  <span class="hljs-selector-tag">footer</span> &#123;</span><br><span class="css">    grid-area: footer;</span><br><span class="css">  &#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;grid&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span>我是Header<span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>未命名的区域1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>未命名的区域2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>我是Main<span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">aside</span>&gt;</span>我是Aside<span class="hljs-tag">&lt;/<span class="hljs-name">aside</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span>我是Footer<span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>效果如下:</strong></p><div class="grid" style="grid-template-columns: repeat(4, auto);grid-template-areas: &#39;header header header header&#39;&#39;. main main aside&#39;&#39;. main main aside&#39;&#39;footer footer footer footer&#39;;"><div style="grid-area: header">我是Header</div><div>未命名的区域1</div><div>未命名的区域2</div><div style="grid-area: main">我是Main</div><div style="grid-area: aside">我是Aside</div><div style="grid-area: footer">我是Footer</div></div><h1 id="float布局">Float布局</h1><div class="note note-info">            <p><strong>参考文档:</strong></p><p><a href="https://www.w3school.com.cn/css/index.asp">《CSS教程 (w3school)》</a></p><p><a href="https://zhuanlan.zhihu.com/p/29070363">《常见 CSS 布局 (Cherry)》</a></p><p><a href="https://zhuanlan.zhihu.com/p/256353171">《最强大的 CSS 布局 —— Grid 布局 (Gopal)》</a></p><p><a href="https://blog.csdn.net/zjy660358/article/details/113935300">《space-around space-evenly区别 (树欲静而风不止)》</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/gap">《gap (grid-gap) (MDN)》</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>✔CSS3空间变换</title>
    <link href="/2022/02/17/CSS3%E7%A9%BA%E9%97%B4%E5%8F%98%E6%8D%A2/"/>
    <url>/2022/02/17/CSS3%E7%A9%BA%E9%97%B4%E5%8F%98%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="d转换">2D转换</h1><h2 id="transform属性">transform属性</h2><p><strong>该属性用于元素的2D与3D转换</strong></p><h3 id="元素偏移">🥝元素偏移</h3><p><code>translate(posX, posY)</code><strong>相对原始位置偏移</strong><code>(posX, posY)</code></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(<span class="hljs-number">80px</span>, <span class="hljs-number">80px</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><style>  @keyframes translate{    0% {      transform: translate(0, 0);    }    100% {      transform: translate(80px, 80px);    }  }</style><div style="width:40px;height: 20px;background-color:#666;animation: translate 2s linear infinite;"></div><p><br></p><p><br></p><h3 id="元素旋转">🥝元素旋转</h3><p><code>rotate(ndeg)</code><strong>元素顺时针转动</strong><code>ndeg</code></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">360deg</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><style>  @keyframes rotate{    0% {      transform: rotate(0);    }    100% {      transform: rotate(360deg);    }  }</style><div style="width:40px;height: 20px;background-color:#666;animation: rotate 2s linear infinite;"></div><h3 id="元素缩放">🥝元素缩放</h3><ul><li><code>scaleX(x)</code><strong>元素宽度缩放</strong><code>x</code><strong>倍</strong></li><li><code>scaleY(y)</code><strong>元素高度缩放</strong><code>y</code><strong>倍</strong></li><li><code>scale(x, y)</code><strong>元素宽度缩放</strong><code>x</code><strong>倍,元素高度缩放</strong><code>y</code><strong>倍</strong></li></ul><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scaleX</span>(<span class="hljs-number">0.5</span>) <span class="hljs-built_in">scaleY</span>(<span class="hljs-number">2</span>);<br>  <span class="hljs-comment">/* 等效缩写 */</span><br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">0.5</span>, <span class="hljs-number">2</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><style>  @keyframes scale{    0% {      transform: scale(1, 1);    }    100% {      transform: scale(0.5, 2);    }  }</style><div style="width:40px;height: 20px;background-color:#666;animation: scale 2s linear infinite;"></div><h3 id="元素倾斜">🥝元素倾斜</h3><ul><li><code>skewX(ndeg)</code><strong>沿x轴倾斜</strong><code>ndeg</code></li><li><code>skewY(mdeg)</code><strong>沿y轴倾斜</strong><code>mdeg</code></li><li><code>skew(ndeg, mdeg)</code><strong>沿x轴倾斜</strong><code>ndeg</code><strong>,沿y轴倾斜</strong><code>mdeg</code></li></ul><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-comment">/* 动画一 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">skewX</span>(<span class="hljs-number">80deg</span>);<br>&#125;<br><span class="hljs-comment">/* 动画二 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">skewY</span>(<span class="hljs-number">80deg</span>);<br>&#125;<br><span class="hljs-comment">/* 动画三 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">skew</span>(<span class="hljs-number">80deg</span>, <span class="hljs-number">80deg</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><p><br></p><p><br></p><style>  @keyframes skew{    0% {      transform: skew(0, 0);    }    100% {      transform: skew(80deg);    }  }</style><div style="width:40px;height: 20px;background-color:#666;animation: skew 2s linear infinite;display: inline-block;"></div><style>  @keyframes skew2{    0% {      transform: skew(0, 0);    }    100% {      transform: skew(0, 80deg);    }  }</style><div style="margin-left: 50px;margin-right: 50px;width:40px;height: 20px;background-color:#666;animation: skew2 2s linear infinite;display: inline-block;"></div><style>  @keyframes skew3{    0% {      transform: skew(0, 0);    }    100% {      transform: skew(80deg, 80deg);    }  }</style><div style="width:40px;height: 20px;background-color:#666;animation: skew3 2s linear infinite;display: inline-block;"></div><p><br><br></p><h3 id="方法缩写">🥝方法缩写</h3><p><code>matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())</code><strong>以上方法的缩写</strong></p><p><strong>角度为其正切值</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scaleX</span>(<span class="hljs-number">0.5</span>) <span class="hljs-built_in">skewY</span>(<span class="hljs-number">80deg</span>) <span class="hljs-built_in">skewX</span>(<span class="hljs-number">80deg</span>) <span class="hljs-built_in">scaleY</span>(<span class="hljs-number">2</span>) <span class="hljs-built_in">translateX</span>(<span class="hljs-number">80px</span>) <span class="hljs-built_in">translateY</span>(<span class="hljs-number">80px</span>);<br>  <span class="hljs-comment">/* 等价缩写 */</span><br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">matrix</span>(<span class="hljs-number">0.5</span>, <span class="hljs-number">5.6</span>, <span class="hljs-number">5.6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">80</span>, <span class="hljs-number">80</span>);<br>  <span class="hljs-comment">/* tan(80deg) ≈ 5.6 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><style>  @keyframes matrix{    0% {        transform: matrix(1, 0, 0, 1, 0, 0);    }    100% {      transform: matrix(0.5, 5.6, 5.6, 2, 80, 80);    }  }</style><p><br><br></p><div style="width:40px;height: 20px;background-color:#666;animation: matrix 2s linear infinite;display: inline-block;"></div><p><br><br></p><p><br><br></p><h2 id="transform-origin">transform-origin</h2><p><strong>该属性用于改变元素旋转中心位置(默认原点为元素几何中心位置)</strong></p><ul><li><code>center</code> 50%</li><li><code>top</code><strong>/</strong><code>right</code> <strong>第一个参数</strong></li><li><code>bottom</code><strong>/</strong><code>left</code> <strong>第二个参数</strong></li></ul><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-comment">/* 动画一 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">/* 动画二(默认) */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">50%</span> <span class="hljs-number">50%</span>;<br>&#125;<br><span class="hljs-comment">/* 动画三 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><p><br></p><p><br></p><div style="width:40px;height: 20px;background-color:#666;transform-origin: 0 0;animation: rotate 2s linear infinite;display: inline-block;"></div><div style="margin-left: 50px;margin-right: 50px;width:40px;height: 20px;background-color:#666;animation: rotate 2s linear infinite;display: inline-block;"></div><div style="width:40px;height: 20px;background-color:#666;transform-origin: 100% 100%;animation: rotate 2s linear infinite;display: inline-block;"></div><h1 id="d转换-1">3D转换</h1><h2 id="transform属性-1">transform属性</h2><p><strong>该属性用于元素的2D与3D转换</strong></p><h3 id="元素移动">🍉元素移动</h3><ul><li><code>translateX(posX)</code><strong>向x轴正方向偏移</strong><code>posX</code></li><li><code>translateY(posY)</code><strong>向y轴正方向偏移</strong><code>posY</code></li><li><code>translateZ(posZ)</code><strong>向Z轴正方向偏移</strong><code>posZ</code></li><li><code>translate3d()</code><strong>向x轴正方向偏移</strong><code>posX</code></li></ul><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-comment">/* 动画一 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">80px</span>);<br>&#125;<br><span class="hljs-comment">/* 动画二 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">80px</span>);<br>&#125;<br><span class="hljs-comment">/* 动画三(默认z轴运动无`perspective`属性故看不出效果) */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateZ</span>(<span class="hljs-number">80px</span>);<br>&#125;<br><span class="hljs-comment">/* 动画四 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate3d</span>(<span class="hljs-number">80px</span>, <span class="hljs-number">80px</span>, <span class="hljs-number">80px</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><style>    @keyframes translateX {        0% {            transform: translateX(0);        }        100% {            transform: translateX(80px);        }    }    @keyframes translateY {        0% {            transform: translateY(0);        }        100% {            transform: translateY(80px);        }    }    @keyframes translateZ {        0% {            transform: translateZ(0);        }        100% {            transform: translateZ(80px);        }    }    @keyframes translate3d {        0% {            transform: translate3d(0);        }        100% {            transform: translate3d(80px, 80px, 80px);        }    }</style><div><div style="width:40px;height: 20px;background-color:#666;animation: translateX 2s linear infinite;display: inline-block;"></div><div style="margin-left: 50px;width:40px;height: 20px;background-color:#666;animation: translateY 2s linear infinite;display: inline-block;"></div><div style="perspective: 200px;margin-left: 50px;width:40px;height: 20px;background-color:#666;animation: translateZ 2s linear infinite;display: inline-block;"></div><div style="margin-left: 50px;width:40px;height: 20px;background-color:#666;animation: translate3d 2s linear infinite;display: inline-block;"></div></div><p><br></p><p><br></p><p><br></p><h3 id="元素旋转-1">🍉元素旋转</h3><ul><li><code>rotateX(ndeg)</code><strong>绕x轴顺时针旋转</strong><code>ndeg</code></li><li><code>rotateY(mdeg)</code><strong>绕y轴顺时针旋转</strong><code>mdeg</code></li><li><code>rotateZ(kdeg)</code><strong>绕z轴顺时针旋转</strong><code>kdeg</code></li><li><code>rotate3d(x, y, z, ndeg)</code><strong>绕x轴顺时针旋转</strong><code>(x * n)deg</code><strong>,绕y轴顺时针旋转</strong><code>(y * n)deg</code><strong>,绕z轴顺时针旋转</strong><code>(z * n)deg</code><strong>(x, y, z ∈ [0, 1])</strong></li></ul><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-comment">/* 动画一 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateX</span>(<span class="hljs-number">360deg</span>);<br>&#125;<br><span class="hljs-comment">/* 动画二 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">360deg</span>);<br>&#125;<br><span class="hljs-comment">/* 动画三 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateZ</span>(<span class="hljs-number">360deg</span>);<br>&#125;<br><span class="hljs-comment">/* 动画四 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate3d</span>(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">360deg</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><style>    @keyframes rotateX {        0% {            transform: rotateX(0);        }        100% {            transform: rotateX(360deg);        }    }    @keyframes rotateY {        0% {            transform: rotateY(0);        }        100% {            transform: rotateY(360deg);        }    }    @keyframes rotateZ {        0% {            transform: rotateZ(0);        }        100% {            transform: rotateZ(360deg);        }    }    @keyframes rotate3d {        0% {            transform: rotate3d(0);        }        100% {            transform: rotate3d(1, 1, 1, 360deg);        }    }</style><div style="width:40px;height: 20px;background-color:#666;animation: rotateX 2s linear infinite;display: inline-block;"></div><div style="margin-left: 50px;width:40px;height: 20px;background-color:#666;animation: rotateY 2s linear infinite;display: inline-block;"></div><div style="margin-left: 50px;width:40px;height: 20px;background-color:#666;animation: rotateZ 2s linear infinite;display: inline-block;"></div><div style="margin-left: 50px;width:40px;height: 20px;background-color:#666;animation: rotate3d 2s linear infinite;display: inline-block;"></div><h3 id="元素缩放-1">🍉元素缩放</h3><ul><li><code>scaleX(x)</code></li><li><code>scaleY(y)</code></li><li><code>scaleZ(z)</code></li><li><code>scale3d(x, y, z)</code></li></ul><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-comment">/* 动画一 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scaleX</span>(<span class="hljs-number">0.5</span>);<br>&#125;<br><span class="hljs-comment">/* 动画二 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scaleY</span>(<span class="hljs-number">2</span>);<br>&#125;<br><span class="hljs-comment">/* 动画三 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scaleZ</span>(<span class="hljs-number">2</span>);<br>&#125;<br><span class="hljs-comment">/* 动画四 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale3d</span>(<span class="hljs-number">0.5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><style>    @keyframes scaleX {        0% {            transform: scaleX(1)        }        100% {            transform: scaleX(0.5)        }    }    @keyframes scaleY {        0% {            transform: scaleY(1)        }        100% {            transform: scaleY(2)        }    }    @keyframes scaleZ {        0% {            transform: scaleZ(1)        }        100% {            transform: scaleZ(2)        }    }    @keyframes scale3d {        0% {            transform: scale3d(1, 1, 1)        }        100% {            transform: scale3d(0.5, 2, 2)        }    }</style><div style="width:40px;height: 20px;background-color:#666;animation: scaleX 2s linear infinite;display: inline-block;"></div><div style="margin-left: 50px;width:40px;height: 20px;background-color:#666;animation: scaleY 2s linear infinite;display: inline-block;"></div><div style="margin-left: 50px;width:40px;height: 20px;background-color:#666;animation: scaleZ 2s linear infinite;display: inline-block;"></div><div style="margin-left: 50px;width:40px;height: 20px;background-color:#666;animation: scale3d 2s linear infinite;display: inline-block;"></div><h3 id="方法缩写不推荐">🍉方法缩写(不推荐)</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">matrix3d</span>(?????)<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="transform-origin属性">transform-origin属性</h2><p><strong>元素在三维坐标下的元素旋转中心位置,同2D转换</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-comment">/* 动画一 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">50%</span> <span class="hljs-number">50%</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">360deg</span>);<br>&#125;<br><span class="hljs-comment">/* 动画二 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">50%</span> <span class="hljs-number">50%</span> -<span class="hljs-number">25px</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">360deg</span>);<br>&#125;<br><span class="hljs-comment">/* 动画三 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform-origin</span>: <span class="hljs-number">100%</span> <span class="hljs-number">50%</span> -<span class="hljs-number">25px</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">360deg</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><div><div style="width:40px;height: 20px;background-color:#666;animation: rotateY 2s linear infinite;display: inline-block;"></div><div style="transform-origin: 50% 50% -25px;margin-left: 50px;width:40px;height: 20px;background-color:#666;animation: rotateY 2s linear infinite;display: inline-block;"></div><div style="transform-origin: 100% 50% -25px;margin-left: 50px;width:40px;height: 20px;background-color:#666;animation: rotateY 2s linear infinite;display: inline-block;"></div><div><h2 id="transform-style属性">transform-style属性</h2><p><strong>该属性设至子元素在容器内的展示方式(该属性不会继承)</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-comment">/* 动画一父容器 */</span><br>.<span class="hljs-number">2</span>d &#123;<br>  <span class="hljs-attribute">transform-style</span>: flat;<br>&#125;<br><br><span class="hljs-comment">/* 动画二父容器 */</span><br>.<span class="hljs-number">3</span>d &#123;<br><span class="hljs-attribute">transform-style</span>: preserve-<span class="hljs-number">3</span>d;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><div style="width:100px;height: 50px;background: #666;animation: rotateY 10s linear infinite;"><div style="width:50px;height: 25px;background: #eee;animation: rotateY 2s linear infinite;"></div></div><p><br></p><div style="width:100px;height: 50px;background: #666;animation: rotateY 10s linear infinite;transform-style: preserve-3d"><div style="width:50px;height: 25px;background: #eee;animation: rotateY 2s linear infinite;"></div></div><h2 id="perspective属性">perspective属性</h2><p><strong>该属性表示子元素的透视效果,添加后子元素z轴运动有缩放效果</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-class">.perspective</span> &#123;<br>  <span class="hljs-attribute">perspective</span>: <span class="hljs-number">200px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.translate</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateZ</span>(<span class="hljs-number">80px</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 动画一 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;translate&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;perspective&quot;</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 动画二 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;translate&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><div style="display:inline-block;margin-right: 50px;"><div style="perspective: 200px;width:40px;height: 20px;background-color:#666;animation: translateZ 2s linear infinite;display: inline-block;"></div></div><div style="perspective: 200px;display: inline-block;"><div style="perspective: 200px;width:40px;height: 20px;background-color:#666;animation: translateZ 2s linear infinite;display: inline-block;"></div></div><h2 id="perspective-origin属性">perspective-origin属性</h2><p><strong>该属性设置子元素透视效果观察点位置,需配合</strong><code>perspective-origin</code><strong>属性使用</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-comment">/* 动画一父容器 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">perspective</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">perspective-origin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">/* 动画二父容器(默认) */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">perspective</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">perspective-origin</span>: <span class="hljs-number">50%</span> <span class="hljs-number">50%</span>;<br>&#125;<br><br><span class="hljs-comment">/* 动画三父容器 */</span><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">perspective</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">perspective-origin</span>: <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><div style="margin-right: 50px;perspective: 200px;display: inline-block;perspective-origin: 0% 0%;"><div style="perspective: 200px;width:40px;height: 20px;background-color:#666;animation: translateZ 2s linear infinite;display: inline-block;"></div></div><div style="margin-right: 50px;perspective: 200px;display: inline-block;"><div style="perspective: 200px;width:40px;height: 20px;background-color:#666;animation: translateZ 2s linear infinite;display: inline-block;"></div></div><div style="perspective: 200px;display: inline-block;perspective-origin: 100% 100%;"><div style="perspective: 200px;width:40px;height: 20px;background-color:#666;animation: translateZ 2s linear infinite;display: inline-block;"></div></div><h2 id="backface-visibility属性">backface-visibility属性</h2><p><strong>该属性设定元素背面是否可见(默认可见)</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateY</span>(<span class="hljs-number">360deg</span>);<br>  <span class="hljs-attribute">backface-visibility</span>: hidden;     <span class="hljs-comment">/* 动画一 */</span><br>  <span class="hljs-attribute">backface-visibility</span>: visible;    <span class="hljs-comment">/* 动画二 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>动画效果如下:</strong></p><div style="width:40px;height: 20px;background-color:#666;backface-visibility: hidden;animation: rotateY 2s linear infinite;display: inline-block;"></div><div style="margin-left: 50px;width:40px;height: 20px;background-color:#666;animation: rotateY 2s linear infinite;display: inline-block;"></div><div class="note note-info">            <p><strong>参考文档:</strong></p><p><a href="https://www.w3school.com.cn/css/index.asp">《CSS教程 (w3school)》</a></p><p><a href="https://blog.csdn.net/weixin_40283570/article/details/94571041">《css3基础知识点--transform 3D变换坐标系、perspective透视距离》阿俊的博客-CSDN博客</a></p>          </div></div></div>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗JavaScript动画</title>
    <link href="/2022/02/16/JavaScript%E5%8A%A8%E7%94%BB/"/>
    <url>/2022/02/16/JavaScript%E5%8A%A8%E7%94%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="动画间隔">动画间隔</h1><h2 id="requestanimationframe">requestAnimationFrame</h2><p><strong>接收一个函数地址,多次触发时会有节流效果,该函数同</strong><code>setInterval</code><strong>可返回一个</strong><code>id</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> example = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.example&#x27;</span>)<br><br>requestAnimationFrame(move)<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">move</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> margin = <span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;0&#x27;</span> + example.style.marginLeft)<br>  <span class="hljs-keyword">if</span>(margin &lt; <span class="hljs-number">80</span>)&#123;<br>    example.style.marginLeft = <span class="hljs-string">`<span class="hljs-subst">$&#123;margin+<span class="hljs-number">1</span>&#125;</span>%`</span><br>    requestAnimationFrame(move)<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><a class="btn" onclick="reStart()">查看效果</a></p><p class="example" style="width:40px;height: 20px;background:#787;"></p><script>    const example = document.querySelector('.example')    function move() {        const margin = parseInt('0' + example.style.marginLeft)    if(margin < 80){        example.style.marginLeft = `${margin+1}%`        requestAnimationFrame(move)        }   }    function reStart() {        example.style.marginLeft = 0        move()    }</script><h2 id="clearanimationframe">clearAnimationFrame</h2><p><strong>该方法同</strong><code>clearInterval</code><strong>方法,可停止</strong><code>requestAnimationFrame</code><strong>执行</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> animation = requestAnimationFrame(fill)<br>clearAnimationFrame(animation)                 <span class="hljs-comment">// 停止动画</span><br></code></pre></div></td></tr></table></figure><h1 id="canvas">canvas</h1><h2 id="canvas标签">canvas标签</h2><p><code>canvas</code><strong>标签使用</strong><code>JavaScript</code><strong>来绘制动画与图像</strong></p><p><strong>首先要获取标签对象</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> board = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;board&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h2 id="getcontext">getContext()</h2><p><strong>该方法用于获取</strong><code>canvas</code><strong>上下文</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> ctx = board.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h2 id="设置绘制属性">设置绘制属性</h2><h3 id="fillstyle">🥝fillStyle</h3><p><strong>设置填充内容属性</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">ctx.fillStyle = <span class="hljs-string">&#x27;#787;&#x27;</span><br>ctx.fillStyle = <span class="hljs-string">&#x27;rgba(119, 136, 119, 0.5)&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="strokestyle">🥝strokeStyle</h3><p><strong>设置边框属性</strong></p><h3 id="linewidth">🥝lineWidth</h3><p><strong>设置画笔粗细</strong></p><h2 id="绘制图像">绘制图像</h2><h3 id="矩形">🍉矩形</h3><h4 id="fillrect">📌fillRect</h4><p><code>fillRect(posX, posY, width, height)</code><strong>方法绘制实心矩阵</strong></p><p><strong>可用</strong><code>fillStyle</code><strong>设置填充样式</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">ctx.fillRect(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>)<br></code></pre></div></td></tr></table></figure><p><a class="btn" onclick="drawRect()">绘制</a></p><canvas class="rect" style="width: 100%;height: 100%;">该浏览器不支持canvas</canvas><script>    const rect = document.querySelector('.rect')    const rectCtx = rect.getContext('2d')    function drawRect() {    rectCtx.fillStyle = `rgb(${parseInt(Math.random() * 256)}, ${parseInt(Math.random() * 256)}, ${parseInt(Math.random() * 256)}, ${Math.random()})`    rectCtx.fillRect(50, 20, 80, 80)    rectCtx.fillStyle = `rgb(${parseInt(Math.random() * 256)}, ${parseInt(Math.random() * 256)}, ${parseInt(Math.random() * 256)}, ${Math.random()})`    rectCtx.fillRect(95, 65, 80, 80)    }</script><h4 id="strokerect">📌strokeRect</h4><p><code>strokeRect(posX, posY, width, height)</code><strong>方法绘制空心矩阵</strong></p><p><strong>可用</strong><code>strokeStyle</code><strong>设置边框样式</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">ctx.strokeRect(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>)<br></code></pre></div></td></tr></table></figure><p><a class="btn" onclick="drawStroke()">绘制</a></p><canvas class="stroke" style="width: 100%;height: 100%;">该浏览器不支持canvas</canvas><script>    const stroke = document.querySelector('.stroke')    const strokeCtx = stroke.getContext('2d')    function drawStroke() {    strokeCtx.strokeStyle = `rgb(${parseInt(Math.random() * 256)}, ${parseInt(Math.random() * 256)}, ${parseInt(Math.random() * 256)}, ${Math.random()})`    strokeCtx.strokeRect(50, 20, 80, 80)    strokeCtx.strokeStyle = `rgb(${parseInt(Math.random() * 256)}, ${parseInt(Math.random() * 256)}, ${parseInt(Math.random() * 256)}, ${Math.random()})`    strokeCtx.strokeRect(95, 65, 80, 80)    }</script><h4 id="clearrect">📌clearRect</h4><p><code>clearRect(posX, posY, width, height)</code><strong>方法擦除矩形内容</strong></p><p><a class="btn" onclick="clea()">擦除</a></p><canvas class="clear" style="width: 100%;height: 100%;">该浏览器不支持canvas</canvas><script>    const cle = document.querySelector('.clear')    const clearCtx = cle.getContext('2d')    clearCtx.fillStyle='#787'    clearCtx.fillRect(0, 0, 200, 200)    function clea(){        clearCtx.clearRect(parseInt(Math.random() * 200), parseInt(Math.random() * 200), 10, 10)    }</script><h3 id="曲线">🍉曲线</h3><h4 id="beginpath">📌beginPath()</h4><p><strong>使用</strong><code>beginPath()</code><strong>开始绘制新路径</strong></p><h4 id="closepath">📌closePath()</h4><p><strong>连接路径终点与起点</strong></p><h4 id="stroke">📌stroke()</h4><p><strong>用线条描绘路径,可用</strong><code>strokeStyle</code><strong>设置画笔样式</strong></p><h4 id="fill">📌fill()</h4><p><strong>填充闭合路径,可用</strong><code>fillStyle</code><strong>设置填充样式</strong></p><p><strong>若曲线未闭合则隐式调用</strong><code>closePath()</code></p><h4 id="movetox-y">📌moveTo(x, y)</h4><p><strong>将画笔光标移至</strong><code>(x, y)</code></p><h4 id="linetox-y">📌lineTo(x, y)</h4><p><strong>链接上一坐标至</strong><code>(x, y)</code></p><h4 id="arcx-y-radius-startangle-endangle-direction">📌arc(x, y, radius, startAngle, endAngle, direction)</h4><p><strong>绘制圆弧路径</strong></p><ul><li><code>x, y</code>--------------------------------<strong>圆心坐标</strong></li><li><code>radius</code>-----------------------------<strong>半径</strong></li><li><code>startAngle, endAngle</code>---------<strong>圆弧始末角度(弧度制)</strong></li><li><code>direction</code>------------------------<strong>是否顺时针绘制</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">arcCtx.beginPath()<br>arcCtx.arc(<span class="hljs-number">120</span>, <span class="hljs-number">60</span>, <span class="hljs-number">50</span>, <span class="hljs-number">.785</span>, -<span class="hljs-number">.785</span>, <span class="hljs-literal">false</span>)<br>arcCtx.stroke()<br><br>arcCtx.beginPath()<br>arcCtx.arc(<span class="hljs-number">260</span>, <span class="hljs-number">60</span>, <span class="hljs-number">50</span>, <span class="hljs-number">.785</span>, -<span class="hljs-number">.785</span>, <span class="hljs-literal">false</span>)<br>arcCtx.fill()<br></code></pre></div></td></tr></table></figure><canvas class="arc" style="width: 50%;height: 50%;border: 5px solid #fa8b83;background: #787">该浏览器不支持canvas</canvas><script>  const ARC = document.querySelector('.arc')  const arcCtx = ARC.getContext('2d')  arcCtx.beginPath()  arcCtx.arc(90, 70, 50, .785, -.785, false)  arcCtx.stroke()  arcCtx.beginPath()  arcCtx.arc(230, 70, 50, .785, -.785, false)  arcCtx.fill()</script><h4 id="arctox1-y1-x2-y2-radius">📌arcTo(x1, y1, x2, y2, radius)</h4><p><strong>用半径</strong><code>radius</code><strong>的圆弧连接上一坐标和</strong><code>(x2, y2)</code><strong>,圆弧在上一坐标与</strong><code>(x2, y2)</code><strong>的切线交于</strong><code>(x1, y1)</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">ctx.beginPath()<br>ctx.moveTo(<span class="hljs-number">70</span>, <span class="hljs-number">100</span>)<br>ctx.arcTo(<span class="hljs-number">220</span>, <span class="hljs-number">10</span>, <span class="hljs-number">420</span>, <span class="hljs-number">300</span>, <span class="hljs-number">80</span>)<br>ctx.stroke()<br></code></pre></div></td></tr></table></figure><ul><li><strong>红色</strong><code>(x1, y1)</code></li><li><strong>黄色</strong><code>(x2, y2)</code></li><li><strong>白色</strong><code>上一坐标</code></li></ul><canvas class="arcto" style="width: 50%;height: 50%;border: 5px solid #fa8b83;background: #787">该浏览器不支持canvas</canvas><script>  const ARCTO = document.querySelector('.arcto')  const arcToCtx = ARCTO.getContext('2d')  arcToCtx.beginPath()  arcToCtx.moveTo(70, 100)  arcToCtx.arcTo(220, 10, 420, 300, 80)  arcToCtx.stroke()  arcToCtx.fillStyle = 'red'    arcToCtx.fillRect(220, 10, 3, 3)  arcToCtx.fillStyle = 'white'  arcToCtx.fillRect(69, 98, 3, 3)  arcToCtx.fillStyle = 'yellow'  arcToCtx.fillRect(260, 70, 3, 3)</script><h4 id="rectx-y-width-height">📌rect(x, y, width, height)</h4><p><strong>绘制矩形路径</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">ctx.beginPath()<br>ctx.rect(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">90</span>, <span class="hljs-number">90</span>)<br>ctx.stroke()<br><br>ctx.beginPath()<br>ctx.rect(<span class="hljs-number">120</span>, <span class="hljs-number">10</span>, <span class="hljs-number">90</span>, <span class="hljs-number">90</span>)<br>ctx.fill()<br></code></pre></div></td></tr></table></figure><canvas class="rect2" style="width: 50%;height: 50%;border: 5px solid #fa8b83;background: #787">该浏览器不支持canvas</canvas><script>  const rect2 = document.querySelector('.rect2')  const recCtx = rect2.getContext('2d')  recCtx.beginPath()  recCtx.rect(10, 10, 90, 90)  recCtx.stroke()  recCtx.beginPath()  recCtx.rect(120, 10, 90, 90)  recCtx.fill()</script><h4 id="quadraticcurvetocx-cy-x-y">📌quadraticCurveTo(cx, cy, x, y)</h4><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">ctx.beginPath()<br>ctx.moveTo(<span class="hljs-number">70</span>, <span class="hljs-number">100</span>)<br>ctx.quadraticCurveTo(<span class="hljs-number">90</span>, <span class="hljs-number">10</span>, <span class="hljs-number">220</span>, <span class="hljs-number">90</span>)<br>ctx.stroke()<br></code></pre></div></td></tr></table></figure><ul><li><strong>红色</strong><code>(cx, cy)</code></li><li><strong>黄色</strong><code>(x, y)</code></li><li><strong>白色</strong><code>上一坐标</code></li></ul><canvas class="quadratic" style="width: 50%;height: 50%;border: 5px solid #fa8b83;background: #787">该浏览器不支持canvas</canvas><script>  const quadratic = document.querySelector('.quadratic')  const qdtCtx = quadratic.getContext('2d')  qdtCtx.beginPath()  qdtCtx.moveTo(70, 100)  qdtCtx.quadraticCurveTo(90, 10, 220, 90)  qdtCtx.stroke()  qdtCtx.fillStyle = 'white'  qdtCtx.fillRect(69, 100, 3, 3)  qdtCtx.fillStyle = 'red'  qdtCtx.fillRect(90, 10, 3, 3)  qdtCtx.fillStyle = 'yellow'  qdtCtx.fillRect(220, 90, 3, 3)</script><h4 id="beziercurvetocx1-cy1-cx2-cy2-x-y">📌bezierCurveTo(cx1, cy1, cx2, cy2, x, y)</h4><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">ctx.beginPath()<br>ctx.moveTo(<span class="hljs-number">70</span>, <span class="hljs-number">100</span>)<br>ctx.bezierCurveTo(<span class="hljs-number">90</span>, <span class="hljs-number">10</span>, <span class="hljs-number">240</span>, <span class="hljs-number">30</span>,<span class="hljs-number">220</span>, <span class="hljs-number">90</span>)<br>ctx.stroke()<br></code></pre></div></td></tr></table></figure><ul><li><strong>红色</strong><code>(cx1, cy1)</code></li><li><strong>蓝色</strong><code>(cx2, cy2)</code></li><li><strong>黄色</strong><code>(x, y)</code></li><li><strong>白色</strong><code>上一坐标</code></li></ul><canvas class="bzr" style="width: 50%;height: 50%;border: 5px solid #fa8b83;background: #787">该浏览器不支持canvas</canvas><script>  const bzr = document.querySelector('.bzr')  const bzrCtx = bzr.getContext('2d')  bzrCtx.beginPath()  bzrCtx.moveTo(70, 100)  bzrCtx.bezierCurveTo(90, 10, 240, 30,220, 90)  bzrCtx.stroke()  bzrCtx.strokeStyle = '#666'  bzrCtx.beginPath()  bzrCtx.moveTo(70, 100)  bzrCtx.lineTo(91, 10)  bzrCtx.stroke()  bzrCtx.moveTo(240, 30)  bzrCtx.lineTo(220, 91)  bzrCtx.stroke()  bzrCtx.fillStyle = 'white'  bzrCtx.fillRect(69, 100, 3, 3)  bzrCtx.fillStyle = 'red'  bzrCtx.fillRect(90, 10, 3, 3)  bzrCtx.fillStyle = 'yellow'  bzrCtx.fillRect(219, 90, 3, 3)  bzrCtx.fillStyle = 'blue'  bzrCtx.fillRect(240, 30, 3, 3)</script><h3 id="字符">🍉字符</h3><h4 id="font">📌font</h4><p><strong>设置字体样式</strong></p><h4 id="textalign">📌textAlign</h4><p><strong>设置文本对齐方式</strong></p><h4 id="textbaseline">📌textBaseLine</h4><p><strong>文本基线</strong></p><h4 id="filltextcontext-x-y">📌fillText('context', x, y)</h4><p><strong>绘制文本</strong></p><h3 id="图像变换">🍉图像变换</h3><h4 id="rotaten-deg">📌rotate(n deg)</h4><p><strong>图像旋转</strong><code>n deg</code></p><h4 id="scale">📌scale()</h4><h4 id="translatex-y">📌translate(x, y)</h4><h4 id="transform">📌transform()</h4><h4 id="settransform">📌setTransform()</h4><h3 id="图像">🍉图像</h3><h4 id="drawimageimageobj-x-y">📌drawImage(imageObj, x, y)</h4><h4 id="section"></h4><h2 id="图片打码demo">图片打码Demo</h2><h3 id="html代码">🥕HTML代码</h3><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">  <span class="hljs-selector-class">.pic</span> &#123;</span><br><span class="css">    <span class="hljs-attribute">border</span>: <span class="hljs-number">5px</span> solid <span class="hljs-number">#fa8b83</span>;</span><br><span class="css">    <span class="hljs-attribute">max-width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">  &#125;</span><br><span class="css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pic&quot;</span>&gt;</span>该浏览器不支持canvas<span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="javascript代码">🥕JavaScript代码</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">// url=图片地址     n=马赛克矩形边长</span><br><span class="hljs-keyword">const</span> Mosaic = <span class="hljs-function">(<span class="hljs-params">url = <span class="hljs-string">&#x27;https://s3.bmp.ovh/imgs/2022/02/57d13c60b0c24d94.jpg&#x27;</span>, n = <span class="hljs-number">20</span></span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> pic = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.pic&#x27;</span>)<br>  <span class="hljs-keyword">const</span> ctx = pic.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>)<br><br>  <span class="hljs-keyword">const</span> image = <span class="hljs-keyword">new</span> Image();                              <span class="hljs-comment">// 导入图片</span><br>  [image.src, image.crossOrigin] = [url, <span class="hljs-string">&#x27;&#x27;</span>]              <span class="hljs-comment">// crossOrigin = &#x27;&#x27;用于解决跨域</span><br>  ctx.fillStyle = ctx.createPattern(image, <span class="hljs-string">&#x27;no-repeat&#x27;</span>)<br>  image.onload = <span class="hljs-function">() =&gt;</span> &#123;<br>    ;[pic.width, pic.height] = [image.width, image.height]<br>    ctx.drawImage(image, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br>    drawMosaic(image.width, image.height)                <span class="hljs-comment">// 调用打码函数</span><br>  &#125;<br>  <br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">drawMosaic</span>(<span class="hljs-params">x, y</span>) </span>&#123;                            <span class="hljs-comment">// 打码函数</span><br>    <span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;i &lt; x;i += n)&#123;<br>      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>;j &lt; y;j += n)&#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>          <span class="hljs-keyword">const</span> colorData = ctx.getImageData(i, j, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>).data<br>          ctx.fillStyle = <span class="hljs-string">`rgba(<span class="hljs-subst">$&#123;colorData[<span class="hljs-number">0</span>]&#125;</span>, <span class="hljs-subst">$&#123;colorData[<span class="hljs-number">1</span>]&#125;</span>, <span class="hljs-subst">$&#123;colorData[<span class="hljs-number">2</span>]&#125;</span>, <span class="hljs-subst">$&#123;colorData[<span class="hljs-number">3</span>]&#125;</span>)`</span><br>          ctx.fillRect(i, j, n, n)<br>        &#125;, (k++ * <span class="hljs-number">100</span> * n) / x)<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="效果展示">🥕效果展示</h3><p><a class="btn" onclick="Mosaic()">查看效果</a></p><style>  .pic {    border: 5px solid #fa8b83;    max-width: 100%;  }</style><canvas class="pic">该浏览器不支持canvas</canvas><script>    // url='图片地址'     n=马赛克矩形边长const Mosaic = (url = 'https://s3.bmp.ovh/imgs/2022/02/57d13c60b0c24d94.jpg', n = 30) => {  const pic = document.querySelector('.pic')  const ctx = pic.getContext('2d')  const image = new Image();                       // 导入图片  [image.src, image.crossOrigin] = [url, '']  ctx.fillStyle = ctx.createPattern(image, 'no-repeat')  image.onload = () => {    ;[pic.width, pic.height] = [image.width, image.height]    ctx.drawImage(image, 0, 0)    drawMosaic(image.width, image.height)         // 调用打码函数  }  function drawMosaic(x, y) {               // 打码函数    let k = 0    for(let i = 0;i < x;i += n){      for(let j = 0;j < y;j += n){        setTimeout(() => {          const colorData = ctx.getImageData(i, j, 1, 1).data          ctx.fillStyle = `rgba(${colorData[0]}, ${colorData[1]}, ${colorData[2]}, ${colorData[3]})`          ctx.fillRect(i, j, n, n)        }, (k++ * 200 * n) / x)      }    }  }}Mosaic()</script><div class="note note-info">            <p><strong>参考文档:</strong></p><p>《JavaScript高级程序设计 (第四版)》</p><p><a href="https://blog.csdn.net/qq_34025694/article/details/104793785">《HTML中canvas标签的弧线arcTo使用方法 (季大师)》</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>HTML5</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>动画</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗JavaScript网络与资源请求</title>
    <link href="/2022/02/15/JavaScript%E7%BD%91%E7%BB%9C%E4%B8%8E%E8%B5%84%E6%BA%90%E8%AF%B7%E6%B1%82/"/>
    <url>/2022/02/15/JavaScript%E7%BD%91%E7%BB%9C%E4%B8%8E%E8%B5%84%E6%BA%90%E8%AF%B7%E6%B1%82/</url>
    
    <content type="html"><![CDATA[<h2 id="xhr对象">XHR对象</h2><h3 id="创建xhr对象">🌽创建XHR对象</h3><p><strong>使用构造函数创建新</strong><code>XHR</code><strong>对象</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest()<br></code></pre></div></td></tr></table></figure><h3 id="open方法">🌽open方法</h3><p><code>XHR</code><strong>对象使用</strong><code>open(method, url, Boolean)</code><strong>方法定义请求</strong></p><table><thead><tr class="header"><th style="text-align: center;">参数</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>method</code></td><td style="text-align: center;"><strong>请求方式</strong></td></tr><tr class="even"><td style="text-align: center;"><code>url</code></td><td style="text-align: center;"><strong>相对路径或绝对路径</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>Boolean</code></td><td style="text-align: center;"><strong>是否异步执行</strong></td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">xhr.open(<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;XHR.txt&#x27;</span>, <span class="hljs-literal">false</span> )<br></code></pre></div></td></tr></table></figure><h3 id="send方法">🌽send方法</h3><p><code>XHR</code><strong>对象使用</strong><code>send(data)</code><strong>方法发送请求</strong></p><p><strong>当无数据发送时应传入</strong><code>null</code><strong>以兼容</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">xhr.send(<span class="hljs-literal">null</span>)<br>xhr.send()<br></code></pre></div></td></tr></table></figure><h3 id="xhr请求属性">🌽XHR请求属性</h3><p><strong>使用</strong><code>send</code><strong>方法后</strong><code>XHR</code><strong>对象以下属性会接收响应数据</strong></p><table><thead><tr class="header"><th style="text-align: center;">属性</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>status</code></td><td style="text-align: center;"><strong>状态码</strong></td></tr><tr class="even"><td style="text-align: center;"><code>statusText</code></td><td style="text-align: center;"><strong>状态文字描述</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>responseText</code></td><td style="text-align: center;"><strong>响应文本</strong></td></tr><tr class="even"><td style="text-align: center;"><code>responseXML</code></td><td style="text-align: center;"><strong>XML文档</strong></td></tr></tbody></table><h3 id="xhr阶段状态">🌽XHR阶段状态</h3><p><code>readyState</code><strong>属性可表示当前</strong><code>XHR</code><strong>状态信息</strong></p><table><thead><tr class="header"><th style="text-align: center;">属性值</th><th style="text-align: center;">状态</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>0</code></td><td style="text-align: center;"><strong>未初始化(未使用</strong><code>open</code><strong>)</strong></td></tr><tr class="even"><td style="text-align: center;"><code>1</code></td><td style="text-align: center;"><strong>已初始化(已使用</strong><code>open</code><strong>)</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>2</code></td><td style="text-align: center;"><strong>已发送(已使用</strong><code>send</code><strong>)</strong></td></tr><tr class="even"><td style="text-align: center;"><code>3</code></td><td style="text-align: center;"><strong>正在接收响应数据</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>4</code></td><td style="text-align: center;"><strong>已完成数据接收</strong></td></tr></tbody></table><p><strong>当状态改变时发生</strong><code>readystatechange</code><strong>事件,可以此添加监听器,该事件不传递</strong><code>event</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">xhr.onreadystatechange = <span class="hljs-function">() =&gt;</span> &#123;&#125;                             <span class="hljs-comment">// DOM0</span><br>xhr.addEventLisener(<span class="hljs-string">&#x27;readystatechange&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;&#125;, <span class="hljs-literal">false</span>)      <span class="hljs-comment">// DOM2</span><br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>abort()</code><strong>方法可将</strong><code>XHR</code><strong>对象状态直接变为</strong><code>4</code><strong>停止通信</strong></p><h3 id="http请求头">🌽HTTP请求头</h3><p><strong>在使用</strong><code>open</code><strong>方法后</strong><code>send</code><strong>方法前使用</strong><code>setRequestHeader(key, value)</code><strong>方法为请求头添加数据</strong></p><h3 id="http响应头">🌽HTTP响应头</h3><ul><li><code>getResponseHeader(key)</code><strong>获取对应响应头</strong></li><li><code>getAllResponseHeaders()</code><strong>获取所有信息</strong></li></ul><h2 id="xhr-2.0">XHR 2.0</h2><h3 id="formdata类型">🥕FormData类型</h3><p><strong>该类型可对表单数据进行序列化,并自动配置请求头</strong></p><p><code>append(key, value)</code><strong>可向表单添加数据</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> Data = <span class="hljs-keyword">new</span> FromData(<span class="hljs-built_in">document</span>.forms[<span class="hljs-number">0</span>])<br>Data.append(<span class="hljs-string">&#x27;Blog&#x27;</span>, <span class="hljs-string">&#x27;https://jon-a-than.github.io&#x27;</span>)<br>xhr.send(Data)<br></code></pre></div></td></tr></table></figure><h3 id="timeout">🥕timeout</h3><p><code>XHR</code><strong>对象的</strong><code>timeout</code><strong>属性设置请求判断超时时间(ms),超时后触发</strong><code>timeout</code><strong>事件,对象状态变为4</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">xhr.timeout = <span class="hljs-number">10000</span><br>xhr.addEventLisener(<span class="hljs-string">&#x27;timeout&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;&#125;)  <span class="hljs-comment">// DOM2</span><br>xhr.ontimeout = <span class="hljs-function">() =&gt;</span> &#123;&#125;                  <span class="hljs-comment">// DOM0</span><br></code></pre></div></td></tr></table></figure><h3 id="overridemimetype方法">🥕overrideMimeType方法</h3><p><strong>在使用</strong><code>send</code><strong>方法前调用</strong><code>overrideMimeType</code><strong>方法可强制改变响应头对响应的处理方式(MIME)</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">xhr.overrideMimeType(<span class="hljs-string">&#x27;text/plain&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h2 id="进度事件">进度事件</h2><table><thead><tr class="header"><th style="text-align: center;">事件</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>loadstart</code></td><td style="text-align: center;"><strong>接收到第一个响应字符</strong></td></tr><tr class="even"><td style="text-align: center;"><code>progress</code></td><td style="text-align: center;"><strong>接收响应时反复触发</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>error</code></td><td style="text-align: center;"><strong>请求出错</strong></td></tr><tr class="even"><td style="text-align: center;"><code>abort</code></td><td style="text-align: center;"><strong>调用</strong><code>abort</code><strong>方法</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>load</code></td><td style="text-align: center;"><strong>响应接收完</strong></td></tr><tr class="even"><td style="text-align: center;"><code>loadend</code></td><td style="text-align: center;"><strong>通信完成</strong></td></tr></tbody></table><h3 id="load">🍉load</h3><p><code>load</code><strong>事件可传递</strong><code>event</code><strong>参数,</strong><code>target</code><strong>属性指向</strong><code>XHR</code><strong>实例</strong></p><p><strong>无论请求是否成功均会触发</strong></p><h3 id="progress">🍉progress</h3><p><strong>在接收响应期间会反复触发</strong><code>progress</code><strong>事件,并可传递</strong><code>event</code><strong>参数</strong></p><p><code>event</code><strong>参数有以下额外属性</strong></p><table><thead><tr class="header"><th style="text-align: center;">属性</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>lengthComputable</code></td><td style="text-align: center;"><strong>进度信息是否可用</strong></td></tr><tr class="even"><td style="text-align: center;"><code>posision</code></td><td style="text-align: center;"><strong>已接收字节数</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>totalsize</code></td><td style="text-align: center;"><strong>总字节数</strong></td></tr></tbody></table><h2 id="跨源资源共享cors">跨源资源共享(CORS)</h2><h2 id="fetch-api">Fetch API</h2><h3 id="fetch参数">🍍Fetch参数</h3><p><code>fetch(url, [init])</code><strong>返回</strong><code>Promise</code><strong>对象解决为</strong><code>Response</code><strong>对象</strong></p><p><code>url</code><strong>为请求的绝对/相对路径</strong></p><p><code>init</code><strong>为以下的键值对</strong></p><h4 id="body">📌body</h4><h3 id="header对象">🍍Header对象</h3><p><code>Response</code><strong>或</strong><code>Request</code><strong>的</strong><code>header</code><strong>属性为一个</strong><code>Header</code><strong>实例</strong></p><p><strong>可使用构造函数创建实例,可传入可迭代对象或键值对初始化</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> header = <span class="hljs-keyword">new</span> Header(&#123;<span class="hljs-attr">id</span>: <span class="hljs-number">1</span>&#125;)<br><span class="hljs-keyword">const</span> header = <span class="hljs-keyword">new</span> Header(prams)<br></code></pre></div></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: center;">方法</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>get(key)</code>,<code>set(key, value)</code>,<code>has(key)</code>,<code>delete(key)</code></td><td style="text-align: center;"><strong>同</strong><code>Map</code> <a style="margin-bottom:-1.5px" class="btn">🔗前往查看</a></td></tr><tr class="even"><td style="text-align: center;"><code>keys()</code>,<code>values()</code>,<code>entries()</code></td><td style="text-align: center;"><strong>同</strong><code>Map</code> <a style="margin-bottom:-1.5px" class="btn">🔗前往查看</a></td></tr><tr class="odd"><td style="text-align: center;"><code>append(key, value)</code></td><td style="text-align: center;"><strong>添加数据</strong></td></tr></tbody></table><h4 id="头部护卫">📌头部护卫</h4><h3 id="request对象">🍍Request对象</h3><p><strong>可使用</strong><code>bodyUsed</code><strong>属性为</strong><code>false</code><strong>的</strong><code>Request</code><strong>实例传递给</strong><code>fetch</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> request = <span class="hljs-keyword">new</span> Request(<span class="hljs-string">&#x27;url&#x27;</span>, [init])     <span class="hljs-comment">// 可直接fetch该实例(bodyUsed必须为false)</span><br>fetch(request, &#123;<span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>&#125;)               <span class="hljs-comment">// init会覆盖先前设置</span><br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>new Requset(request)</code><strong>可复制</strong><code>request</code><strong>,但</strong><code>request</code><strong>的</strong><code>bodyUsed</code><strong>属性值会变为</strong><code>true</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> request2 = <span class="hljs-keyword">new</span> Requset(request)<br>fetch(request)                         <span class="hljs-comment">// 报错</span><br>fetch(request2)                        <span class="hljs-comment">// 正常</span><br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>clone()</code><strong>方法可复制一模一样的</strong><code>Request</code><strong>实例</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> request2 = request.clone()<br>fetch(request)                        <span class="hljs-comment">// 正常</span><br>fetch(request2)                       <span class="hljs-comment">// 正常</span><br></code></pre></div></td></tr></table></figure><h3 id="response对象">🍍Response对象</h3><h4 id="创建实例">📌创建实例</h4><p><strong>使用构造函数创建</strong><code>Response</code><strong>实例</strong></p><p><strong>可选参数有</strong><code>body</code><strong>(同</strong><code>fetch</code><strong>)和</strong><code>init</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> response = <span class="hljs-keyword">new</span> Response([body], [init])<br></code></pre></div></td></tr></table></figure><table><thead><tr class="header"><th style="text-align: center;"><code>init</code>选项</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>headers</code></td><td style="text-align: center;"><strong>键值对对象实例或</strong><code>Header</code><strong>实例</strong></td></tr><tr class="even"><td style="text-align: center;"><code>status</code></td><td style="text-align: center;"><strong>状态码</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>statusText</code></td><td style="text-align: center;"><strong>状态文本</strong></td></tr></tbody></table><h4 id="实例方法">📌实例方法</h4><table><thead><tr class="header"><th style="text-align: center;">方法</th><th style="text-align: center;">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>redirect('url', status)</code></td><td style="text-align: center;"><strong>接收重定向地址与重定向状态码返回重定向后的</strong><code>Response</code><strong>实例</strong></td></tr><tr class="even"><td style="text-align: center;"><code>error()</code></td><td style="text-align: center;"><strong>产生表示网络错误的</strong><code>Response</code><strong>对象</strong></td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">response.redirect(<span class="hljs-string">&#x27;test.txt&#x27;</span>, <span class="hljs-number">200</span>)              <span class="hljs-comment">// 状态码为非重定向状态码会报错</span><br></code></pre></div></td></tr></table></figure><h4 id="实例属性">📌实例属性</h4><table><colgroup><col style="width: 16%"><col style="width: 83%"></colgroup><thead><tr class="header"><th style="text-align: center;">属性</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>headers</code></td><td style="text-align: center;"><code>Header</code><strong>对象</strong></td></tr><tr class="even"><td style="text-align: center;"><code>ok</code></td><td style="text-align: center;"><code>2xx</code><strong>为</strong><code>true</code></td></tr><tr class="odd"><td style="text-align: center;"><code>redirected</code></td><td style="text-align: center;"><strong>是否重定向</strong></td></tr><tr class="even"><td style="text-align: center;"><code>status</code></td><td style="text-align: center;"><strong>状态码</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>statusText</code></td><td style="text-align: center;"><strong>状态文本</strong></td></tr><tr class="even"><td style="text-align: center;"><code>type</code></td><td style="text-align: center;"><code>basic</code>---------------------------------------------<strong>同源响应</strong><br><code>cors</code>-----------------------------------------------<strong>跨源响应</strong><br><code>error</code>------------------------------<strong>实例由error方法生成</strong><br><code>opaque</code>---------------<strong>使用</strong><code>no-cors</code><strong>的跨源</strong><code>fetch</code><strong>响应</strong><br><code>opaqueredirect</code>-<strong>对</strong><code>redirect</code><strong>设置为</strong><code>manual</code><strong>的响应</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>url</code></td><td style="text-align: center;"><strong>最终请求地址</strong></td></tr></tbody></table><h4 id="实例拷贝">📌实例拷贝</h4><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> response2 = <span class="hljs-keyword">new</span> Response(response)       <span class="hljs-comment">// response的bodyUsed不会变为true,但实例变为共享</span><br><span class="hljs-keyword">const</span> response2 = response.clone()             <span class="hljs-comment">// 不可对bodyUsed为true的实例使用</span><br></code></pre></div></td></tr></table></figure><h3 id="body-1">🍍body</h3><p><code>Request</code><strong>与</strong><code>Response</code><strong>实例均有只读的</strong><code>body</code><strong>和</strong><code>bodyUsed</code><strong>(</strong><code>ReadableStream</code><strong>是否摄受)属性以及五种转换方法</strong></p><table><thead><tr class="header"><th style="text-align: center;"><code>body</code>混入方法</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>text()</code></td><td style="text-align: center;"><strong>将缓冲区转换为</strong><code>UTF-8</code><strong>字符串</strong></td></tr><tr class="even"><td style="text-align: center;"><code>json()</code></td><td style="text-align: center;"><strong>将缓冲区转换为</strong><code>JSON</code></td></tr><tr class="odd"><td style="text-align: center;"><code>formData</code></td><td style="text-align: center;"><strong>将缓冲区转换为</strong><code>FromData</code><strong>实例</strong></td></tr><tr class="even"><td style="text-align: center;"><code>arrayBuffer()</code></td><td style="text-align: center;"><strong>将缓冲区转换为</strong><code>ArrayBuffer</code><strong>实例</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>blob()</code></td><td style="text-align: center;"><strong>将缓冲区转换为</strong><code>Blob</code><strong>实例</strong></td></tr></tbody></table><p><code>body</code><strong>混入方法只对</strong><code>bodyUsed</code><strong>属性为</strong><code>false</code><strong>的实例有效,且使用后</strong><code>bodyUsed</code><strong>变为</strong><code>true</code><strong>所以同一实例只可使用一次</strong></p><h2 id="beacon-api">Beacon API</h2><h2 id="web-socket">Web Socket</h2><div class="note note-info">            <p><strong>参考文档:</strong></p><p>《JavaScript高级程序设计 第四版》</p><p><a href="https://zh.javascript.info/xmlhttprequest">《现代JavaScript教程》</a></p><p><a href="https://www.ruanyifeng.com/blog/2020/12/fetch-tutorial.html">《 Fetch API 教程》(阮一峰)</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络请求</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗ES6迭代器</title>
    <link href="/2022/02/13/ES6%E8%BF%AD%E4%BB%A3%E5%99%A8/"/>
    <url>/2022/02/13/ES6%E8%BF%AD%E4%BB%A3%E5%99%A8/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>ES6</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>ES6</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗JavaScript事件</title>
    <link href="/2022/02/11/JavaScript%E4%BA%8B%E4%BB%B6/"/>
    <url>/2022/02/11/JavaScript%E4%BA%8B%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="事件流">事件流</h2><h3 id="事件捕获">🍉事件捕获</h3><p><strong>自顶层向深层传递</strong></p><h3 id="事件冒泡">🍉事件冒泡</h3><p><strong>自最深层向顶层传递</strong></p><h3 id="dom事件流">🍉DOM事件流</h3><h2 id="事件监听器">事件监听器</h2><p><code>on</code>+<code>事件名</code><strong>构成事件监听器</strong></p><h3 id="html标签使用监听器">🥑HTML标签使用监听器</h3><p><strong>在HTML标签内使用事件监听器属性可为元素绑定事件</strong></p><p><strong>此时</strong><code>this</code><strong>指向当前元素</strong></p><p><strong>触发事件后生成</strong><code>event</code><strong>参数描述事件(不可自定义改参数名)</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;alert(&#x27;Hellow World!&#x27;)&quot;</span>&gt;</span>Click<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></div></td></tr></table></figure><button class="btn" onclick="alert(&#39;Hellow World!&#39;)">Click</button><h3 id="dom事件监听器">🥑DOM事件监听器</h3><ul><li><strong>元素节点的事件监听器属性</strong> <span class="label label-success">DOM0</span></li></ul><p><strong>该属性接收一个处理函数处理事件,函数有可选参数传递</strong><code>event</code><strong>(可自定义该参数名)</strong></p><p><strong>当不使用箭头函数时</strong><code>this</code><strong>指向事件监听器绑定的元素节点</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> Button = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;butto&#x27;</span>)<br>Button.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>&#123;<br>  alert(<span class="hljs-string">&#x27;Hellow World!&#x27;</span>)<br>&#125;;<br></code></pre></div></td></tr></table></figure><p><br></p><ul><li><code>EventListener</code><strong>方法</strong> <span class="label label-success">DOM2</span></li></ul><p><code>addEventListener('eventName', (e) =&gt; &#123;&#125; [, Boolean])</code></p><p><strong>处理函数可接收</strong><code>event</code><strong>参数,</strong><code>this</code><strong>为事件监听器绑定的元素节点(箭头函数无)</strong></p><p><strong>可为同一事件绑定多个事件监听器</strong></p><p><strong>布尔值</strong> <code>true</code><strong>:事件捕获阶段,</strong><code>false</code><strong>:事件冒泡阶段(默认)</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> Button = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;butto&#x27;</span>)<br>Button.addEventListener(<br>  <span class="hljs-string">&#x27;click&#x27;</span>,<br>  <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>&#123;<br>    alert(<span class="hljs-string">&#x27;Hellow World!&#x27;</span>)<br>  &#125;, <span class="hljs-literal">false</span>)<br></code></pre></div></td></tr></table></figure><p><code>removeEventListener('eventName', (e) =&gt; &#123;&#125; [, Boolean])</code></p><p><strong>不可移除匿名函数, 需与创建时的函数相同</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> Say = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> alert(<span class="hljs-string">&#x27;Hellow World!&#x27;</span>)<br>Button.addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, Say, <span class="hljs-literal">false</span>)<br>Button.removeEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, Say, <span class="hljs-literal">false</span>)<br></code></pre></div></td></tr></table></figure><h2 id="事件对象">事件对象</h2><h2 id="section"></h2><h2 id="事件类型">事件类型</h2><h3 id="用户界面事件">🥦用户界面事件</h3><h3 id="焦点事件">🥦焦点事件</h3><p><strong>焦点转移时事件执行顺序,失去焦点事件在失焦元素触发,获得焦点事件在获得焦点的元素上触发</strong></p><table><thead><tr class="header"><th style="text-align: center;">事件名</th><th style="text-align: center;">触发事件</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>focusout</code> <span class="label label-success">支持冒泡</span></td><td style="text-align: center;"><strong>某元素失去焦点</strong></td></tr><tr class="even"><td style="text-align: center;"><code>foucusin</code> <span class="label label-success">支持冒泡</span></td><td style="text-align: center;"><strong>某元素获得焦点</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>blur</code> <span class="label label-warning">不支持冒泡</span></td><td style="text-align: center;"><strong>某元素失去焦点</strong></td></tr><tr class="even"><td style="text-align: center;"><code>DOMFocusOut</code> <span class="label label-danger">已废弃</span></td><td style="text-align: center;"><strong>某元素失去焦点</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>focus</code> <span class="label label-warning">不支持冒泡</span></td><td style="text-align: center;"><strong>某元素获得焦点</strong></td></tr><tr class="even"><td style="text-align: center;"><code>DOMFocusIn</code> <span class="label label-danger">已废弃</span></td><td style="text-align: center;"><strong>某元素获得焦点</strong></td></tr></tbody></table><h3 id="鼠标与滚轮事件">🥦鼠标与滚轮事件</h3><p><strong>除</strong><code>DOM3</code><strong>新事件外其它鼠标事件均可冒泡与取消</strong></p><table><thead><tr class="header"><th style="text-align: center;">事件名</th><th style="text-align: center;">触发事件</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>mousedown</code></td><td style="text-align: center;"><strong>任意鼠标键按下</strong></td></tr><tr class="even"><td style="text-align: center;"><code>mouseup</code></td><td style="text-align: center;"><strong>任意鼠标键弹起</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>click</code></td><td style="text-align: center;"><strong>鼠标单击或敲击回车</strong></td></tr><tr class="even"><td style="text-align: center;"><code>dblclick</code></td><td style="text-align: center;"><strong>鼠标双击主键</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>mouseenter</code> <span class="label label-success">DOM3</span></td><td style="text-align: center;"><strong>鼠标从元素外移入</strong></td></tr><tr class="even"><td style="text-align: center;"><code>mouseleave</code> <span class="label label-success">DOM3</span></td><td style="text-align: center;"><strong>鼠标移出本元素</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>mousemove</code></td><td style="text-align: center;"><strong>鼠标在元素上移动(多次触发)</strong></td></tr><tr class="even"><td style="text-align: center;"><code>mouseover</code></td><td style="text-align: center;"><strong>鼠标移至其它元素</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>mouseout</code></td><td style="text-align: center;"><strong>鼠标移至本元素</strong></td></tr><tr class="even"><td style="text-align: center;"><code>mousewheel</code></td><td style="text-align: center;"><strong>滚轮滚动</strong></td></tr></tbody></table><h4 id="鼠标位置">📌鼠标位置</h4><p><strong>鼠标事件触发</strong><code>event</code><strong>参数可传递触发时鼠标的位置</strong></p><table><thead><tr class="header"><th style="text-align: center;">属性</th><th style="text-align: center;">值</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>clientX</code><strong>/</strong><code>clientY</code></td><td style="text-align: center;"><strong>视口坐标</strong></td></tr><tr class="even"><td style="text-align: center;"><code>pageX</code><strong>/</strong><code>pageY</code></td><td style="text-align: center;"><strong>网页页面坐标</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>screenX</code><strong>/</strong><code>screenY</code></td><td style="text-align: center;"><strong>设备屏幕坐标</strong></td></tr></tbody></table><h4 id="修饰键">📌修饰键</h4><p><strong>鼠标事件触发</strong><code>event</code><strong>参数可传递触发时几个特殊键的状态</strong></p><table><thead><tr class="header"><th style="text-align: center;">属性</th><th style="text-align: center;">值</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>shiftKey</code></td><td style="text-align: center;"><code>shift</code><strong>键</strong></td></tr><tr class="even"><td style="text-align: center;"><code>ctrlKey</code></td><td style="text-align: center;"><code>shift</code><strong>键</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>altKey</code></td><td style="text-align: center;"><code>alt</code><strong>键</strong></td></tr><tr class="even"><td style="text-align: center;"><code>metaKey</code></td><td style="text-align: center;"><code>meta</code><strong>/</strong><code>win</code><strong>/</strong><code>command</code><strong>键</strong></td></tr></tbody></table><h3 id="键盘与输入事件">🥦键盘与输入事件</h3><table><thead><tr class="header"><th style="text-align: center;">事件名</th><th style="text-align: center;">触发事件</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>keydown</code></td><td style="text-align: center;"><strong>键按下</strong></td></tr><tr class="even"><td style="text-align: center;"><code>keypress</code> <span class="label label-danger">DOM3已废弃</span></td><td style="text-align: center;"><strong>产生字符前</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>keyup</code></td><td style="text-align: center;"><strong>键释放</strong></td></tr></tbody></table><h3 id="合成事件">🥦合成事件</h3><div class="note note-info">            <p><strong>参考文档:</strong></p><p>《JavaScript高级程序设计 第四版》</p>          </div>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>事件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗ES6代理(Proxy)与反射(Reflect)</title>
    <link href="/2022/02/10/ES6%E4%BB%A3%E7%90%86-Proxy/"/>
    <url>/2022/02/10/ES6%E4%BB%A3%E7%90%86-Proxy/</url>
    
    <content type="html"><![CDATA[<h1 id="proxy">Proxy</h1><p><strong>自定义代理对象的操作</strong></p><h2 id="创建代理">创建代理</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> obj = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Proxy</span>(target, handler)<br></code></pre></div></td></tr></table></figure><h3 id="操作捕获器">🥦操作捕获器</h3><table><thead><tr class="header"><th style="text-align: center;">捕获器</th><th style="text-align: center;">参数</th><th style="text-align: center;">对应操作</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>get(target, key, proxy)</code></td><td style="text-align: center;"><code>(原对象, 查询属性, 代理对象)</code></td><td style="text-align: center;"><strong>获取属性值</strong></td></tr><tr class="even"><td style="text-align: center;"><code>set(target, key, value, proxy)</code></td><td style="text-align: center;"><code>(原对象, 添加属性, 属性值, 代理对象)</code></td><td style="text-align: center;"><strong>设置属性值</strong></td></tr><tr class="odd"><td style="text-align: center;">``</td><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><h2 id="section"></h2><h1 id="reflect">Reflect</h1><p><strong>对象操作的默认行为</strong></p>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>ES6</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>Proxy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗客户端检测</title>
    <link href="/2022/02/05/%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%A3%80%E6%B5%8B/"/>
    <url>/2022/02/05/%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%A3%80%E6%B5%8B/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>BOM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>客户端检测</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML</title>
    <link href="/2022/02/04/HTML1/"/>
    <url>/2022/02/04/HTML1/</url>
    
    <content type="html"><![CDATA[<h1 id="全局属性">全局属性</h1><table><thead><tr class="header"><th style="text-align: center;">属性</th><th style="text-align: center;">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>class</code></td><td style="text-align: center;"><strong>类</strong></td></tr><tr class="even"><td style="text-align: center;"><code>id</code></td><td style="text-align: center;"><strong>id</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>lang</code></td><td style="text-align: center;"><strong>内容语言</strong></td></tr><tr class="even"><td style="text-align: center;"><code>style</code></td><td style="text-align: center;"><strong>行内样式</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>title</code></td><td style="text-align: center;"><strong>鼠标悬停提示信息</strong></td></tr><tr class="even"><td style="text-align: center;"><code>dir</code></td><td style="text-align: center;"><strong>内容文本方向</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>tabindex</code></td><td style="text-align: center;"><strong>tab键次序</strong></td></tr><tr class="even"><td style="text-align: center;"><code>accesskey</code></td><td style="text-align: center;"><strong>元素快捷键</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>contenteditable</code> <span class="label label-primary">H5</span></td><td style="text-align: center;"><strong>元素是否可编辑</strong></td></tr><tr class="even"><td style="text-align: center;"><code>data-xxx</code> <span class="label label-primary">H5</span></td><td style="text-align: center;"><strong>自定义属性</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>translate</code> <span class="label label-primary">H5</span></td><td style="text-align: center;"><strong>是否翻译此元素</strong></td></tr><tr class="even"><td style="text-align: center;"><code>spellcheck</code> <span class="label label-primary">H5</span></td><td style="text-align: center;"><strong>是否进行语法检查</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>draggable</code> <span class="label label-primary">H5</span></td><td style="text-align: center;"><strong>元素是否可拖动</strong></td></tr><tr class="even"><td style="text-align: center;"><code>dropzone</code> <span class="label label-danger">*H5</span></td><td style="text-align: center;"><strong>拖动方式</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>hidden</code> <span class="label label-primary">H5</span></td><td style="text-align: center;"><strong>是否隐藏元素</strong></td></tr><tr class="even"><td style="text-align: center;"><code>contextmenu</code> <span class="label label-danger">*H5</span></td><td style="text-align: center;"><strong>定义菜单</strong></td></tr></tbody></table><h1 id="表单标签">表单标签</h1><h2 id="form标签">&lt;form&gt;标签</h2><p><strong>该标签用于组合表单元素</strong></p><h3 id="action属性">🍌action属性</h3><h3 id="method属性">🍌method属性</h3><h3 id="name属性">🍌name属性</h3><h2 id="input-标签">&lt;input /&gt;标签</h2><h3 id="type属性">🥝type属性</h3><h3 id="section">🥝</h3>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
      <category>HTML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XHTML</title>
    <link href="/2022/02/04/XHTML/"/>
    <url>/2022/02/04/XHTML/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
      <category>XHTML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>XHTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML5</title>
    <link href="/2022/02/04/HTML5%E8%AF%AD%E4%B9%89%E5%8C%96/"/>
    <url>/2022/02/04/HTML5%E8%AF%AD%E4%B9%89%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="语义化与结构标签">语义化与结构标签</h2><table><thead><tr class="header"><th style="text-align: center;">标签</th><th style="text-align: center;">描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>&lt;main&gt;&lt;/main&gt;</code></td><td style="text-align: center;"><strong>主要内容(应至多只有一个)</strong></td></tr><tr class="even"><td style="text-align: center;"><code>&lt;header&gt;&lt;/headder&gt;</code></td><td style="text-align: center;"><strong>页眉</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>&lt;nav&gt;&lt;/nav&gt;</code></td><td style="text-align: center;"><strong>导航栏</strong></td></tr><tr class="even"><td style="text-align: center;"><code>&lt;aside&gt;&lt;/aside&gt;</code></td><td style="text-align: center;"><strong>侧栏</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>&lt;section&gt;&lt;/section&gt;</code></td><td style="text-align: center;"><strong>一节</strong></td></tr><tr class="even"><td style="text-align: center;"><code>&lt;mark&gt;🌿&lt;/mark&gt;</code></td><td style="text-align: center;"><strong>强调(背景色)</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>&lt;article&gt;&lt;/article&gt;</code></td><td style="text-align: center;"><strong>独立内容</strong></td></tr><tr class="even"><td style="text-align: center;"><code>&lt;figure&gt;&lt;/figure&gt;</code></td><td style="text-align: center;"><strong>存放图片,图表,代码块等</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>&lt;figcaption&gt;&lt;/figcaption&gt;</code></td><td style="text-align: center;"><strong>图片等的标题</strong></td></tr><tr class="even"><td style="text-align: center;"><code>&lt;footer&gt;&lt;/footer&gt;</code></td><td style="text-align: center;"><strong>页脚</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>&lt;time&gt;🌿&lt;/time&gt;</code></td><td style="text-align: center;"><strong>显示日期信息</strong></td></tr><tr class="even"><td style="text-align: center;"><code>&lt;summary&gt;&lt;/summary&gt;</code></td><td style="text-align: center;"><strong>details的标题</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>&lt;details&gt;&lt;/details&gt;</code></td><td style="text-align: center;"><strong>提供细节</strong></td></tr><tr class="even"><td style="text-align: center;"><code>&lt;bdi&gt;🌿&lt;/bdi&gt;</code></td><td style="text-align: center;"><strong>定义不同文本方向文本</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>&lt;menuitem&gt;&lt;/menuitem&gt;</code></td><td style="text-align: center;"></td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">details</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">summary</span>&gt;</span>点我查看细节<span class="hljs-tag">&lt;/<span class="hljs-name">summary</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>带有🌿标记的为<span class="hljs-tag">&lt;<span class="hljs-name">mark</span>&gt;</span>行内元素<span class="hljs-tag">&lt;/<span class="hljs-name">mark</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">details</span>&gt;</span><br></code></pre></div></td></tr></table></figure><details><summary>点我查看细节</summary><b>带有🌿标记的为<mark>行内元素</mark></b></details><h2 id="新表单元素">新表单元素</h2><h2 id="图像元素">图像元素</h2><h2 id="媒体元素">媒体元素</h2><h2 id="定位api">定位API</h2><h2 id="元素拖放">元素拖放</h2>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
      <category>HTML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗ES6原始类型的扩充</title>
    <link href="/2022/02/03/ES6%E5%8E%9F%E5%A7%8B%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%89%A9%E5%85%85/"/>
    <url>/2022/02/03/ES6%E5%8E%9F%E5%A7%8B%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%89%A9%E5%85%85/</url>
    
    <content type="html"><![CDATA[<h2 id="section"></h2><h2 id="map">Map</h2><h3 id="创建map">🍍创建Map</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> map = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()<br><span class="hljs-keyword">const</span> map = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>(array)<br></code></pre></div></td></tr></table></figure><h3 id="方法与属性">🍍方法与属性</h3><ul><li><code>set(key, value)</code><strong>新增(更新)</strong><code>key</code></li><li><code>has(key)</code><strong>是否有</strong><code>key</code></li><li><code>get(key)</code><strong>返回</strong><code>key</code><strong>的值,若未定义则返回</strong><code>undefined</code></li><li><code>delete(key)</code><strong>删除成功返回</strong><code>true</code><strong>反之为</strong><code>false</code></li><li><code>clear()</code><strong>清空此实例</strong></li><li><code>size</code><strong>该属性返回成员数</strong></li></ul><h3 id="遍历器">🍍遍历器</h3><h2 id="weakmap">WeakMap</h2><h2 id="set">Set</h2><h3 id="创建set">🍉创建Set</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> set = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>()<br><span class="hljs-keyword">const</span> set = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(array)<br></code></pre></div></td></tr></table></figure><h3 id="方法与属性-1">🍉方法与属性</h3><ul><li><code>add(value)</code><strong>添加</strong><code>value</code></li><li><code>has(value)</code><strong>是否有该</strong><code>value</code></li><li><code>delete(value)</code><strong>删除成功返回</strong><code>true</code><strong>反之为</strong><code>false</code></li><li><code>clear()</code><strong>清空此实例</strong></li><li><code>size</code><strong>该属性返回成员数</strong></li></ul><h3 id="遍历器-1">🍉遍历器</h3><h2 id="weakset">WeakSet</h2>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>ES6</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>ES6</tag>
      
      <tag>数据类型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗ES6类</title>
    <link href="/2022/02/03/ES6%E7%B1%BB/"/>
    <url>/2022/02/03/ES6%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h2 id="class">class</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">circle</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">r</span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.r = r<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-title">area</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.PI * <span class="hljs-built_in">this</span>.r * <span class="hljs-built_in">this</span>.r<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-title">perimeter</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">2</span> * <span class="hljs-built_in">Math</span>.PI * <span class="hljs-built_in">this</span>.r<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> a = <span class="hljs-keyword">new</span> circle(<span class="hljs-number">3</span>)<br><br><span class="hljs-keyword">const</span> a = <span class="hljs-keyword">new</span> circle()<br>a.constructor(<span class="hljs-number">3</span>)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>ES6</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>ES6</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗Nodejs</title>
    <link href="/2022/02/01/Nodejs/"/>
    <url>/2022/02/01/Nodejs/</url>
    
    <content type="html"><![CDATA[<h2 id="脚本运行">脚本运行</h2><h3 id="命令终端">🥕命令终端</h3><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">node app.js<br>node app<br></code></pre></div></td></tr></table></figure><h3 id="js代码">🥕JS代码</h3><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh"><span class="hljs-meta">#!/user/bin/node</span><br><span class="hljs-comment">#!/user/bin/env node</span><br></code></pre></div></td></tr></table></figure><h2 id="脚本关闭">脚本关闭</h2><h3 id="exit方法">🥬exit()方法</h3><p><strong>使用</strong><code>process.exit()</code><strong>方法可强制关闭所有任务</strong></p><p><strong>可设置</strong><code>process.exitCode = exitCode</code><strong>或直接执行</strong><code>process.exit(exitCode)</code><strong>来传递退出代码,默认为</strong><code>0</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">process.exit(<span class="hljs-number">0</span>)<br></code></pre></div></td></tr></table></figure><h2 id="事件循环">事件循环</h2><h3 id="调用堆栈">🍍调用堆栈</h3><h3 id="消息队列">🍍消息队列</h3><p><strong>在调用堆栈清空后执行消息队列</strong></p><h3 id="es6作业队列">🍍ES6作业队列</h3><h2 id="事件循环函数">事件循环函数</h2><h3 id="process.nextctick">🌿<code>process.nextcTick()</code></h3><p><strong>该函数的回调在下一事件循环开始前执行</strong></p><p><strong>在</strong><code>setTimeout(() =&gt; &#123;&#125;, 0)</code><strong>前执行</strong></p><h3 id="setimmediate">🌿<code>setImmediate()</code></h3><p><code>setImmediate()</code><strong>与</strong><code>setTimeout()</code><strong>的执行时机均在下一事件循环中</strong></p><p><code>setImmediate()</code><strong>与</strong><code>setTimeout(() =&gt; &#123;&#125;, 0)</code><strong>的执行优先级不定</strong></p><h3 id="settimeout">🌿<code>setTimeout()</code></h3><h3 id="setinterval">🌿<code>setInterval()</code></h3><div class="note note-info">            <p><strong>参考文档:</strong></p><p><a href="http://nodejs.cn/learn">《Node.js简介 (nodejs 中文网)》</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>Node.js</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Node.js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗JavaScriptDOM</title>
    <link href="/2022/01/30/JavaScriptDOM/"/>
    <url>/2022/01/30/JavaScriptDOM/</url>
    
    <content type="html"><![CDATA[<h1 id="节点类型">节点类型</h1><h2 id="node类型">Node类型</h2><h3 id="属性">🌿属性</h3><table><thead><tr class="header"><th style="text-align: center;">属性</th><th style="text-align: center;">值</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>nodeValue</code></td><td style="text-align: center;"><strong>节点值</strong></td></tr><tr class="even"><td style="text-align: center;"><code>nodeName</code></td><td style="text-align: center;"><strong>节点名称</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>nodeType</code></td><td style="text-align: center;"><strong>节点类型</strong></td></tr><tr class="even"><td style="text-align: center;"><code>childNodes</code></td><td style="text-align: center;"><strong>子节点信息</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>hasChildNodes</code></td><td style="text-align: center;"><strong>是否有子节点(返回布尔值)</strong></td></tr><tr class="even"><td style="text-align: center;"><code>parentNode</code></td><td style="text-align: center;"><strong>指向父节点</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>previousSibling</code></td><td style="text-align: center;"><strong>指向上一同级节点</strong></td></tr><tr class="even"><td style="text-align: center;"><code>nextSibling</code></td><td style="text-align: center;"><strong>指向下一同级节点</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>firstChild</code></td><td style="text-align: center;"><strong>指向子节点第一个节点</strong></td></tr><tr class="even"><td style="text-align: center;"><code>lastChild</code></td><td style="text-align: center;"><strong>指向子节点最后一节点</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>ownerDocument</code></td><td style="text-align: center;"><strong>指向文档节点</strong></td></tr><tr class="even"><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><h3 id="nodetype">🌿nodeType</h3><ol type="1"><li><code>Node.ELEMENT_NODE</code> <strong>元素节点</strong></li><li><code>Node.ATTRIBUTE_NODE</code> <span class="label label-danger">已弃用</span></li><li><code>Node.TEXT_NODE</code> <strong>元素或属性的文本</strong></li><li><code>Node.CDATA_SECTION_NODE</code>-</li><li><code>Node.ENTITY_REPERENCE_NODE</code> <span class="label label-danger">已弃用</span></li><li><code>Node.ENTITY_NODE</code> <span class="label label-danger">已弃用</span></li><li><code>Node.PROCESSING_INSTRUCTION_NODE</code></li><li><code>Node.COMMENT_NODE</code> <strong>注释节点</strong></li><li><code>Node.DOCUMENT_NODE</code></li><li><code>Node.DOCUMENT_TYPE_NODE</code></li><li><code>Node.DOCUMENT_FRAGMENT_NODE</code></li><li><code>Node.NOTATION_NODE</code> <span class="label label-danger">已弃用</span></li></ol><h3 id="nodename">🌿nodeName</h3><p><strong>节点名,元素节点值为标签名</strong></p><h3 id="nodevalue">🌿nodeValue</h3><p><strong>节点的内容,元素节点为</strong><code>null</code></p><h3 id="节点父子">🌿节点父子</h3><h3 id="节点方法">🌿节点方法</h3><ul><li><code>appendChild(newNode)</code>------------------------<strong>在子节点最后插入节点,返回</strong><code>newNode</code></li><li><code>insertBefore(newNode, afterNode)</code>------<strong>在</strong><code>afterNode</code><strong>前插入节点,返回</strong><code>newNode</code></li><li><code>replaceChild(newNode, oldNode)</code>---------<strong>替换</strong><code>oldNode</code><strong>节点,返回</strong><code>oldNode</code></li><li><code>removeChild(oldNode)</code>------------------------<strong>移除</strong><code>oldNode</code><strong>节点,返回</strong><code>oldNode</code></li><li><code>cloneNode(Boolean)</code>---------------------------<strong>返回复制节点,布尔值表示是否深拷贝</strong></li><li><code>normalize()</code>------------------------------------<strong>后代节点</strong><span class="label label-info">合并同级相邻文本节点</span><strong>并</strong><span class="label label-info">删除空文本节点</span></li></ul><h2 id="document类型">Document类型</h2><h3 id="属性-1">🍍属性</h3><table><thead><tr class="header"><th style="text-align: center;">属性</th><th style="text-align: center;">值</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>nodeType</code></td><td style="text-align: center;"><strong>9</strong></td></tr><tr class="even"><td style="text-align: center;"><code>nodeName</code></td><td style="text-align: center;"><strong>#document</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>nodeValue</code></td><td style="text-align: center;"><code>null</code></td></tr><tr class="even"><td style="text-align: center;"><code>parentNode</code></td><td style="text-align: center;"><code>null</code></td></tr><tr class="odd"><td style="text-align: center;"><code>ownerDocument</code></td><td style="text-align: center;"><code>null</code></td></tr><tr class="even"><td style="text-align: center;"><code>documentElement</code></td><td style="text-align: center;"><strong>指向</strong><code>&lt;html&gt;</code></td></tr><tr class="odd"><td style="text-align: center;"><code>body</code></td><td style="text-align: center;"><strong>指向</strong><code>&lt;body&gt;</code></td></tr><tr class="even"><td style="text-align: center;"><code>doctype</code></td><td style="text-align: center;"><strong>指向</strong><code>&lt;!doctype&gt;</code></td></tr><tr class="odd"><td style="text-align: center;"><code>title</code></td><td style="text-align: center;"><strong>网页标题(修改有效但不改</strong><code>&lt;title&gt;</code><strong>)</strong></td></tr><tr class="even"><td style="text-align: center;"><code>URL</code></td><td style="text-align: center;"><strong>网页完整URL</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>domain</code></td><td style="text-align: center;"><strong>域名</strong></td></tr><tr class="even"><td style="text-align: center;"><code>referrer</code></td><td style="text-align: center;"><strong>导航前一页面URL(无则为空字符)</strong></td></tr></tbody></table><h3 id="元素获取">🍍元素获取</h3><ul><li><code>getElementById('id')</code>-----------------------<strong>第一个</strong><code>id</code><strong>属性匹配的元素</strong></li><li><code>getElementsByTagName('tagName')</code>------<strong>标签名匹配的元素集合</strong></li><li><code>anchors</code>-----------------------------------------<strong>有</strong><code>name</code><strong>属性的</strong><code>a</code><strong>标签的集合</strong></li><li><code>applets</code> <span class="label label-danger">已弃用</span></li><li><code>forms</code>--------------------------------------------<code>form</code><strong>标签的集合</strong></li><li><code>images</code>------------------------------------------<code>img</code><strong>标签的集合</strong></li><li><code>links</code>--------------------------------------------<strong>有</strong><code>href</code><strong>属性的</strong><code>a</code><strong>标签的集合</strong></li></ul><h3 id="selector-api">🍍Selector API</h3><ul><li><code>querySelector('css选择器')</code>--------------<strong>后代中第一个匹配的节点</strong></li><li><code>querySelectorAll('css选择器')</code>---------<strong>当前后代所有匹配的节点集合(非动态)</strong></li><li><code>matches('css选择器')</code>-----------------------<strong>返回是否有匹配</strong></li></ul><div class="note note-success">            <p><strong>css选择器错误会报错</strong></p>          </div><h3 id="网页输出流">🍍网页输出流</h3><h2 id="element类型">Element类型</h2><h3 id="属性-2">🥝属性</h3><table><thead><tr class="header"><th style="text-align: center;">属性</th><th style="text-align: center;">值</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>nodeType</code></td><td style="text-align: center;"><strong>1</strong></td></tr><tr class="even"><td style="text-align: center;"><code>nodeName</code></td><td style="text-align: center;"><strong>标签名</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>nodeValue</code></td><td style="text-align: center;"><code>null</code></td></tr><tr class="even"><td style="text-align: center;"><code>parentNode</code></td><td style="text-align: center;"><strong>文档节点或元素节点</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>tagName</code></td><td style="text-align: center;"><strong>标签名</strong></td></tr></tbody></table><h3 id="属性操作">🥝属性操作</h3><ul><li><code>getAttribute('key')</code>--------------------<strong>获取对应属性值</strong></li><li><code>setAttribute('key', 'value')</code>--------<strong>设置属性值,属性名自动转小写</strong></li><li><code>removeAttribute('key')</code>-----------------<strong>移除属性</strong></li></ul><div class="note note-success">            <p><strong>属性名不区分大小写</strong></p>          </div><h3 id="attributes属性">🥝attributes属性</h3><h3 id="元素创建">🥝元素创建</h3><p><code>createElement('tagName')</code><strong>创建并返回一个元素节点,挂载前也可添加属性</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> Blog = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;a&#x27;</span>)     <span class="hljs-comment">// 创建一个a元素</span><br>Blog.href = <span class="hljs-string">&#x27;https://jon-a-than.github.io&#x27;</span>   <span class="hljs-comment">// 添加属性</span><br><span class="hljs-built_in">document</span>.appendChild(Blog)                   <span class="hljs-comment">// 挂载到DOM</span><br></code></pre></div></td></tr></table></figure><h2 id="text类型">Text类型</h2>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>DOM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>DOM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗JavaScriptBOM</title>
    <link href="/2022/01/30/JavaScriptBOM/"/>
    <url>/2022/01/30/JavaScriptBOM/</url>
    
    <content type="html"><![CDATA[<h1 id="window对象">window对象</h1><h2 id="窗口位置">窗口位置</h2><h3 id="位置获取">🥕位置获取</h3><p><code>window.screenTop</code><strong>,</strong><code>window.screenLeft</code><strong>显示浏览器应用左上角的位置</strong></p><h3 id="位置方法">🥕位置方法</h3><div class="note note-warning">            <p><strong>这些方法可能被浏览器禁用</strong></p>          </div><ul><li><code>window.moveTo(x, y)</code><strong>浏览器左上角移动至</strong><code>(x, y)</code></li><li><code>window.moveBy(x, y)</code><strong>浏览器左上角相对当前向左</strong><code>x px</code><strong>向下</strong><code>y px</code></li></ul><h2 id="窗口大小">窗口大小</h2><h3 id="大小获取">🍐大小获取</h3><p><code>window.innnerHeight</code><strong>,</strong> <code>window.innerWidth</code><strong>显示视口大小(不含工具栏,地址栏等.包含滚动条)</strong></p><p><code>window.outerHeight</code><strong>,</strong><code>window.outerWidth</code><strong>显示浏览器应用的窗口大小</strong></p><p><code>document.documentElement.clientHeight</code><strong>,</strong><code>document.documentElement.clientWidth</code><strong>显示渲染页的大小(不含滚动条)</strong></p><h3 id="窗口缩放方法">🍐窗口缩放方法</h3><div class="note note-warning">            <p><strong>这些方法可能被浏览器禁用</strong></p>          </div><ul><li><code>window.resizeTo(x, y)</code><strong>缩放到</strong><code>x × y</code></li><li><code>window.resizeBy(x, y)</code><strong>缩放至</strong><code>(x+原x) × (y+原y)</code></li></ul><h2 id="视口位置">视口位置</h2><h3 id="位置获取-1">🍊位置获取</h3><p><code>window.scrollX</code><strong>,</strong><code>window.scrollY</code><strong>或</strong><code>window.pageXoffset</code><strong>,</strong><code>window.pageYoffset</code><strong>显示滚动位置</strong></p><h3 id="滚动方法">🍊滚动方法</h3><ul><li><code>window.scroll()</code></li><li><code>window.scrollTo()</code></li><li><code>window.scrollBy()</code></li></ul><h2 id="链接导航">链接导航</h2><h3 id="打开链接">🌿打开链接</h3><p><code>window.open(url)</code><strong>方法可以打开链接并返回窗口的</strong><code>window</code><strong>实例</strong></p><p><strong>该实例的</strong><code>opener</code><strong>属性指向打开它的</strong><code>window</code><strong>实例</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">window</span>.open(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>)          <span class="hljs-comment">// 默认在新窗口打开</span><br></code></pre></div></td></tr></table></figure><div class="note note-danger">            <p><strong>浏览器可能弹出警告</strong></p>          </div><h3 id="目标窗口">🌿目标窗口</h3><p><code>window.open</code><strong>的第二个参数表示打开链接的窗口</strong></p><p><strong>可以使用自定义名称,若找不到该名称窗口则新建一个同名窗口</strong></p><p><strong>也可使用</strong><code>'_self'</code><strong>,</strong><code>'_parent'</code><strong>,</strong><code>'_top'</code><strong>,</strong><code>'_blank'</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">window</span>.open(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>, <span class="hljs-string">&#x27;_self&#x27;</span>)<br><span class="hljs-built_in">window</span>.open(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>, <span class="hljs-string">&#x27;page1&#x27;</span>)   <span class="hljs-comment">// 无名为`page1`的窗口则新建一个同名窗口</span><br></code></pre></div></td></tr></table></figure><h3 id="特性设置">🌿特性设置</h3><p><code>window.open</code><strong>的第三个参数接收一个特性字符串配置新窗口设置</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">window</span>.open(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>, <span class="hljs-string">&#x27;page1&#x27;</span>, <span class="hljs-string">&#x27;height=600, width=400&#x27;</span>)<br></code></pre></div></td></tr></table></figure><div class="note note-warning">            <p><strong>浏览器可能禁用特性设置</strong></p>          </div><h3 id="窗口关闭">🌿窗口关闭</h3><p><code>close()</code><strong>可关闭</strong><code>window</code><strong>实例</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> newPage = <span class="hljs-built_in">window</span>.open(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>)   <span class="hljs-comment">// 获取实例</span><br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> newPage.close(), <span class="hljs-number">5000</span>)                <span class="hljs-comment">// 5秒后关闭</span><br><br><span class="hljs-built_in">window</span>.close()                                         <span class="hljs-comment">// 关闭最新窗口</span><br></code></pre></div></td></tr></table></figure><div class="note note-warning">            <p><strong>当不是在</strong><code>window</code><strong>实例,而是在</strong><code>window</code><strong>对象上使用时关闭最新的窗口</strong></p><p><strong>部分浏览器不支持关闭非脚本打开的窗口</strong></p>          </div><p><strong>关闭后</strong><code>window</code><strong>对象的</strong><code>closed</code><strong>属性值为</strong><code>true</code></p><h3 id="弹窗屏蔽">🌿弹窗屏蔽</h3><p><strong>被浏览器屏蔽时</strong><code>window.open</code><strong>返回</strong><code>null</code><strong>可用此特性判断是否被屏蔽</strong></p><p><strong>被屏蔽时也会抛出错误,可用</strong><code>try/catch</code><strong>精确捕获是否被屏蔽</strong></p><h2 id="定时器">定时器</h2><h3 id="settimeout">🍌setTimeout</h3><p><code>setTimeout(f, t[, a, b...])</code><strong>第一个参数接收一个函数或</strong><code>js</code><strong>代码的字符串,第二个参数设置</strong><code>t ms</code><strong>后代码/函数进入消息队列,消息队列为空则立即执行,后面的参数到期时会传给任务函数(字符串不可)</strong></p><p><strong>设置时返回一个超时排期</strong><code>ID</code><strong>,可用</strong><code>clearTimeout(ID)</code><strong>取消排期</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> Task = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-string">&#x27;alert(&quot;Hi!&quot;)&#x27;</span>, <span class="hljs-number">1000</span>)<br><br><span class="hljs-comment">// 等价于</span><br><span class="hljs-keyword">const</span> Tsak = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  alert(<span class="hljs-string">&#x27;Hi!&#x27;</span>)<br>&#125;, <span class="hljs-number">1000</span>)<br><br><span class="hljs-keyword">if</span>(flg)<br>  <span class="hljs-built_in">clearTimeout</span>(Task)               <span class="hljs-comment">// 取消任务</span><br></code></pre></div></td></tr></table></figure><h3 id="setinterval">🍌 setInterval</h3><p><code>setInterval(f, t[, a, b...])</code><strong>参数同上,其每隔</strong><code>t ms</code><strong>就将任务推入消息队列</strong></p><p><strong>设置时返回一个超时排期</strong><code>ID</code><strong>,可用</strong><code>clearInterval(ID)</code><strong>取消排期</strong></p><h2 id="对话框">对话框</h2><h3 id="alerttext">🍒alert(text)</h3><p><strong>接收文本,其他类型隐式调用</strong><code>toString()</code></p><p><strong>只有确认键,无返回值,执行期间为同步状态</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">window</span>.alert(<span class="hljs-string">&#x27;Hi!&#x27;</span>)<br>alert(<span class="hljs-string">&#x27;Hi!&#x27;</span>)          <span class="hljs-comment">// 可不加`window.`以下均不加</span><br></code></pre></div></td></tr></table></figure><p><a class="btn" onclick="alert('Hi!')">alert</a></p><h3 id="confirmtext">🍒confirm(text)</h3><p><strong>接收文本,其他类型隐式调用</strong><code>toString()</code></p><p><strong>有确认/取消键,返回布尔值对应</strong><code>true</code><strong>/</strong><code>false</code><strong>(同步执行)</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">confirm(<span class="hljs-string">&#x27;Hi!&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p><a class="btn" onclick="confirm('Hi!')">confirm</a></p><h3 id="prompttips-default">🍒prompt(tips, default)</h3><p><strong>接收两个文本,其他类型隐式调用</strong><code>toString()</code></p><p><strong>第一个为提示,第二个为默认输入(默认为空)(同步执行)</strong></p><p><strong>有输入时返回输入字符串,否则返回</strong><code>null</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">prompt(<span class="hljs-string">&#x27;What is your name?&#x27;</span>, <span class="hljs-string">&#x27;Jonathan&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p><a class="btn" onclick="prompt('What is your name?', 'Jonathan')">prompt</a></p><h3 id="print">🍒print()</h3><p><strong>开启打印(异步执行)</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">print()<br></code></pre></div></td></tr></table></figure><p><a class="btn" onclick="print()">print</a></p><h1 id="location对象">location对象</h1><p><strong>获取</strong><code>location</code><strong>对象</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">window</span>.location<br><span class="hljs-built_in">document</span>.location  <span class="hljs-comment">// 等价于</span><br>location           <span class="hljs-comment">// 等价于</span><br></code></pre></div></td></tr></table></figure><h2 id="属性">属性</h2><table><thead><tr class="header"><th style="text-align: center;">属性名</th><th style="text-align: center;">属性值</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>hash</code></td><td style="text-align: center;"><strong>URL散列表</strong></td></tr><tr class="even"><td style="text-align: center;"><code>hostname</code></td><td style="text-align: center;"><strong>服务器名</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>port</code></td><td style="text-align: center;"><strong>端口号</strong></td></tr><tr class="even"><td style="text-align: center;"><code>host</code></td><td style="text-align: center;"><strong>服务器名及端口号</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>href</code></td><td style="text-align: center;"><strong>完整的URL</strong></td></tr><tr class="even"><td style="text-align: center;"><code>protocol</code></td><td style="text-align: center;"><strong>使用协议</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>search</code></td><td style="text-align: center;"><strong>问号开头的查询字符串</strong></td></tr><tr class="even"><td style="text-align: center;"><code>username</code></td><td style="text-align: center;"><strong>用户名</strong></td></tr><tr class="odd"><td style="text-align: center;"><code>password</code></td><td style="text-align: center;"><strong>密码</strong></td></tr><tr class="even"><td style="text-align: center;"><code>origin</code></td><td style="text-align: center;"><strong>URL源地址(只读)</strong></td></tr></tbody></table><h2 id="查询字符串">查询字符串</h2><p><strong>可使用</strong><code>URLSearchParams</code><strong>来解析</strong><code>location.search</code><strong>(自动跳过</strong><code>?</code><strong>)</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> searchParams = <span class="hljs-keyword">new</span> URLSearchParams(location.search)<br></code></pre></div></td></tr></table></figure><p><code>has(key)</code><strong>方法检查是否有</strong><code>key</code><strong>参数</strong></p><p><code>get(key)</code><strong>方法返回</strong><code>key</code><strong>参数的值,没有则返回</strong><code>null</code></p><p><code>set(key, value)</code><strong>新增参数</strong></p><p><code>delete(key)</code><strong>删除参数</strong></p><p><strong>实例支持迭代</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">const</span> x <span class="hljs-keyword">of</span> searchParams)<br>  <span class="hljs-comment">// x 为数组 x[0] = key, x[1] = value</span><br></code></pre></div></td></tr></table></figure><h2 id="操作url">操作URL</h2><h3 id="整体修改">🌶整体修改</h3><p><strong>后两种写法隐式调用了</strong><code>assign</code><strong>方法</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">location.assign(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>)<br>location.href = <span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>     <span class="hljs-comment">// 等价于</span><br>location = <span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>          <span class="hljs-comment">// 等价于</span><br></code></pre></div></td></tr></table></figure><h3 id="局部修改">🌶局部修改</h3><p><strong>可以通过修改</strong><code>location</code><strong>的属性来导航</strong></p><h1 id="navigator对象">navigator对象</h1><p><strong>该对象存放了客户端软硬件信息与一些方法,可用来确认浏览器类型</strong></p><h2 id="插件检测">插件检测</h2><p><code>plugins</code><strong>数组存放了浏览器插件</strong></p><p><strong>数组元素有以下属性描述插件</strong></p><ul><li><code>name</code><strong>插件名</strong></li><li><code>description</code><strong>插件描述</strong></li><li><code>filename</code><strong>插件文件名</strong></li><li><code>length</code><strong>插件处理的MIME(媒体类型)数</strong></li></ul><h1 id="screen对象">screen对象</h1><p><strong>存储了客户端显示器信息</strong></p><h2 id="属性-1">属性</h2><table><thead><tr class="header"><th style="text-align: center;">属性</th><th style="text-align: center;">属性值</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>availHeight</code></td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: center;"></td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: center;"></td><td style="text-align: center;"></td></tr></tbody></table><h1 id="history对象">history对象</h1><h2 id="导航">导航</h2><p><code>go(n)</code><strong>方法用于导航前进或后退</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">history.go(<span class="hljs-number">2</span>)     <span class="hljs-comment">// 前进两步</span><br>history.go(-<span class="hljs-number">2</span>)    <span class="hljs-comment">// 后退两步</span><br></code></pre></div></td></tr></table></figure><p><code>length</code><strong>属性存储本窗口页面记录总数,</strong><code>URL</code><strong>或</strong><code>location.hash</code><strong>改变会增加记录数</strong></p><h3 id="语法糖">🍠语法糖</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">history.forward() <span class="hljs-comment">// 前进一步</span><br>history.back()    <span class="hljs-comment">// 后退一步</span><br></code></pre></div></td></tr></table></figure><h2 id="历史状态管理">历史状态管理</h2>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>BOM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>BOM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript数据类型</title>
    <link href="/2022/01/29/JavaScript%E5%8E%9F%E5%A7%8B%E7%B1%BB%E5%9E%8B/"/>
    <url>/2022/01/29/JavaScript%E5%8E%9F%E5%A7%8B%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="原始类型">原始类型</h1><h2 id="undefined">Undefined</h2><p><strong>定义变量的默认值,表示未定义</strong></p><h2 id="null">Null</h2><p><strong>一个空对象指针,声明变量要保存对象但暂时未获取时应赋初值</strong><code>null</code></p><h2 id="boolean">Boolean</h2><p><code>Boolean()</code><strong>方法将其他类型转为</strong><code>Boolean</code><strong>型,</strong><code>''</code>,<code>0</code>,<code>NaN</code>,<code>null</code>,<code>undefined</code><strong>被转为</strong><code>false</code><strong>,其他均为</strong><code>true</code></p><h2 id="string">String</h2><p>### 🌿字符集</p><h3 id="字符数组">🌿字符数组</h3><p><strong>字符串可以当作一个只读字符数组</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&#x27;Jonathan&#x27;</span><br>str[<span class="hljs-number">3</span>] = <span class="hljs-string">&#x27;a&#x27;</span><br>str.length = <span class="hljs-number">8</span><br></code></pre></div></td></tr></table></figure><p><strong>字符不可更改,长度不可更改</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&#x27;Jonathan&#x27;</span><br>str.length = <span class="hljs-number">4</span>, str[<span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;a&#x27;</span><br><span class="hljs-built_in">console</span>.log(str)              <span class="hljs-comment">// &#x27;Jonathan&#x27;</span><br></code></pre></div></td></tr></table></figure><p><strong>可以用</strong><code>str.split()</code><strong>将字符串分割出一个可读写的字符数组</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&#x27;Jonathan&#x27;</span><br><span class="hljs-keyword">let</span> x = str.split(<span class="hljs-string">&#x27;&#x27;</span>)        <span class="hljs-comment">// [&#x27;J&#x27;, &#x27;o&#x27;, &#x27;n&#x27;, &#x27;a&#x27;, &#x27;t&#x27;, &#x27;h&#x27;, &#x27;a&#x27;, &#x27;n&#x27;]</span><br>x.length = <span class="hljs-number">4</span>, x[<span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;a&#x27;</span><br><span class="hljs-keyword">let</span> y = x.join(<span class="hljs-string">&#x27;&#x27;</span>)           <span class="hljs-comment">// &#x27;Jana&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="base64">🌿Base64</h3><p><code>btoa()</code><strong>asc转</strong><code>Base64</code></p><p><code>atob()</code> <code>Base64</code><strong>转asc</strong></p><h2 id="number">Number</h2><h3 id="数值表示">🥝数值表示</h3><div class="note note-success">            <p><strong>ES6中新增了二进制与八进制的表示</strong><a href class="btn" style="margin:10px">🔗前往查看</a></p>          </div><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> a = <span class="hljs-number">31</span>        <span class="hljs-comment">// 十进制</span><br><span class="hljs-keyword">const</span> a = <span class="hljs-number">037</span>       <span class="hljs-comment">// 八进制0开头,ES5严格模式禁止0开头表示八进制</span><br><span class="hljs-keyword">const</span> b = <span class="hljs-number">0x1F</span>      <span class="hljs-comment">// 十六进制0x(或0X)开头(不分大小写)</span><br></code></pre></div></td></tr></table></figure><p><strong>JS有</strong><code>-0</code><strong>与</strong><code>+0</code><strong>一般情况是相等的</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-literal">Infinity</span>/-<span class="hljs-number">0</span> == <span class="hljs-literal">Infinity</span>/+<span class="hljs-number">0</span>    <span class="hljs-comment">// false, 只有这种情况会不同</span><br></code></pre></div></td></tr></table></figure><h3 id="浮点数">🥝浮点数</h3><p><strong>JS会尽量接收一个整数,数字小数点后有非零值才会成为浮点数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> a = <span class="hljs-number">1.0</span>        <span class="hljs-comment">// 无效</span><br><span class="hljs-keyword">const</span> b = <span class="hljs-number">1.1</span>        <span class="hljs-comment">// 有效</span><br><span class="hljs-keyword">const</span> c = <span class="hljs-number">.1</span>         <span class="hljs-comment">// 有效</span><br></code></pre></div></td></tr></table></figure><p><strong>小数高于6位会默认使用科学计数法(最高精度</strong><code>e-17</code><strong>)</strong></p><h3 id="nan">🥝NaN</h3><p><code>NaN</code><strong>(Not A Number),唯一一个不等于自身的值,可以用</strong><code>isNaN()</code><strong>或是否等于自身来判断</strong><code>NaN</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-literal">NaN</span> != <span class="hljs-literal">NaN</span>          <span class="hljs-comment">// true</span><br></code></pre></div></td></tr></table></figure><h3 id="infinity">🥝Infinity</h3><p><strong>表示无穷大,可以用</strong><code>isInfinity()</code><strong>判断是否为</strong><code>Infinity</code></p><h3 id="parseint">🥝parseInt()</h3><p><code>parseInt(v&#123;待转值&#125;, &#123;以[2, 36]进制转换&#125;)</code></p><h3 id="parsefloat">🥝parseFloat()</h3><h3 id="number-1">🥝Number()</h3><h2 id="symbol">Symbol</h2><div class="note note-success">            <p><strong>ES6新增类型</strong><a href class="btn" style="margin:10px">🔗前往查看</a></p>          </div><h2 id="object">Object</h2><h1 id="基本引用类型">基本引用类型</h1><h2 id="date">Date</h2><p><code>Data</code><strong>的原型为字符串</strong></p><h3 id="建立日期对象">🍍建立日期对象</h3><p><strong>日期对象可直接比较时间早晚(时间戳越大越晚)</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()                 <span class="hljs-comment">// 默认当时计算机日期</span><br></code></pre></div></td></tr></table></figure><p><code>Date.parse()</code><strong>或</strong><code>Date.UTC()</code><strong>来初始化日期</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-built_in">Date</span>.parse(<span class="hljs-comment">/*...*/</span>))<br><span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-built_in">Date</span>.UTC(<span class="hljs-comment">/*...*/</span>))<br><br><span class="hljs-comment">// 默认隐式调用Date.parse或Date.UTC</span><br><span class="hljs-comment">// 等价于</span><br><span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-comment">/*...*/</span>)<br><span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-comment">/*...*/</span>)<br></code></pre></div></td></tr></table></figure><h4 id="date.parse">Date.parse()</h4><p><code>Date.parse()</code><strong>接收一个日期字符串,模板如下(月名, 星期名均为英文缩写)</strong></p><ul><li>'day/momth/year'</li><li>'月名 day, year'</li><li>'星期名 月名 dd yyyy hh:mm:ss 时区'</li><li>'YYYY-MM-DDTHH:mm:ss.sssZ'</li></ul><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-string">&#x27;Thu Feb 03 2022 13:08:38 GMT+0800&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h4 id="date.utc">Date.UTC()</h4><p><code>Date.UTC(year, month[, d, h, min, s, ms])</code><strong>年月必选,月为</strong><code>[0, 11]</code><strong>,天默认为</strong><code>1</code><strong>其余默认为</strong><code>0</code></p><p><strong>该时间为</strong><code>GMT</code><strong>时间(0时区时间)</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-number">2022</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">13</span>, <span class="hljs-number">24</span>, <span class="hljs-number">17</span>)<br></code></pre></div></td></tr></table></figure><h4 id="date.now">Date.now()</h4><p><code>Date.now()</code><strong>方法返回当时计算机日期与</strong><code>1970/1/1 00:00:00</code><strong>的时间差的毫秒数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Date</span>.now())<br><span class="hljs-comment">// 1643867269483</span><br></code></pre></div></td></tr></table></figure><h3 id="继承方法">🍍继承方法</h3><h4 id="date.valueof">Date.valueOf()</h4><p><strong>返回时间戳</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().valueOf())<br><span class="hljs-comment">// 1643867269483</span><br></code></pre></div></td></tr></table></figure><h4 id="date.tostring">Date.toString()</h4><p><strong>24小时制的时间(具体格式与环境有关)</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().toString())<br><span class="hljs-comment">// Thu Feb 03 2022 18:47:09 GMT+0800 (中国标准时间)</span><br></code></pre></div></td></tr></table></figure><h4 id="date.tolocalestring">Date.toLocaleString()</h4><p><strong>12小时制时间(具体格式与环境有关)</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().toLocaleString())<br><span class="hljs-comment">// 2022/2/3 下午6:47:09</span><br></code></pre></div></td></tr></table></figure><h2 id="regexp">RegExp</h2><h2 id="原始值包装类型">原始值包装类型</h2><h2 id="单例内置对象global">单例内置对象Global</h2><h3 id="uri编码方法">🥬URI编码方法</h3><h3 id="eval方法">🥬eval方法</h3><h3 id="对象属性">🥬对象属性</h3><table><thead><tr class="header"><th style="text-align: center;">属性</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><code>undefined</code></td></tr><tr class="even"><td style="text-align: center;"><code>NaN</code></td></tr><tr class="odd"><td style="text-align: center;"><code>Infinity</code></td></tr><tr class="even"><td style="text-align: center;"><code>Object</code></td></tr><tr class="odd"><td style="text-align: center;"><code>Array</code></td></tr><tr class="even"><td style="text-align: center;"><code>Function</code></td></tr><tr class="odd"><td style="text-align: center;"><code>Boolean</code></td></tr><tr class="even"><td style="text-align: center;"><code>String</code></td></tr><tr class="odd"><td style="text-align: center;"><code>Number</code></td></tr><tr class="even"><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: center;"></td></tr></tbody></table><h2 id="单例内置对象math">单例内置对象Math</h2><h3 id="属性">🍉属性</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">Math</span>.PI<br><span class="hljs-built_in">Math</span>.E<br></code></pre></div></td></tr></table></figure><h3 id="方法">🍉方法</h3><h4 id="最值方法">最值方法</h4><p><code>Math.min()</code><strong>与</strong><code>Math.max()</code><strong>方法可以返回多个数中的最值</strong></p><p><strong>可用</strong><code>...</code><strong>(扩展操作符)找出数组最值</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> nums = [<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, -<span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>]<br><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Math</span>.max(...nums))     <span class="hljs-comment">// 5</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Math</span>.min(...nums))     <span class="hljs-comment">// -4</span><br></code></pre></div></td></tr></table></figure><h4 id="舍入方法">舍入方法</h4><ul><li><code>Math.ceil()</code><strong>向上舍入</strong></li><li><code>Math.floor()</code><strong>向下舍入</strong></li><li><code>Math.round()</code><strong>四舍五入</strong></li><li><code>Math.fround()</code><strong>最接近的单精度浮点数</strong></li></ul><h4 id="运算方法">运算方法</h4><ul><li><code>Math.random()</code><strong>返回[0,1)的随机数</strong></li><li><code>Math.sqrt(x)</code><strong>求根</strong></li><li><code>Math.pow(x, p)</code><strong>求幂</strong></li><li><code>Math.abs(x)</code><strong>求绝对值</strong></li></ul><h1 id="集合引用类型">集合引用类型</h1><h2 id="object-1">Object</h2><h3 id="创建对象">🍇创建对象</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> obj = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Object</span>()   <span class="hljs-comment">// 构造函数式</span><br><span class="hljs-keyword">const</span> obj = &#123;&#125;             <span class="hljs-comment">// 对象字面量</span><br></code></pre></div></td></tr></table></figure><h3 id="对象属性-1">🍇对象属性</h3><p><strong>对象属性</strong><code>key</code><strong>使用数字会转换为字符串</strong></p><p><code>key</code><strong>使用中括号语法避免错误语法</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> obj = &#123;<br>  <span class="hljs-number">0</span>: <span class="hljs-string">&#x27;a&#x27;</span>,<br>  [<span class="hljs-string">&#x27;a b&#x27;</span>]: <span class="hljs-string">&#x27;b&#x27;</span><br>&#125;<br><br><span class="hljs-built_in">console</span>.log(obj<span class="hljs-number">.0</span>, obj.<span class="hljs-string">&#x27;0&#x27;</span>)<br><span class="hljs-comment">// 报错</span><br><span class="hljs-built_in">console</span>.log(obj[<span class="hljs-number">0</span>], obj[<span class="hljs-string">&#x27;0&#x27;</span>])<br><span class="hljs-comment">// &#x27;a&#x27; &#x27;a&#x27;</span><br></code></pre></div></td></tr></table></figure><h2 id="array">Array</h2><h3 id="创建数组">🥕创建数组</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> nums = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-number">3</span>)<br><span class="hljs-keyword">const</span> nums = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>]<br></code></pre></div></td></tr></table></figure><h3 id="方法-1">🥕方法</h3><h4 id="继承方法-1">继承方法</h4><ul><li><code>array.valueOf()</code><strong>等同数组字面量</strong></li><li><code>array.toString()</code><strong>数组值</strong><code>toString()</code><strong>后以</strong><code>,</code><strong>相连的字符串</strong></li><li><code>array.toLocaleString()</code><strong>数组值</strong><code>toLocaleString()</code><strong>后以</strong><code>,</code><strong>相连的字符串</strong></li></ul><h4 id="复制与填充">复制与填充</h4><div class="note note-success">            <p><strong>ES6提供了</strong><code>fill()</code><strong>与</strong><code>copyWithin()</code><strong>方法</strong><a href class="btn" style="margin:10px">🔗前往查看</a></p>          </div><h4 id="判断数组">判断数组</h4><p><code>Array.isArray()</code><strong>方法判断数据是否为数组</strong></p><h4 id="栈方法">栈方法</h4><ul><li><code>array.push(x[, ...y])</code><strong>数组末尾添加元素,返回新</strong><code>length</code></li><li><code>array.pop()</code><strong>数组</strong><code>length</code><strong>减一,返回删除值</strong></li></ul><h4 id="队列方法">队列方法</h4><p><strong>(所有元素索引改变)性能逊于栈方法</strong></p><ul><li><code>array.unshift(x[, ...y])</code><strong>数组首部添加元素,返回新</strong><code>length</code></li><li><code>array.shift()</code><strong>数组</strong><code>length</code><strong>减一,返回删除值</strong></li></ul><h4 id="排序方法">排序方法</h4><ul><li><code>array.sort((a, b) =&gt; &#123;&#125;)</code><strong>冒泡排序,接收一个回调确定排序规则</strong></li><li><code>array.reverse()</code><strong>元素顺序颠倒</strong></li></ul><h4 id="搜索方法">搜索方法</h4><ul><li><code>array.indexOf(x)</code><strong>返回第一个匹配的索引(无返回-1)</strong></li><li><code>array.lastIndexOf(x)</code><strong>返回最后一个匹配的索引(无返回-1)</strong></li><li><code>array.includes(x[, n])</code><strong>是否至少含有一个(无则返回</strong><code>false</code><strong>)</strong></li></ul><h4 id="操作方法">操作方法</h4><h2 id="es6新类型">ES6新类型</h2><div class="note note-success">            <p><strong>ES6新增了四种引用类型(</strong><code>Map</code><strong>,</strong><code>WeakMap</code><strong>,</strong><code>Set</code><strong>,</strong><code>WeakSet</code><strong>)</strong><a href class="btn" style="margin:10px">🔗前往查看</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>数据类型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗ES6解构</title>
    <link href="/2022/01/29/ES6%E8%A7%A3%E6%9E%84/"/>
    <url>/2022/01/29/ES6%E8%A7%A3%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h2 id="数组解构">数组解构</h2><p><strong>使用解构赋值可以加强可读性</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> x = <span class="hljs-number">0</span><br><span class="hljs-keyword">const</span> y = <span class="hljs-number">1</span><br><br><span class="hljs-comment">// 等价于</span><br><span class="hljs-keyword">const</span> [x, y] = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>]<br></code></pre></div></td></tr></table></figure><h3 id="嵌套解构">🍒嵌套解构</h3><h3 id="默认值">🍒默认值</h3><p><strong>当解构失败时可使用默认值</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> [x = <span class="hljs-number">0</span>, y = <span class="hljs-number">1</span>] = []<br></code></pre></div></td></tr></table></figure><h3 id="交换值">🍒交换值</h3><p><strong>使用解构可以高效的完成不借助第三变量且快速的完成交换</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">;[a, b] = [b, a]    <span class="hljs-comment">// 在前加分号与前面的语句断开</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>ES6</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>ES6</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>✔CSS选择器</title>
    <link href="/2022/01/28/CSS%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <url>/2022/01/28/CSS%E9%80%89%E6%8B%A9%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="简单选择器">简单选择器</h2><h3 id="元素名称选择器">🍍元素名称选择器</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-comment">/* div元素的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="id选择器">🍍id选择器</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-id">#key</span> &#123;<br>  <span class="hljs-comment">/* id=&quot;key&quot;的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="class选择器">🍍class选择器</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-class">.key</span> &#123;<br>  <span class="hljs-comment">/* class=&quot;key&quot;的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="通用选择器">🍍通用选择器</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css">* &#123;<br>  <span class="hljs-comment">/* 所有元素的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="组合器选择器">组合器选择器</h2><h3 id="后代选择器">🧄后代选择器</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-comment">/* div中所有p的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="子选择器">🧄子选择器</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &gt; <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-comment">/* div子代的p的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="相邻兄弟选择器">🧄相邻兄弟选择器</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> + <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-comment">/* p上一个同辈元素是div的p的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="通用兄弟选择器">🧄通用兄弟选择器</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> ~ <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-comment">/* div后所有同级p的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="伪类选择器">伪类选择器</h2><h3 id="锚伪类">🍊锚伪类</h3><p><code>:link</code><strong>,</strong><code>:visited</code><strong>只对</strong><code>a</code><strong>元素生效</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:link</span> &#123;<br>  <span class="hljs-comment">/* 未访问的链接的样式 */</span><br>&#125;<br><br><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:visited</span>&#123;<br>  <span class="hljs-comment">/* 访问过的链接的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><p><code>:hover</code><strong>,</strong><code>:active</code><strong>可对其他元素生效</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:hover</span>, <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-comment">/* 悬停在元素上时元素的样式 */</span><br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:active</span>, <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:active</span> &#123;<br>  <span class="hljs-comment">/* 鼠标按下元素时元素的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><p><code>:target</code></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-id">#idName</span><span class="hljs-selector-pseudo">:target</span> &#123;<br>  <span class="hljs-comment">/* 锚点跳转到的元素 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="child类">🍊child类</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> <span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">:first</span>-child &#123;<br>  <span class="hljs-comment">/* div下第一个p的样式 */</span><br>&#125;<br><br><span class="hljs-selector-tag">div</span> <span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">:last-child</span> &#123;<br>  <span class="hljs-comment">/* div下最后一个p的样式 */</span><br>&#125;<br><br><span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">:only-child</span> &#123;<br>  <span class="hljs-comment">/* p为父元素的唯一一个子元素 */</span><br>&#125;<br><br><span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:empty</span> &#123;<br>  <span class="hljs-comment">/* 选中无子元素的元素 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">:first</span>-of-type &#123;<br>  <span class="hljs-comment">/* 所有元素中的第一个p的样式 */</span><br>&#125;<br><br><span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">:last-of-type</span> &#123;<br>  <span class="hljs-comment">/* 所有元素中的最后一个p的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="nth类">🍊nth类</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-child</span>(n) &#123;<br>  <span class="hljs-comment">/* 第n个子元素 */</span><br>&#125;<br><span class="hljs-selector-pseudo">:nth-last-child</span>(n) &#123;<br>  <span class="hljs-comment">/* 倒数第n个子元素 */</span><br>&#125;<br><br><span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">:nth-of-type</span>(n) &#123;<br>  <span class="hljs-comment">/* 第n个p元素 */</span><br>&#125;<br><span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">:nth-last-of-type</span>(n) &#123;<br>  <span class="hljs-comment">/* 倒数第n个p元素 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><p><code>n</code><strong>可以是具体整数或</strong><code>odd</code><strong>(选中奇数)</strong><code>even</code><strong>(选中偶数)</strong></p><p><strong>还可以是</strong><code>f(n)</code><strong>,如</strong><code>(3n+1)</code><strong>为从第一个开始每隔3个选中一个</strong></p><h3 id="input类">🍊input类</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:checked</span> &#123;<br>  <span class="hljs-comment">/* 选中的&lt;input /&gt;元素 */</span><br>&#125;<br><span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:focus</span> &#123;<br>  <span class="hljs-comment">/* 被光标选中的&lt;input /&gt;元素 */</span><br>&#125;<br><br><span class="hljs-selector-tag">input</span>:enable &#123;<br>  /* 无`disable`属性的&lt;input /&gt;元素 */<br>&#125;<br><span class="hljs-selector-tag">input</span>:disable &#123;<br>  /* 有`disable`属性的&lt;input /&gt;元素 */<br>&#125;<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:required</span> &#123;<br>  <span class="hljs-comment">/* 有`requored`属性&lt;input /&gt;元素 */</span><br>&#125;<br><span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:optional</span> &#123;<br>  <span class="hljs-comment">/* 无`required`属性&lt;input /&gt;元素 */</span><br>&#125;<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:read-only</span> &#123;<br>  <span class="hljs-comment">/* 有`readonly`属性&lt;input /&gt;元素 */</span><br>&#125;<br><span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:read-write</span> &#123;<br>  <span class="hljs-comment">/* 非`readonly`属性&lt;input /&gt;元素 */</span><br>&#125;<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:in-range</span> &#123;<br>  <span class="hljs-comment">/* 输入值在有效范围内的&lt;input /&gt;元素 */</span><br>&#125;<br><span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:out-of-range</span> &#123;<br>  <span class="hljs-comment">/* 输入值不在有效范围内的&lt;input /&gt;元素 */</span><br>&#125;<br><br><span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:valid</span> &#123;<br>  <span class="hljs-comment">/* 输入值无效的&lt;input /&gt;元素 */</span><br>&#125;<br><span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:invalid</span> &#123;<br>  <span class="hljs-comment">/* 输入值有效的&lt;input /&gt;元素 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="其他">🍊其他</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-pseudo">:not</span>(selector) &#123;<br>  <span class="hljs-comment">/* 选择所有不满足selector的元素 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-pseudo">:lang</span>(zh) &#123;<br>  <span class="hljs-comment">/* 元素lang属性以`zh`开头的元素 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-pseudo">:root</span> &#123;<br>  <span class="hljs-comment">/* 选中根元素(&lt;html&gt;) */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="伪元素选择器">伪元素选择器</h2><p><strong>使用伪元素来写装饰性元素可以提升语义化</strong></p><h3 id="字符元素">🍐字符元素</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">::first-letter</span> &#123;<br>  <span class="hljs-comment">/* p元素的每个首字母的样式 */</span><br>  <span class="hljs-comment">/* 并不可靠 */</span><br>&#125;<br><br><span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">::first-line</span> &#123;<br>  <span class="hljs-comment">/* p元素的第一行的元素的样式 */</span><br>&#125;<br><br><span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">::selection</span> &#123;<br>  <span class="hljs-comment">/* p元素中选中的内容的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="插入">🍐插入</h3><p><code>content</code><strong>属性必选,默认行内元素</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span><br>  /* p元素的前面插入元素 */<br>&#125;<br><br><span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span><br>  /* p元素的后面插入元素 */<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="属性选择器">属性选择器</h2><p><strong>可与其他选择器组合使用</strong></p><h3 id="使用某属性">🍒使用某属性</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">img</span><span class="hljs-selector-attr">[alt]</span> &#123;<br>  <span class="hljs-comment">/* 使用alt属性的img元素的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="属性值全匹配">🍒属性值全匹配</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">img</span><span class="hljs-selector-attr">[alt=<span class="hljs-string">&quot;云&quot;</span>]</span> &#123;<br>  <span class="hljs-comment">/* alt值为云的img属性的样式 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="属性值包含狭义">🍒属性值包含狭义</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">img</span><span class="hljs-selector-attr">[alt~=<span class="hljs-string">&quot;云&quot;</span>]</span> &#123;<br>  <span class="hljs-comment">/* 属性值含有该值的元素 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;云&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 不可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;云朵&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 使用空格隔开后可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;云 朵&quot;</span> /&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="属性值包含广义">🍒属性值包含广义</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">img</span><span class="hljs-selector-attr">[alt*=<span class="hljs-string">&quot;云&quot;</span>]</span> &#123;<br>  <span class="hljs-comment">/* 属性值含有子字符串的元素 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;云&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;云朵&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;云 朵&quot;</span> /&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="属性值开头侠义">🍒属性值开头侠义</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">img</span><span class="hljs-selector-attr">[alt|=<span class="hljs-string">&quot;云&quot;</span>]</span> &#123;<br>  <span class="hljs-comment">/* 属性值以该值的开头元素 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;云&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 不可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;云朵&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 使用空格隔开后可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;云 朵&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 不可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;朵 云&quot;</span> /&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="属性值开头广义">🍒属性值开头广义</h3><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">img</span><span class="hljs-selector-attr">[alt^=<span class="hljs-string">&quot;云&quot;</span>]</span> &#123;<br>  <span class="hljs-comment">/* 属性值以该字符串开头的元素 */</span><br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;云&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;云朵&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;云 朵&quot;</span> /&gt;</span><br><span class="hljs-comment">&lt;!-- 不可选中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;朵云&quot;</span> /&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="选择器优先级">选择器优先级</h2><h3 id="level-0">Level: 0</h3><p><strong>浏览器默认</strong><code>&lt;</code><strong>继承</strong><code>&lt;</code><strong>*选择器</strong></p><h3 id="level">Level: 🥕</h3><ul><li><strong>标签选择器</strong></li></ul><h3 id="level-1">Level: 🥕🥕</h3><ul><li><code>class</code><strong>选择器</strong></li><li><strong>属性选择器</strong></li><li><strong>伪类选择器</strong></li></ul><h3 id="level-2">Level: 🥕🥕🥕</h3><ul><li><code>id</code><strong>选择器</strong></li></ul><h3 id="level-3">Level: 🥕🥕🥕🥕</h3><ul><li><strong>行内样式</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: #f2f3f5&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="level-4">Level: 🥕🥕🥕🥕🥕</h3><ul><li><code>!important</code><strong>顶级样式</strong></li></ul><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#f2f3f5</span> <span class="hljs-meta">!important</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>同级选择器越靠后等级越高</strong></p><div class="note note-info">            <p><strong>参考文档:</strong></p><p><a href="https://www.w3school.com.cn/css/index.asp">《CSS教程 (w3school)》</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗CSS基础属性</title>
    <link href="/2022/01/28/CSS%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/28/CSS%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="颜色">颜色</h1><h1 id="单位">单位</h1><h1 id="字体">字体</h1><h1 id="背景">背景</h1><h2 id="background">background</h2><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: ;<br>  <span class="hljs-attribute">background-image</span>: ;<br>  <span class="hljs-attribute">background-repeat</span>: ;<br>  <span class="hljs-attribute">background-attachment</span>: ;<br>  <span class="hljs-attribute">background-position</span>: ;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="边框">边框</h1><div class="note note-info">            <p><strong>参考文档:</strong></p><p><a href="https://www.w3school.com.cn/css/index.asp">《CSS教程 (w3school)》</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗ES6Promise与异步函数</title>
    <link href="/2022/01/28/ES6Promise/"/>
    <url>/2022/01/28/ES6Promise/</url>
    
    <content type="html"><![CDATA[<h2 id="promise">Promise</h2><h3 id="建立promise">🍇建立Promise</h3><p><code>Promise</code><strong>接收一个带(</strong><code>reslove</code><strong>,</strong><code>reject</code><strong>)的函数用来指定期约状态</strong></p><p><strong>状态转换在同级代码后执行,使用</strong><code>return</code><strong>可以直接退出</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">reslove, reject</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">if</span>(<span class="hljs-comment">/* 期约兑现 */</span>)<br>    reslove(result)  <span class="hljs-comment">// 传出结果</span><br>    <span class="hljs-comment">// 使用 return reslove(result)可以阻止继续执行</span><br>  <span class="hljs-keyword">else</span> <span class="hljs-comment">/* 兑现失败 */</span><br>    reject(error)    <span class="hljs-comment">// 传出错误对象</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="期约完成处理">🍇期约完成处理</h3><p><strong>期约</strong><code>then</code><strong>可以接收两个可选回调函数处理不同状态</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(...)<br><br>promise.then(<br>  <span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 兑现执行</span><br>  &#125;,<br>  <span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 失败执行</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="忽略resloved的三种写法">🍇忽略<code>resloved</code>的三种写法</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">promise.then(<span class="hljs-literal">null</span>, <span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> &#123;<br>  <span class="hljs-comment">// 失败执行</span><br>&#125;)<br><br>promise.then(<span class="hljs-literal">undefined</span>, <span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> &#123;<br>  <span class="hljs-comment">// 失败执行</span><br>&#125;)<br><br>promise.catch(<span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> &#123; <span class="hljs-comment">// 错误对象总可以向后传递,推荐在最后用catch捕获ERROR</span><br>  <span class="hljs-comment">// 失败执行</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="链式调用">🍇链式调用</h3><p><code>then</code><strong>完成后返回一个新的</strong><code>Promise</code><strong>可以继续使用</strong><code>then</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(...)<br><br>promise.then(<br>  <span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 兑现执行</span><br>  &#125;,<br>  <span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 失败执行</span><br>&#125;).then(<br>  <span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 兑现执行</span><br>  &#125;,<br>  <span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 失败执行</span><br>&#125;)<br><span class="hljs-comment">// ........</span><br></code></pre></div></td></tr></table></figure><h3 id="返回promise">🍇返回Promise</h3><h2 id="finally">finally</h2><p><code>.finally()</code><strong>始终会执行且return 结果值</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><br></code></pre></div></td></tr></table></figure><h2 id="all">all</h2>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>ES6</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>ES6</tag>
      
      <tag>Promise</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>✔ES6Module</title>
    <link href="/2022/01/27/JavaScriptES6/"/>
    <url>/2022/01/27/JavaScriptES6/</url>
    
    <content type="html"><![CDATA[<h3 id="导出">🌿导出</h3><p><strong>可以用</strong><code>export</code><strong>对外暴露</strong><code>变量</code>,<code>方法</code>,<code>类</code></p><p><strong>定义后导出需用对象,</strong><code>expor default</code><strong>除外</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> x = <span class="hljs-number">0</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> y = <span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a + b<br><br><span class="hljs-comment">// 或一次性</span><br><span class="hljs-keyword">export</span> &#123; x, y &#125; <br></code></pre></div></td></tr></table></figure><h3 id="重命名">🌿重命名</h3><p><strong>导出时用</strong><code>as</code><strong>重命名导出内容</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">export</span> &#123;<br>  a <span class="hljs-keyword">as</span> method1,<br>  b <span class="hljs-keyword">as</span> method2<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="import静态加载">import静态加载</h2><h3 id="加载">🥕加载</h3><p><code>import</code><strong>从路径导入</strong><code>export</code><strong>的js模块,名称需一致</strong></p><p><strong>导入需用对象,</strong><code>expor default</code><strong>除外</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; a, b &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;url&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="加载重命名">🥕加载重命名</h3><p><strong>用</strong><code>as</code><strong>关键字重命名</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; a <span class="hljs-keyword">as</span> method1, b <span class="hljs-keyword">as</span> method2 &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;url&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="全部加载">🥕全部加载</h3><p><strong>用</strong><code>*</code><strong>可以将暴露的内容全部导入</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> methods <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;url&#x27;</span><br></code></pre></div></td></tr></table></figure><h2 id="export-default匿名">export default匿名</h2><p><strong>一个只因用一次</strong></p><p><code>export default</code><strong>可以导出匿名参量,且无需花括号,导出内容不可是</strong><code>变量声明语句</code></p><p><code>import</code><strong>时可自定义命名,且无需花括号</strong></p><p><strong>即导出一个</strong><code>default</code><strong>变量</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x, y</span>) </span>&#123; <span class="hljs-comment">// function add(x, y )&#123;也一样</span><br>    <span class="hljs-keyword">return</span> x + y<br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> add <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;url&#x27;</span><br></code></pre></div></td></tr></table></figure><h2 id="转发">转发</h2><p><code>export ... from 'url'</code><strong>在此文件未加载相应的模块</strong></p><p><strong>可以用于更改接口名称与批量</strong><code>export</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">export</span> &#123; a, b <span class="hljs-keyword">as</span> method1 &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;url&#x27;</span><br><span class="hljs-keyword">export</span> * <span class="hljs-keyword">as</span> methods <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;url&#x27;</span>          <span class="hljs-comment">// export * 忽略default</span><br></code></pre></div></td></tr></table></figure><h2 id="import动态加载">import()动态加载</h2><p><code>import()</code><strong>在执行时加载并返回一个</strong><code>promise</code><strong>对象</strong></p><h3 id="条件加载">🍈条件加载</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">if</span>(dark)<br>    <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;url1&#x27;</span>)<br><span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;url2&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h3 id="动态路径">🍈动态路径</h3><p><strong>可以用变量来指定加载路径</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> url = <span class="hljs-string">&#x27;url&#x27;</span><br><span class="hljs-keyword">import</span>(url)<br>    .then()<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>ES6</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>ES6</tag>
      
      <tag>Module</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>less学习</title>
    <link href="/2022/01/26/less%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/01/26/less%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="注释">注释</h2><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-comment">// 行注释,编译去除</span><br><span class="hljs-comment">/* 块注释,编译保留 */</span><br></code></pre></div></td></tr></table></figure><h2 id="变量">变量</h2><p><strong>使用</strong><code>@</code><strong>命名变量</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-variable">@key:</span> value;<br></code></pre></div></td></tr></table></figure><p><strong>也可命名</strong><code>选择器</code></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-variable">@selsetor:</span> className&gt;p<br><br>.<span class="hljs-variable">@&#123;selector&#125;</span>&#123;   <br>    <span class="hljs-comment">// 即`.className&gt;p&#123;&#125;`</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="作用域">作用域</h2><p><strong>作用域同</strong><code>JavaScript</code></p><p><strong>同作用域变量申明先后与使用无关</strong></p><h2 id="运算">运算</h2><p><strong>可以对数字,颜色,变量进行</strong> <code>+-*/</code><strong>运算</strong></p><p><strong>绝对单位运算时进行单位转换,结果单位为最左的第一个单位</strong></p><p><strong>结果为相对单位运算时只将数字进行运算,结果单位为最左的第一个单位</strong></p><p><strong>有颜色时运算结果为颜色</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-variable">@a:</span> <span class="hljs-number">#012</span>;<br><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-variable">@a</span> + <span class="hljs-number">2vw</span>;             <span class="hljs-comment">// #021324;</span><br>  <span class="hljs-attribute">color</span>: <span class="hljs-variable">@a</span> - <span class="hljs-number">2px</span>;             <span class="hljs-comment">// #000f20;</span><br>  <span class="hljs-attribute">color</span>: <span class="hljs-variable">@a</span> * <span class="hljs-number">2%</span>;              <span class="hljs-comment">// #000f20;</span><br>  <span class="hljs-attribute">color</span>: <span class="hljs-variable">@a</span> / <span class="hljs-number">2cm</span>;             <span class="hljs-comment">// #000f20;</span><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">2px</span> - <span class="hljs-variable">@a</span>;             <span class="hljs-comment">// #000f20;</span><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">2px</span> - <span class="hljs-number">1vw</span>;            <span class="hljs-comment">// 1px;</span><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">1vw</span> + <span class="hljs-number">12px</span> + <span class="hljs-number">1cm</span>;     <span class="hljs-comment">// 14vw;</span><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">1px</span> + <span class="hljs-number">12vw</span> + <span class="hljs-number">1cm</span>;     <span class="hljs-comment">// 50.79527559px;</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="混合">混合</h2><p><code>#key()</code><strong>或</strong><code>.key()</code><strong>可复用样式</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-selector-class">.banner</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><br><span class="hljs-selector-id">#bar</span> &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">355px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.mixins</span>&#123;<br>    <span class="hljs-selector-class">.banner</span>();<br>    <span class="hljs-selector-id">#bar</span>();<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="嵌套">嵌套</h2><p><code>&amp;</code><strong>表示父选择器(效果类似宏展开)</strong></p><p><strong>外层可读取内层样式</strong></p><p><strong>内层样式不会覆盖外层样式</strong></p><p><code>less</code><strong>:</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-selector-tag">&amp;</span>&gt;<span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">color</span>:<span class="hljs-number">#000</span>;<br>    <span class="hljs-selector-tag">a</span> &#123;<br>      <span class="hljs-attribute">color</span>: <span class="hljs-number">#123</span>;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><code>css</code><strong>:</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>&#125;<br><span class="hljs-selector-tag">div</span> &gt; <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>&#125;<br><span class="hljs-selector-tag">div</span> &gt; <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#123</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="映射">映射</h2><p><strong>用</strong><code>()</code><strong>创造一个map,编译后不保留</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-selector-id">#colors</span>() &#123;<br>    color1: #f2f3f5;<br>    color2: #231;<br>&#125;<br><br><span class="hljs-selector-tag">div</span> &#123;<br>    <span class="hljs-attribute">background</span>: #colors[color1];<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="命名空间与访问符">命名空间与访问符</h2><p><strong>用</strong><code>()</code><strong>创造一个样式集,编译后不保留</strong></p><p><code>less</code><strong>:</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-selector-id">#bundle</span>() &#123;<br>  <span class="hljs-selector-class">.button</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>    <span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>      <span class="hljs-attribute">color</span>: <span class="hljs-number">#111</span>;<br>    &#125;<br>  &#125;<br>  <span class="hljs-selector-class">.tab</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#222</span>;<br>  &#125;<br>  <span class="hljs-selector-class">.citation</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>;<br>  &#125;<br>&#125;<br><br><span class="hljs-selector-id">#header</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-selector-id">#bundle</span><span class="hljs-selector-class">.button</span>();  <span class="hljs-comment">// 还可以书写为 #bundle &gt; .button 形式</span><br>  <span class="hljs-selector-id">#bundle</span><span class="hljs-selector-class">.tab</span>();<br>&#125;<br></code></pre></div></td></tr></table></figure><p><code>css</code><strong>:</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-id">#header</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#222</span>;<br>&#125;<br><span class="hljs-selector-id">#header</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#111</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="media规则"><span class="citation" data-cites="media规则">@media规则</span></h2><p><strong>向上冒泡合并选择器(内含)与</strong><code>@media</code><strong>(</strong><code>and</code><strong>合并)</strong></p><p><strong>向下内含样式但忽略其他</strong><code>@media</code><strong>中的样式</strong></p><p><code>less</code><strong>:</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-selector-class">.component</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>  <span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">1280px</span>) &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#111</span>;<br>  <span class="hljs-selector-tag">&amp;</span>&gt;<span class="hljs-selector-tag">p</span>&#123;<br>    <span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">768px</span>) &#123;<br>      <span class="hljs-attribute">color</span>: <span class="hljs-number">#222</span>;<br>        <span class="hljs-selector-tag">div</span> &#123;<br>      <span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>;<br>        &#125;<br>        <span class="hljs-selector-tag">&amp;</span>&gt;<span class="hljs-selector-tag">a</span> &#123;<br>          <span class="hljs-keyword">@media</span>  (<span class="hljs-attribute">min-resolution</span>: <span class="hljs-number">192dpi</span>) &#123;<br>            <span class="hljs-attribute">color</span>: <span class="hljs-number">#555</span>;<br>          &#125;<br>        <span class="hljs-attribute">color</span>: <span class="hljs-number">#444</span>;<br>        &#125;<br>    &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><code>css</code><strong>:</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-class">.component</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>&#125;<br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">1280px</span>) &#123;<br>  <span class="hljs-selector-class">.component</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#111</span>;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">1280px</span>) <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">768px</span>) &#123;<br>  <span class="hljs-selector-class">.component</span> &gt; <span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#222</span>;<br>  &#125;<br>  <span class="hljs-selector-class">.component</span> &gt; <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">div</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>;<br>  &#125;<br>  <span class="hljs-selector-class">.component</span> &gt; <span class="hljs-selector-tag">p</span> &gt; <span class="hljs-selector-tag">a</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#444</span>;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">1280px</span>) <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">768px</span>) <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-resolution</span>: <span class="hljs-number">192dpi</span>) &#123;<br>  <span class="hljs-selector-class">.component</span> &gt; <span class="hljs-selector-tag">p</span> &gt; <span class="hljs-selector-tag">a</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#555</span>;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="导入">导入</h2><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;less-style&quot;</span>;     <span class="hljs-comment">// 引入less样式表可不加拓展名</span><br><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;css-style.css&quot;</span>;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>css预处理</category>
      
      <category>Less</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Less</tag>
      
      <tag>css预处理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗Sass学习</title>
    <link href="/2022/01/26/sass%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/01/26/sass%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="安装与使用sass">安装与使用SASS</h1><h2 id="安装ruby">安装Ruby</h2><p><strong>官网下载有</strong><code>devkte</code><strong>的</strong><code>ruby</code><strong>版本</strong></p><p><strong>安装时勾选自动添加环境变量</strong></p><p><strong>安装后命令窗口选3</strong></p><p><strong>命令终端使用</strong><code>ruby -v</code><strong>检查是否安装成功</strong></p><h2 id="gem更新">gem更新</h2><p><code>gem</code><strong>用于管理</strong><code>Ruby</code><strong>程序</strong></p><p><strong>命令终端执行以下命令</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">&gt;</span><span class="bash"> gem update --system</span><br><span class="hljs-meta">&gt;</span><span class="bash"> gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/</span><br></code></pre></div></td></tr></table></figure><p><code>gem -v</code><strong>命令检查是否更新成功</strong></p><p><code>gem sources -l</code><strong>命令查看确保只有一个源</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">&gt;</span><span class="bash"> gem -v</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">&gt;</span><span class="bash"> gem sources -l</span><br><br>*** CURRENT SOURCES ***<br>https://gems.ruby-china.com/<br></code></pre></div></td></tr></table></figure><h2 id="安装sass">安装SASS</h2><p><strong>命令终端执行以下命令安装</strong><code>sass</code><strong>和</strong><code>compass</code><strong>(编译后排版)</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">&gt;</span><span class="bash"> gem install sass compass</span><br></code></pre></div></td></tr></table></figure><p><strong>执行以下命令确认安装成功</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">&gt;</span><span class="bash"> sass -v</span><br><span class="hljs-meta">&gt;</span><span class="bash"> compass -v</span><br></code></pre></div></td></tr></table></figure><h2 id="编译sass">编译SASS</h2><p><code>SCSS.scss</code><strong>:</strong></p><figure class="highlight scss"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs scss">* &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#787</span>;<br>  &amp; &gt; <span class="hljs-selector-tag">h1</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>输入</strong><code>sass &lt;scss文件名.scss&gt; &lt;css文件名.css&gt;</code><strong>编译为</strong><code>css</code></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">&gt;</span><span class="bash"> sass SASS.scss CSS.css</span><br></code></pre></div></td></tr></table></figure><h3 id="编译格式">🥬编译格式</h3><p><strong>编译命令添加</strong><code>--style option</code><strong>来控制</strong><code>css</code><strong>文件的排版格式</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">&gt;</span><span class="bash"> sass SASS.scss CSS.css --style [nested | expanded | compact | compressed]</span><br></code></pre></div></td></tr></table></figure><h3 id="热加载">🥬热加载</h3><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">&gt;</span><span class="bash"> sass --watch SASS.scss:CSS.css</span><br></code></pre></div></td></tr></table></figure><h1 id="sass语法">SASS语法</h1><h2 id="注释">注释</h2><h3 id="行注释">🥑行注释</h3><figure class="highlight scss"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs scss"><span class="hljs-comment">// 行注释编译后不会保留</span><br></code></pre></div></td></tr></table></figure><h3 id="块注释">🥑块注释</h3><figure class="highlight scss"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs scss"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 块注释编译后保留 </span><br><span class="hljs-comment">*/</span><br></code></pre></div></td></tr></table></figure><h2 id="嵌套">嵌套</h2><h3 id="选择器嵌套">🥕选择器嵌套</h3><p><code>scss</code><strong>:</strong></p><figure class="highlight scss"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs scss"><span class="hljs-selector-tag">header</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#787</span>;<br>  <span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#666</span>;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><code>css</code><strong>:</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">header</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#787</span>;<br>&#125;<br><span class="hljs-selector-tag">header</span> <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#666</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="父选择器">🥕父选择器</h3><p><code>scss</code><strong>:</strong></p><figure class="highlight scss"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs scss"><span class="hljs-selector-tag">header</span> &#123;<br>  <span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#666</span>;<br>    &amp; &gt; <span class="hljs-selector-tag">span</span> &#123;<br>      <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><code>css</code><strong>:</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">header</span> <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#666</span>;<br>&#125;<br><span class="hljs-selector-tag">header</span> <span class="hljs-selector-tag">p</span> &gt; <span class="hljs-selector-tag">span</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="属性嵌套">🥕属性嵌套</h3><p><code>scss</code><strong>:</strong></p><figure class="highlight scss"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs scss"><span class="hljs-selector-tag">header</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#787</span> &#123;<br>    image: <span class="hljs-string">&#x27;./pic.jpg&#x27;</span>;<br>    <span class="hljs-attribute">position</span>: &#123;<br>      x: center;<br>      y: center;<br>    &#125;<br>  &#125;<br>  <span class="hljs-attribute">font</span>: <span class="hljs-number">2em</span> &#123;<br>    family: <span class="hljs-string">&#x27;Times New Roman&#x27;</span>;<br>    weight: <span class="hljs-number">500</span>;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><code>css</code><strong>:</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">header</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#787</span>;<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-string">&#x27;./pic.jpg&#x27;</span>;<br>  <span class="hljs-attribute">background-position</span>-x: center;<br>  <span class="hljs-attribute">background-position</span>-y: center;<br>  <span class="hljs-attribute">font</span>: <span class="hljs-number">2em</span>;<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Times New Roman&#x27;</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">500</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="变量">变量</h2><h3 id="命名">🍍命名</h3><p><code>$key: value</code><strong>来声明变量</strong></p><figure class="highlight scss"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs scss"><span class="hljs-variable">$bg-dark</span>: <span class="hljs-number">#000</span>;<br><br><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-variable">$bg-dark</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#000</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="作用域">🍍作用域</h3><p><strong>变量有块级作用域,使用</strong><code>!global</code><strong>声明全局变量</strong></p><p><strong>变量声明顺序为语句顺序,全局变量声明后才可用</strong></p><figure class="highlight scss"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs scss"><span class="hljs-variable">$bg-dark</span>: <span class="hljs-number">#000</span>;<br><span class="hljs-variable">$font-dark</span>: <span class="hljs-number">#fff</span>;<br><br><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-variable">$size</span>: <span class="hljs-number">2rem</span> !global;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-variable">$size</span>;<br>  &#125;<br>  <span class="hljs-variable">$font-dark</span>: <span class="hljs-number">#eee</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-variable">$bg-dark</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-variable">$font-dark</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-variable">$size</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#000</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#eee</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">2rem</span>;<br>&#125;<br><span class="hljs-selector-tag">body</span> <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">2rem</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="变量类型">🍍变量类型</h3><h3 id="变量运算">🍍变量运算</h3>]]></content>
    
    
    <categories>
      
      <category>css预处理</category>
      
      <category>Sass</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css预处理</tag>
      
      <tag>Sass</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Axios学习</title>
    <link href="/2022/01/25/Axios%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/01/25/Axios%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="安装依赖">安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn add <br></code></pre></div></td></tr></table></figure><p><strong>使用时引入</strong><code>axios</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;axios&#x27;</span><br></code></pre></div></td></tr></table></figure><h2 id="axios-api配置">axios( ) API配置</h2><h3 id="axios配置">🍆<code>axios</code>配置</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">axios(&#123;<br>    <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;/user&#x27;</span>,                        <span class="hljs-comment">// 请求地址(必选项)</span><br>    <span class="hljs-attr">baseURL</span>: <span class="hljs-string">&#x27;https://www.bar.com/foo&#x27;</span>,  <span class="hljs-comment">// 自动配置前缀</span><br>    <span class="hljs-attr">params</span>: &#123;                            <span class="hljs-comment">// url参数</span><br>        <span class="hljs-attr">id</span>: <span class="hljs-number">1234</span><br>    &#125;,<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;post&#x27;</span>,                      <span class="hljs-comment">// 请求方式(默认GET)</span><br>    <span class="hljs-attr">data</span>: &#123;                              <span class="hljs-comment">// 请求体</span><br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;foo&#x27;</span>,<br>        <span class="hljs-attr">id</span>: <span class="hljs-number">1231</span>,<br>    &#125;<br>&#125;)<br>    .then( <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>         <span class="hljs-comment">// 成功执行</span><br>     &#125;)<br>     .catch(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br>         <span class="hljs-comment">// 失败执行</span><br>     &#125;)<br>     .then(<span class="hljs-function">() =&gt;</span> &#123;<br>         <span class="hljs-comment">// 始终执行</span><br>     &#125;)<br></code></pre></div></td></tr></table></figure><h3 id="axios请求别名">🍆<code>axios</code>请求别名</h3><p><strong>使用别名后无需指定</strong><code>method</code>,<code>data</code><strong>等属性</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">axios.request(config)<br><br>axios.get(url, [config])<br>axios.delete(url, [config])<br>axios.head(url, [config])<br>axios.options(url, [config])<br><br>axios.post(url, [data, [config]])<br>axios.put(url, [data, [config]])<br>axios.patch(url, [data, [config]])<br></code></pre></div></td></tr></table></figure><h3 id="自定义请求">🍆自定义请求</h3><h2 id="请求结果">请求结果</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&#123;<br>    <span class="hljs-attr">data</span>: &#123;&#125;,                <span class="hljs-comment">// 服务器返回内容</span><br>    <span class="hljs-attr">status</span>: <span class="hljs-number">200</span>,             <span class="hljs-comment">// http状态码</span><br>    <span class="hljs-attr">statusText</span>: <span class="hljs-string">&#x27;OK&#x27;</span>,        <span class="hljs-comment">// http状态信息</span><br>    <span class="hljs-attr">headers</span>: &#123;&#125;,             <span class="hljs-comment">// 服务器响应头</span><br>    <span class="hljs-attr">config</span>: &#123;&#125;,              <span class="hljs-comment">// axios配置信息</span><br>    <span class="hljs-attr">request</span>: &#123;&#125;              <span class="hljs-comment">// </span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="拦截器">拦截器</h2><h3 id="请求拦截器">🌿请求拦截器</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">axios.interceptors.request.use(<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">config</span>) </span>&#123;<br>        <span class="hljs-comment">// 请求前处理</span><br>        <span class="hljs-keyword">return</span> config<br>    &#125;,<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;<br>        <span class="hljs-comment">// 请求错误处理</span><br>        <span class="hljs-keyword">return</span> error<br>    &#125;<br>)<br></code></pre></div></td></tr></table></figure><h3 id="响应拦截器">🌿响应拦截器</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">axios.interceptors.response.use(<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) </span>&#123;<br>        <span class="hljs-comment">// 状态码2xx时处理</span><br>        <span class="hljs-keyword">return</span> response<br>    &#125;,<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;<br>        <span class="hljs-comment">// 状态码超出2xx时处理</span><br>        <span class="hljs-keyword">return</span> error<br>    &#125;<br>)<br></code></pre></div></td></tr></table></figure><h3 id="拦截器移除">🌿拦截器移除</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> interceptor = axios.interceptors.response.use(...)<br><br>axios.interceptors.request.eject(interceptor)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Axios</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Axios</tag>
      
      <tag>网络请求</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>React基础</title>
    <link href="/2022/01/24/react%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/24/react%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>React</category>
      
    </categories>
    
    
    <tags>
      
      <tag>React</tag>
      
      <tag>框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>npm基础使用</title>
    <link href="/2022/01/23/npm%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/01/23/npm%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="基础使用">基础使用</h2><h3 id="初始化">🍑初始化</h3><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">npm init <span class="hljs-literal">-y</span>         <span class="hljs-comment"># 默认初始化选项</span><br>npm init<br></code></pre></div></td></tr></table></figure><h3 id="npm初始化选项">🍑npm初始化选项</h3><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">package name:     <span class="hljs-comment"># 包名</span><br>version:          <span class="hljs-comment"># 版本号</span><br>description:      <span class="hljs-comment"># 包描述</span><br>entry point:      <span class="hljs-comment"># 入口文件</span><br>test command:     <span class="hljs-comment"># 测试指令</span><br>git repository:   <span class="hljs-comment"># git仓库地址</span><br>keywords:         <span class="hljs-comment"># 关键字</span><br>author:           <span class="hljs-comment"># 作者</span><br>license:          <span class="hljs-comment"># 协议</span><br></code></pre></div></td></tr></table></figure><h3 id="安装依赖">🍑安装依赖</h3><h4 id="按package.json安装">按<code>package.json</code>安装</h4><p><strong>依赖默认保存在</strong><code>node_modules</code><strong>文件夹中</strong></p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">npm install       <span class="hljs-comment"># 安装所有`package.json`中的依赖</span><br>npm i             <span class="hljs-comment"># 简写</span><br></code></pre></div></td></tr></table></figure><h4 id="自定义添加依赖">自定义添加依赖</h4><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">npm i 包名<span class="hljs-literal">-1</span><br>npm i 包名<span class="hljs-literal">-2</span><br><br><span class="hljs-comment"># 等价于</span><br>npm i 包名<span class="hljs-literal">-1</span> 包名<span class="hljs-literal">-2</span><br><br><span class="hljs-comment"># 等价于</span><br>npm i 包名&#123;<span class="hljs-literal">-1</span>, <span class="hljs-literal">-2</span>&#125;<br></code></pre></div></td></tr></table></figure><h4 id="安装标志">安装标志</h4><p><code>开发环境</code><strong>源码编写</strong></p><p><code>生产环境</code><strong>产品上线</strong></p><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">npm i &lt;...&gt;                 <span class="hljs-comment"># 默认安装到生产环境</span><br>npm i &lt;...&gt; -<span class="hljs-literal">-save</span><span class="hljs-literal">-prod</span>     <span class="hljs-comment"># 安装到生产环境</span><br>npm i &lt;...&gt; -<span class="hljs-literal">-production</span>    <span class="hljs-comment"># 等价于</span><br>npm i &lt;...&gt; <span class="hljs-literal">-P</span>              <span class="hljs-comment"># 简写</span><br>npm i &lt;...&gt; -<span class="hljs-literal">-save</span>          <span class="hljs-comment"># 等价于</span><br>npm i &lt;...&gt; <span class="hljs-literal">-S</span>              <span class="hljs-comment"># 简写</span><br><br>npm i &lt;...&gt; -<span class="hljs-literal">-save</span><span class="hljs-literal">-dev</span>      <span class="hljs-comment"># 安装到开发环境</span><br>npm i &lt;...&gt; <span class="hljs-literal">-D</span>              <span class="hljs-comment"># 简写</span><br><br>npm i &lt;...&gt; -<span class="hljs-literal">-no</span><span class="hljs-literal">-save</span>       <span class="hljs-comment"># 不更改`package.json`</span><br></code></pre></div></td></tr></table></figure><h4 id="安装位置">安装位置</h4><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">npm i &lt;...&gt; [<span class="hljs-type">option</span>]          <span class="hljs-comment"># 安装在当前包目录中    </span><br><br>npm i &lt;...&gt; -<span class="hljs-literal">-global</span> [<span class="hljs-type">option</span>] <span class="hljs-comment"># 安装在全局包目录中</span><br>npm i &lt;...&gt; <span class="hljs-literal">-g</span> [<span class="hljs-type">option</span>]       <span class="hljs-comment"># 等价于</span><br></code></pre></div></td></tr></table></figure><h4 id="指定版本">指定版本</h4><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">npm i name@<span class="hljs-number">0.20</span>.<span class="hljs-number">1</span>            <span class="hljs-comment"># 指定版本</span><br>npm i name@beta              <span class="hljs-comment"># 版本标签</span><br></code></pre></div></td></tr></table></figure><h3 id="更新依赖">🍑更新依赖</h3><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">npm update                  <span class="hljs-comment"># 参数同`install`</span><br></code></pre></div></td></tr></table></figure><h3 id="卸载依赖">🍑卸载依赖</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm uninstall<br></code></pre></div></td></tr></table></figure><h3 id="运行任务">🍑运行任务</h3><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">npm run &lt;任务名&gt;<br><br>npm run <span class="hljs-built_in">start</span>      <span class="hljs-comment"># start是特殊任务名</span><br>npm <span class="hljs-built_in">start</span>          <span class="hljs-comment"># start可简写</span><br></code></pre></div></td></tr></table></figure><p><strong>在</strong><code>package.json</code><strong>的</strong><code>scripts</code><strong>中写长命令以方便构建</strong></p><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;scripts&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;task1&quot;</span>: <span class="hljs-string">&quot;....&quot;</span>,<br>    <span class="hljs-attr">&quot;start&quot;</span>: <span class="hljs-string">&quot;....&quot;</span>,<br>  &#125;,<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="安装的包与版本">🍑安装的包与版本</h3><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">npm <span class="hljs-built_in">ls</span>              <span class="hljs-comment"># 列出本地安装的包</span><br>npm <span class="hljs-built_in">ls</span> -<span class="hljs-literal">-depth</span>=<span class="hljs-number">0</span>    <span class="hljs-comment"># 包的依赖包列出0层</span><br><br>npm <span class="hljs-built_in">ls</span> <span class="hljs-literal">-g</span> [<span class="hljs-type">option</span>]  <span class="hljs-comment"># 列出全局安装的包</span><br><br>npm v name          <span class="hljs-comment"># 包的版本</span><br></code></pre></div></td></tr></table></figure><h2 id="包配置">包配置</h2>]]></content>
    
    
    <categories>
      
      <category>Node.js</category>
      
    </categories>
    
    
    <tags>
      
      <tag>npm</tag>
      
      <tag>前端工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗TypeScript简记</title>
    <link href="/2022/01/23/TypeScript%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/01/23/TypeScript%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="使用typescript">使用TypeScript</h1><h2 id="基础使用">基础使用</h2><h3 id="安装typescript">🥝安装TypeScript</h3><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">yarn add TypeScript<br></code></pre></div></td></tr></table></figure><p><strong>可用</strong><code>tsc -v</code><strong>命令检查是否安装成功</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">tsc -v<br></code></pre></div></td></tr></table></figure><h3 id="编译ts文件">🥝编译ts文件</h3><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">tsc app.ts<br></code></pre></div></td></tr></table></figure><p><strong>运行命令生成对应的</strong><code>js</code><strong>文件</strong></p><h2 id="简易typescript环境搭建">简易TypeScript环境搭建</h2><h3 id="初始化">🥕初始化</h3><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">tsc --init<br></code></pre></div></td></tr></table></figure><p><strong>运行命令后在目录下生成</strong><code>tsconfig.json</code><strong>文件</strong></p><h3 id="创建目录">🥕创建目录</h3><p><strong>创建以下目录</strong></p><p><code>dist</code><strong>为</strong><code>js</code><strong>文件输出目录</strong></p><p><code>src</code><strong>为待编译</strong><code>ts</code><strong>文件目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">├─dist<br>├──src<br>|   └──index.ts<br>└──tsconfig.json<br></code></pre></div></td></tr></table></figure><h3 id="绑定出入口">🥕绑定出入口</h3><p><strong>打开</strong><code>tsconfig.json</code><strong>文件,设置</strong><code>"rootDir": "./src",</code><strong>和</strong><code>"outDir": "./dist",</code></p><p><strong>再运行以下命令</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">tsc -w<br></code></pre></div></td></tr></table></figure><p><strong>即可动态更新</strong><code>ts</code><strong>文件了</strong></p><h1 id="typescript语法">TypeScript语法</h1><h2 id="变量申明">变量申明</h2><h3 id="定义基础类型">🍉定义基础类型</h3><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> name: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;Jonathan&#x27;</span><br><span class="hljs-keyword">const</span> age: <span class="hljs-built_in">number</span> = <span class="hljs-number">20</span><br><span class="hljs-keyword">const</span> isMale: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">true</span><br></code></pre></div></td></tr></table></figure><h3 id="定义数组">🍉定义数组</h3><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> list: <span class="hljs-built_in">number</span>[] = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>]<br><span class="hljs-keyword">const</span> list: <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span>&gt; = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>]<br></code></pre></div></td></tr></table></figure><h3 id="定义元组">🍉定义元组</h3><p><strong>元组为元素数量,各索引数据类型已知的数据类型</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> tuples: [<span class="hljs-built_in">string</span>, <span class="hljs-built_in">number</span>, <span class="hljs-built_in">boolean</span>] = [<span class="hljs-string">&#x27;Jonathan&#x27;</span>, <span class="hljs-number">20</span>, <span class="hljs-literal">true</span>]<br></code></pre></div></td></tr></table></figure><p><strong>元素可以是更复杂的元素类型,或嵌套元组</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> tuples: [<br>    <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">string</span>&gt;,<br>    [<span class="hljs-built_in">string</span>, <span class="hljs-built_in">number</span>, <span class="hljs-built_in">boolean</span>]<br>  ] = [<br>    [<span class="hljs-string">&#x27;Hellow&#x27;</span>, <span class="hljs-string">&#x27;TypeScript&#x27;</span>],<br>    [<span class="hljs-string">&#x27;Jonathan&#x27;</span>, <span class="hljs-number">20</span>, <span class="hljs-literal">true</span>]<br>  ]<br></code></pre></div></td></tr></table></figure><h3 id="定义枚举">🍉定义枚举</h3><p><strong>枚举可以通过数值得到反向映射结果</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-built_in">enum</span> StudentList &#123;<br>    <span class="hljs-string">&#x27;ZhangSan&#x27;</span>,<br>    <span class="hljs-string">&#x27;LiSi&#x27;</span> = <span class="hljs-number">4</span>,<br>    <span class="hljs-string">&#x27;LiuWu&#x27;</span>,<br>    <span class="hljs-string">&#x27;LingYun&#x27;</span> = <span class="hljs-number">7</span><br>&#125;<br><br><span class="hljs-built_in">console</span>.log(StudentList[<span class="hljs-string">&#x27;Zhangsan&#x27;</span>])  <span class="hljs-comment">// 0</span><br><span class="hljs-built_in">console</span>.log(StudentList[<span class="hljs-string">&#x27;LiuWu&#x27;</span>])     <span class="hljs-comment">// 5</span><br><span class="hljs-built_in">console</span>.log(StudentList[<span class="hljs-number">7</span>])           <span class="hljs-comment">// LingYun</span><br></code></pre></div></td></tr></table></figure><p><strong>字符串枚举不支持反向映射</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-built_in">enum</span> Message &#123;<br>    False = <span class="hljs-string">&quot;No&quot;</span>,<br>    True = <span class="hljs-string">&quot;Yes&quot;</span>,<br>    Yes = True<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="定义未知类型">🍉定义未知类型</h3><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> anythings: <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">any</span>&gt; = [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-literal">true</span>], <span class="hljs-literal">false</span>]<br></code></pre></div></td></tr></table></figure><h3 id="空类型">🍉空类型</h3><p><strong>该类型多用于无返回值的函数</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> say = (): <span class="hljs-function"><span class="hljs-params">void</span> =&gt;</span> &#123;<br>  alert(<span class="hljs-string">&#x27;Hellow TypeScript!&#x27;</span>)<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="对象">🍉对象</h3><h3 id="类型断言">🍉类型断言</h3><h4 id="可用标签断言any类型">📌可用标签断言<code>any</code>类型</h4><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> myName: <span class="hljs-built_in">any</span> = <span class="hljs-string">&#x27;Jonathan&#x27;</span><br><span class="hljs-keyword">const</span> Len: <span class="hljs-built_in">number</span> = (&lt;<span class="hljs-built_in">string</span>&gt;myName).length<br></code></pre></div></td></tr></table></figure><h4 id="推荐as语法">📌推荐<code>as</code>语法</h4><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> myName: <span class="hljs-built_in">any</span> = <span class="hljs-string">&#x27;Jonathan&#x27;</span><br><span class="hljs-keyword">const</span> Len: <span class="hljs-built_in">number</span> = (myName <span class="hljs-keyword">as</span> <span class="hljs-built_in">string</span>).length<br></code></pre></div></td></tr></table></figure><h2 id="接口">接口</h2><h3 id="基础使用-1">🍅基础使用</h3><p><strong>函数接收参数不检查属性顺序</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> myMsg = ( message: &#123; <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>; age: <span class="hljs-built_in">number</span>; male: <span class="hljs-built_in">boolean</span> &#125;): <span class="hljs-function"><span class="hljs-params">void</span> =&gt;</span> &#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`My name is <span class="hljs-subst">$&#123;message.name&#125;</span>, a <span class="hljs-subst">$&#123;message.age&#125;</span>-year-old <span class="hljs-subst">$&#123;(message.male)? <span class="hljs-string">&#x27;boy&#x27;</span>: <span class="hljs-string">&#x27;girl&#x27;</span>&#125;</span>`</span>)<br>&#125;<br><br>myMsg(&#123;<br>  <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Jonathan&#x27;</span>,<br>  <span class="hljs-attr">male</span>: <span class="hljs-literal">true</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>interface</code><strong>(接口)改写</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">interface</span> messageType &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br>  age: <span class="hljs-built_in">number</span>;<br>  male: <span class="hljs-built_in">boolean</span>;<br>&#125;<br><br><span class="hljs-keyword">const</span> myMsg = ( message: messageType): <span class="hljs-function"><span class="hljs-params">void</span> =&gt;</span> &#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`My name is <span class="hljs-subst">$&#123;message.name&#125;</span>, a <span class="hljs-subst">$&#123;message.age&#125;</span>-year-old <span class="hljs-subst">$&#123;(message.male)? <span class="hljs-string">&#x27;boy&#x27;</span>: <span class="hljs-string">&#x27;girl&#x27;</span>&#125;</span>`</span>)<br>&#125;<br></code></pre></div></td></tr></table></figure><p><code>interface</code><strong>还可用于对象类型</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> message: messageType = &#123;<br>  <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Jonathan&#x27;</span>,<br>  <span class="hljs-attr">male</span>: <span class="hljs-literal">true</span>,<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="可选参数">🍅可选参数</h3><p><strong>使用</strong><code>?:</code><strong>表示为可选参数</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">interface</span> messageType &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br>  age: <span class="hljs-built_in">number</span>;<br>  male: <span class="hljs-built_in">boolean</span>;<br>  birth?: <span class="hljs-built_in">string</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="只读属性">🍅只读属性</h3><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">interface</span> messageType &#123;<br>  <span class="hljs-keyword">readonly</span> name: <span class="hljs-built_in">string</span>;<br><span class="hljs-keyword">readonly</span> age: <span class="hljs-built_in">number</span>;<br>  <span class="hljs-keyword">readonly</span> male: <span class="hljs-built_in">boolean</span>;<br>  <span class="hljs-keyword">readonly</span> birth?: <span class="hljs-built_in">string</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="类">类</h2><p><strong>ES6 class了解更多</strong></p><p><a class="btn" href="https://jon-a-than.github.io/2022/02/03/ES6类/">🔗前往查看</a></p><h3 id="基础使用-2">🍒基础使用</h3><p><code>constructor</code><strong>为</strong><code>new</code><strong>关键字调用的构造函数</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Speaker</span> </span>&#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>                  <span class="hljs-comment">// 指定属性类型</span><br>  <span class="hljs-title">constructor</span> (<span class="hljs-params">name: <span class="hljs-built_in">string</span></span>) &#123;<br>    <span class="hljs-built_in">this</span>.name = name<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> speaker: Speaker = <span class="hljs-keyword">new</span> Speaker(<span class="hljs-string">&#x27;Jonathan&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h3 id="继承">🍒继承</h3><h4 id="基础子类">📌基础子类</h4><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Say</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Speaker</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">sayHi</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`My name is <span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.name&#125;</span>.`</span>)<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> say: Say = <span class="hljs-keyword">new</span> Say(<span class="hljs-string">&#x27;Jonathan&#x27;</span>)   <span class="hljs-comment">// Say继承了Speaker的属性与方法</span><br></code></pre></div></td></tr></table></figure><h4 id="重写构造函数">📌重写构造函数</h4><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Introduce</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Speaker</span> </span>&#123;<br>  <span class="hljs-attr">sex</span>: <span class="hljs-built_in">boolean</span><br>  <span class="hljs-attr">age</span>: <span class="hljs-built_in">number</span><br>  <span class="hljs-title">constructor</span> (<span class="hljs-params">name: <span class="hljs-built_in">string</span>, sex: <span class="hljs-built_in">boolean</span>, age: <span class="hljs-built_in">number</span></span>) &#123;<br>    <span class="hljs-built_in">super</span>(name);<br>    [<span class="hljs-built_in">this</span>.sex, <span class="hljs-built_in">this</span>.age] = [sex, age]<br>  &#125;<br>  myIntroduce () &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`I am a <span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.age&#125;</span>-year-old <span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.sex? <span class="hljs-string">&#x27;boy&#x27;</span>: <span class="hljs-string">&#x27;girl&#x27;</span>&#125;</span> `</span>)<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> introduce: Introduce = <span class="hljs-keyword">new</span> Introduce(<span class="hljs-string">&#x27;Jonathan&#x27;</span>, <span class="hljs-literal">true</span>, <span class="hljs-number">20</span>)<br></code></pre></div></td></tr></table></figure><h3 id="修饰符">🍒修饰符</h3><h4 id="public默认">📌public(默认)</h4><p><strong>使用</strong><code>public</code><strong>修饰的属性/方法可被子类使用</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Speaker</span> </span>&#123;<br>  <span class="hljs-keyword">public</span> name: <span class="hljs-built_in">string</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-title">constructor</span> (<span class="hljs-params">name: <span class="hljs-built_in">string</span></span>) &#123;<br>    <span class="hljs-built_in">this</span>.name = name<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> speaker: Speaker = <span class="hljs-keyword">new</span> Speaker(<span class="hljs-string">&#x27;Jonathan&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h4 id="private">📌private</h4><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Speaker</span> </span>&#123;<br>  <span class="hljs-keyword">private</span> name: <span class="hljs-built_in">string</span><br>  <span class="hljs-keyword">private</span> <span class="hljs-title">constructor</span> (<span class="hljs-params">name: <span class="hljs-built_in">string</span></span>) &#123;<br>    <span class="hljs-built_in">this</span>.name = name<br>  &#125;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><h4 id="protected">📌protected</h4><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts">s<br></code></pre></div></td></tr></table></figure><h4 id="readonly">📌readonly</h4><p><strong>只读属性应在初始化时赋值(不同于</strong><code>const</code><strong>该属性还可在构造函数内赋值)</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Speaker</span> </span>&#123;<br>  <span class="hljs-keyword">readonly</span> name: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;Jonathan&#x27;</span><br>  <span class="hljs-title">constructor</span> (<span class="hljs-params">name: <span class="hljs-built_in">string</span></span>) &#123;<br>    <span class="hljs-built_in">this</span>.name = name<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h4 id="参数属性">📌参数属性</h4><p><strong>给构造函数的参数添加修饰符后参数成为类的属性</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Message</span> </span>&#123;<br>  <span class="hljs-title">constructor</span> (<span class="hljs-params"><span class="hljs-keyword">readonly</span> name: <span class="hljs-built_in">string</span>, <span class="hljs-keyword">public</span> age: <span class="hljs-built_in">number</span>, <span class="hljs-keyword">private</span> sex: <span class="hljs-built_in">boolean</span></span>) &#123;&#125;<br><br>  message () &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.name&#125;</span> is a <span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.age&#125;</span>-year-old <span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.sex? <span class="hljs-string">&#x27;boy&#x27;</span>: <span class="hljs-string">&#x27;girl&#x27;</span>&#125;</span>.`</span>)<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="存取器">🍒存取器</h3><p><strong>给类添加</strong><code>get()</code><strong>,与</strong><code>set()</code><strong>接口来修改(读取)属性</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Message</span> </span>&#123;<br>  <span class="hljs-title">constructor</span> (<span class="hljs-params"><span class="hljs-keyword">public</span> name: <span class="hljs-built_in">string</span>, <span class="hljs-keyword">public</span> age: <span class="hljs-built_in">number</span></span>) &#123;&#125;<br>  <br>  get () &#123;<br>    <br>  &#125;<br><br>  set () &#123;<br>    <br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="泛型">泛型</h2><h3 id="泛型变量">🍍泛型变量</h3><h3 id="泛型类型">🍍泛型类型</h3><div class="note note-info">            <p><strong>参考文档:</strong></p><p><a href="https://www.tslang.cn/docs/home.html">《TypeScript中文网》</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>TypeScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TypeScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🍍Pinia</title>
    <link href="/2022/01/23/pinia/"/>
    <url>/2022/01/23/pinia/</url>
    
    <content type="html"><![CDATA[<h2 id="store基础使用">store基础使用</h2><h3 id="申明store">🌿申明store</h3><p><code>store.js</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;pinia&quot;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(&#123;   <span class="hljs-comment">// 定义调用函数</span><br>    id = <span class="hljs-string">&#x27;globalStore&#x27;</span>,                 <span class="hljs-comment">// id必选且唯一</span><br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> &#123;                      <span class="hljs-comment">// 返回一个对象</span><br>        <span class="hljs-keyword">return</span> &#123;<br>            <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Hellow Pinia🍍&#x27;</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">/* </span><br><span class="hljs-comment">    *  或用箭头函数直接返回对象</span><br><span class="hljs-comment">    *  state: () =&gt; (&#123; title: &#x27;Hellow Pinia🍍&#x27; &#125;)</span><br><span class="hljs-comment">    */</span><br>&#125;)<br><br><span class="hljs-comment">// 亦可简写id</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(<span class="hljs-string">&#x27;globalStore&#x27;</span>, &#123;<br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> (&#123; <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Hellow Pinia🍍&#x27;</span> &#125;)<br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="响应式store">🌿响应式store</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(<span class="hljs-string">&#x27;foo&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> cnt = ref(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">const</span> doubleValue = <span class="hljs-function">() =&gt;</span> <span class="hljs-number">2</span> * cnt.value<br>    <span class="hljs-keyword">return</span> &#123; cnt, d &#125;<br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="使用store">🌿使用store</h3><p><code>index.vue</code><strong>:</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><br>        &#123;&#123; store.title &#125;&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">import</span> &#123; useStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;url&#x27;</span>      <span class="hljs-comment">// 导入自定义store</span></span><br><span class="javascript">    </span><br><span class="javascript">    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">        setup () &#123;</span><br><span class="javascript">            <span class="hljs-keyword">const</span> store = useStore()    <span class="hljs-comment">// 调用函数得到返回对象</span></span><br><span class="javascript">            <span class="hljs-keyword">return</span> &#123; store &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="getter">Getter</h2><h3 id="调用自身store">🍉调用自身<code>store</code></h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(&#123;<br>    id = <span class="hljs-string">&#x27;foo&#x27;</span>,<br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> (&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">3</span> &#125;),<br>    <span class="hljs-attr">getters</span>: &#123;                        <span class="hljs-comment">// 第一个参数为state</span><br>        <span class="hljs-attr">doubleValue</span>: <span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> <span class="hljs-number">2</span> * state.value,<br>        <span class="hljs-function"><span class="hljs-title">trebleValue</span>(<span class="hljs-params"></span>)</span> &#123;               <span class="hljs-comment">// 可以使用this</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-number">3</span> * <span class="hljs-built_in">this</span>.value<br>        &#125;,<br>        <span class="hljs-attr">fivefoldValue</span>: &#123;              <span class="hljs-comment">// 可以调用其他Getter</span><br>            <span class="hljs-keyword">return</span> doubleValue(state) + trebleValue(state)<br>        &#125;<br>    &#125;<br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="调用其他store">🍉调用其他<code>store</code></h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><span class="hljs-keyword">import</span> &#123; store2 &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;url&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(&#123;<br>    id = <span class="hljs-string">&#x27;bar&#x27;</span>,<br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> (&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">1</span> &#125;),<br>    <span class="hljs-attr">getters</span>: &#123;<br>        <span class="hljs-function"><span class="hljs-title">add</span>(<span class="hljs-params"></span>)</span> &#123;<br>            <span class="hljs-keyword">const</span> state2 = store2()    <span class="hljs-comment">// 与setup中调用一样</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.value + state2.value<br>        &#125;<br>    &#125;<br>&#125;)<br></code></pre></div></td></tr></table></figure><h2 id="action">action</h2><p><strong>与</strong><code>Getter</code><strong>相似</strong></p><h3 id="调用自身store-1">🥒调用自身<code>store</code></h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(&#123;<br>    id = <span class="hljs-string">&#x27;foo&#x27;</span>,<br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> (&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">3</span> &#125;),<br>    <span class="hljs-attr">actions</span>: &#123;                        <span class="hljs-comment">// 第一个参数为state</span><br>        <span class="hljs-attr">doubleValue</span>: <span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> <span class="hljs-number">2</span> * state.value,<br>        <span class="hljs-function"><span class="hljs-title">trebleValue</span>(<span class="hljs-params"></span>)</span> &#123;               <span class="hljs-comment">// 可以使用this</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-number">3</span> * <span class="hljs-built_in">this</span>.value<br>        &#125;,<br>        <span class="hljs-attr">fivefoldValue</span>: &#123;              <span class="hljs-comment">// 可以调用其他Getter</span><br>            <span class="hljs-keyword">return</span> doubleValue(state) + trebleValue(state)<br>        &#125;<br>    &#125;<br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="调用其他store-1">🥒调用其他<code>store</code></h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><span class="hljs-keyword">import</span> &#123; store2 &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;url&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(&#123;<br>    id = <span class="hljs-string">&#x27;bar&#x27;</span>,<br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> (&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">1</span> &#125;),<br>    <span class="hljs-attr">actions</span>: &#123;<br>        <span class="hljs-function"><span class="hljs-title">add</span>(<span class="hljs-params"></span>)</span> &#123;<br>            <span class="hljs-keyword">const</span> state2 = store2()       <span class="hljs-comment">// 与setup中调用一样</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.value + state2.value<br>        &#125;<br>    &#125;<br>&#125;)<br></code></pre></div></td></tr></table></figure><h2 id="reset">$reset</h2><p><strong>使用</strong><code>stre.$reset()</code><strong>可以重置状态</strong></p>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
      <tag>Pinia</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue路由</title>
    <link href="/2022/01/23/vue%E8%B7%AF%E7%94%B1/"/>
    <url>/2022/01/23/vue%E8%B7%AF%E7%94%B1/</url>
    
    <content type="html"><![CDATA[<h2 id="路由模板">路由模板</h2><h3 id="提供路由渲染">🌰提供路由渲染</h3><p><code>router-link</code><strong>标签提供路由地址选项,在</strong><code>to</code><strong>属性中指定路由地址</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 多组路由选项 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/&quot;</span> &gt;</span>地址一<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/posts&quot;</span>&gt;</span>地址二<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><code>router-view</code><strong>标签渲染出选中路由</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="定义路由组件">🌰定义路由组件</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> [HOME, POSTS] = [<br>    &#123; <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;&lt;div&gt;主页&lt;/div&gt;&#x27;</span> &#125;,<br>    &#123; <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;&lt;div&gt;文章&lt;/div&gt;&#x27;</span> &#125;<br>]<br></code></pre></div></td></tr></table></figure><h3 id="定义路由">🌰定义路由</h3><p><code>path</code><strong>与</strong><code>component</code><strong>为必选项</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-attr">component</span>: HOME &#125;,<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/posts&#x27;</span>, <span class="hljs-attr">component</span>: POSTS &#125;<br>]<br></code></pre></div></td></tr></table></figure><h3 id="创建实例并配置routes">🌰创建实例并配置<code>routes</code></h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> router = <span class="hljs-keyword">new</span> VueRouter.createRouter(&#123;<br>    <span class="hljs-attr">history</span>: VueRouter.createWebHashHistory(),<br>    routes,            <span class="hljs-comment">// ES6 routes == routes:</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="创建并挂载路由">🌰创建并挂载路由</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = Vue.createApp(&#123;&#125;)<br>app.use(router).mount(<span class="hljs-string">&#x27;#app&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h2 id="获取路由">获取路由</h2><p><strong>使用</strong><code>this.$route</code><strong>或在</strong><code>setup</code><strong>内用</strong><code>createRouter</code><strong>创建可获得路由信息对象</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">this</span>.$route.path      <span class="hljs-comment">//</span><br><span class="hljs-built_in">this</span>.$route.<br><span class="hljs-built_in">this</span>.$params          <span class="hljs-comment">// 动态路由参数的对象</span><br></code></pre></div></td></tr></table></figure><h2 id="动态路由">动态路由</h2><p><strong>用</strong><code>/:rute</code><strong>来表示</strong><code>路径参数</code></p><p><strong>不同参数都会映射至父级路径</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/:id&#x27;</span>, <span class="hljs-attr">component</span>: USER &#125;<br>]<br></code></pre></div></td></tr></table></figure><h2 id="路由匹配">路由匹配</h2><h3 id="同父级路径的动态路由">🌿同父级路径的动态路由</h3><p><strong>在路径后加</strong><code>/:rute(reg)</code><strong>来匹配不同路由</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/:id(\\d+)&#x27;</span>, <span class="hljs-attr">component</span>: USER &#125;,    <span class="hljs-comment">// 数字才匹配</span><br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/:piicture&#x27;</span>, <span class="hljs-attr">component</span>: PICTURE &#125;  <span class="hljs-comment">// 其他情况匹配</span><br>]<br></code></pre></div></td></tr></table></figure><h3 id="多级动态路由">🌿多级动态路由</h3><p><strong>在路径末加</strong><code>*</code><strong>(零个以上)</strong>,<code>+</code><strong>(一个以上)来匹配重复项</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/:option(//d+)*&#x27;</span> component: OPTIONS &#125;<br>]<br></code></pre></div></td></tr></table></figure><h3 id="可选动态路由">🌿可选动态路由</h3><p><strong>在路径末加</strong><code>?</code><strong>表示路径至多有一个</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    <span class="hljs-comment">// 有无name均会渲染USER</span><br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/:id(//d+)/:name?&#x27;</span>, <span class="hljs-attr">component</span>: USER &#125;<br>]<br></code></pre></div></td></tr></table></figure><h2 id="嵌套路由">嵌套路由</h2><p><strong>在路由</strong><code>children</code><strong>属性内可添加子路由,在父组件的</strong><code>router-view</code><strong>标签内渲染子组件</strong></p><p><strong>子路由设置</strong><code>path</code><strong>为</strong><code>''</code><strong>为默认时渲染</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123; <br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/:id(\\d+)&#x27;</span>,<br>        <span class="hljs-attr">component</span>: USER,<br>        <span class="hljs-attr">children</span>: [<br>            &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-attr">component</span>: DEFAULT &#125;,<br>            &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-attr">component</span>: MESSAGE &#125;,<br>            &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;pictures&#x27;</span>, <span class="hljs-attr">component</span>: PICTURES &#125;<br>        ]<br>    &#125;<br>]<br></code></pre></div></td></tr></table></figure><h2 id="编程式导航">编程式导航</h2><h3 id="导航至不同位置">🥑导航至不同位置</h3><p><strong>触发</strong><code>router-link</code><strong>即调用</strong><code>router.push()</code><strong>方法</strong></p><p><strong>有</strong><code>path</code><strong>属性时,</strong><code>params</code><strong>属性将失效</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">router.push(<span class="hljs-string">&#x27;/users/eduardo&#x27;</span>)                                   <span class="hljs-comment">// 字符串路径</span><br><br>router.push(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/users/eduardo&#x27;</span> &#125;)                         <span class="hljs-comment">// 带有路径的对象</span><br><br>router.push(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;user&#x27;</span>, <span class="hljs-attr">params</span>: &#123; <span class="hljs-attr">username</span>: <span class="hljs-string">&#x27;eduardo&#x27;</span> &#125; &#125;)  <span class="hljs-comment">// 命名的路由，并加上参数，让路由建立 url</span><br><br>router.push(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/register&#x27;</span>, <span class="hljs-attr">query</span>: &#123; <span class="hljs-attr">plan</span>: <span class="hljs-string">&#x27;private&#x27;</span> &#125; &#125;)  <span class="hljs-comment">// 带查询参数，结果是 /register?plan=private</span><br><br>router.push(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/about&#x27;</span>, <span class="hljs-attr">hash</span>: <span class="hljs-string">&#x27;#team&#x27;</span> &#125;)                  <span class="hljs-comment">// // 带 hash，结果是 /about#team</span><br></code></pre></div></td></tr></table></figure><h3 id="替换当前位置">🥑替换当前位置</h3><p><strong>使用</strong><code>replace</code><strong>不会向</strong><code>history</code><strong>增加记录而是替换当前记录</strong></p><p><strong>声明式:</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/user&quot;</span> <span class="hljs-attr">replace</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>编程式:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">router.replace(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user&#x27;</span> &#125;)<br>router.push(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user&#x27;</span>, <span class="hljs-attr">replace</span>: <span class="hljs-literal">true</span> &#125;)      <span class="hljs-comment">// 等效于</span><br></code></pre></div></td></tr></table></figure><h2 id="命名路由">命名路由</h2><p><strong>使命名的路由可简便的调用</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/:id/:name&#x27;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;user&#x27;</span>,             <span class="hljs-comment">// 命名为`user`</span><br>        <span class="hljs-attr">component</span>: USER<br>    &#125;<br>]<br></code></pre></div></td></tr></table></figure><p><strong>编程式:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">router.push(&#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;user&#x27;</span>,<br>    <span class="hljs-attr">params</span>: &#123;                     <span class="hljs-comment">// 路由参数</span><br>        <span class="hljs-attr">id</span>: <span class="hljs-number">001</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Jonathan&#x27;</span><br>    &#125;<br>&#125;)<br></code></pre></div></td></tr></table></figure><p><strong>声明式:</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;&#123; name: &#x27;user&#x27;, params: &#123; id: 001, name: &#x27;Jonathan&#x27; &#125; &#125;&quot;</span>&gt;</span><br>    个人信息<br><span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="命名视图">命名视图</h2><p><strong>可以在同一组件内渲染多个</strong><code>router-view</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- name默认值为default --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Docs&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Header&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>为多个组件指定渲染视图</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>        <span class="hljs-attr">components</span>: &#123;        <span class="hljs-comment">// 需加`s`</span><br>            <span class="hljs-attr">default</span>: Menu,<br>            <span class="hljs-attr">Docs</span>: Docs,      <span class="hljs-comment">// ES6简写`Docs,`</span><br>            <span class="hljs-attr">Header</span>: Header<br>        &#125;<br>    &#125;<br>]<br></code></pre></div></td></tr></table></figure><h2 id="重定向">重定向</h2><p><strong>将</strong><code>路由1</code><strong>跳转至</strong><code>路由2</code></p><p><strong>可将没有锚点的路由</strong><code>/</code><strong>重定向至主页面路由</strong><code>/home</code></p><p><strong>重定向可以是</strong><code>路径</code>,<code>方法</code>,<code>命名路由</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-attr">redirect</span>: <span class="hljs-string">&#x27;/home&#x27;</span> &#125;,     <span class="hljs-comment">// 可不绑定组件</span><br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/home&#x27;</span>, <span class="hljs-attr">component</span>: Home &#125;<br>]<br></code></pre></div></td></tr></table></figure><h2 id="别名">别名</h2><h2 id="路由组件传参">路由组件传参</h2><h3 id="布尔模式">🍆布尔模式</h3><p><strong>设置</strong><code>props</code><strong>为</strong><code>true</code><strong>即可将</strong><code>router.params</code><strong>属性赋给组件的</strong><code>props</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> USER = &#123;<br>    <span class="hljs-attr">props</span>: [<span class="hljs-string">&#x27;id&#x27;</span>]<br>    <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;&lt;div&gt;&#123;&#123; id &#125;&lt;/div&gt;&#x27;</span><br>&#125;<br><br><span class="hljs-keyword">const</span> routes = [<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/:id&#x27;</span>, <span class="hljs-attr">component</span>: USER, <span class="hljs-attr">props</span>:<span class="hljs-literal">true</span> &#125;<br>]<br></code></pre></div></td></tr></table></figure><h3 id="命名视图-1">🍆命名视图</h3><p><strong>可为不同的视图设置</strong><code>props</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/:id&#x27;</span>,<br>    <span class="hljs-attr">components</span>: &#123;<br>        <span class="hljs-attr">default</span>: User,<br>        Docs,<br>        Posts<br>    &#125;,<br>    <span class="hljs-attr">props</span>: &#123;<br>        <span class="hljs-attr">default</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">Docs</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">Posts</span>: <span class="hljs-literal">false</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="对象模式">🍆对象模式</h3><h2 id="导航守卫">导航守卫</h2><h3 id="全局前置守卫">🥬全局前置守卫</h3><p><strong>全局前置守卫会按创建顺序执行,在所有守卫</strong><code>resolve</code><strong>完前状态均为</strong><code>pending</code></p><p><code>beforeEach((to, from[, next]) =&gt; &#123;&#125;)</code></p><p><strong>返回</strong><code>true</code><strong>或不返回表示导航有效</strong></p><p><strong>返回</strong><code>false</code><strong>取消导航,回至</strong><code>from</code></p><p><strong>返回</strong><code>路由对象</code><strong>导航至该</strong><code>路由对象</code></p><p><code>to</code><strong>:正在进入的路由对象</strong></p><p><code>from</code><strong>:正在离开的路由对象</strong></p><ul><li><code>next()</code></li></ul><p><strong>执行下一个</strong></p><ul><li><code>next(false)</code></li></ul><p><strong>停止导航,回到</strong><code>from</code></p><ul><li><code>next(路由对象)</code></li></ul><p><strong>改变</strong><code>to</code><strong>路由对象</strong></p><ul><li><code>next(Error)</code></li></ul><p><strong>导航终止,</strong><code>Error</code><strong>传给回调</strong><code>router.onError</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> router = <span class="hljs-keyword">new</span> VueRouter(&#123;...&#125;)<br>router.beforeEach(<span class="hljs-function">(<span class="hljs-params"><span class="hljs-string">&#x27;/user&#x27;</span>, <span class="hljs-string">&#x27;/home&#x27;</span>, next</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 处理代码</span><br>    next(...)<br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="全局后置钩子">🥬全局后置钩子</h3><p><strong>后置钩子不会改变导航,不接受</strong><code>next</code><strong>,其用于改变页面标题等功能</strong></p><p><code>afterEach((to, from[, failure]) =&gt; &#123;&#125;)</code></p><h3 id="路由独享守卫">🥬路由独享守卫</h3><p><strong>可以直接在</strong><code>routes</code><strong>中配置守卫,守卫只有从不同路由进入才触发,动态参数改变不触发</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/:id&#x27;</span>,<br>        <span class="hljs-attr">component</span>: User,<br>        <span class="hljs-attr">beforEach</span>: <span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span>, next</span>) =&gt;</span> &#123;<br>            <span class="hljs-comment">// ...</span><br>        &#125;<br>    &#125;<br>]<br></code></pre></div></td></tr></table></figure><h2 id="路由元信息">路由元信息</h2><p><strong>可以附加所需信息至</strong><code>meta</code><strong>属性,路由地址与导航守卫均可访问</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123;<br>        <span class="hljs-comment">// 其他配置</span><br>        <span class="hljs-attr">meta</span>: &#123;<br>            <span class="hljs-attr">isAuthentication</span>: <span class="hljs-literal">true</span><br>        &#125;<br>    &#125;<br>]<br></code></pre></div></td></tr></table></figure><h3 id="访问meta">访问<code>meta</code></h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">$route.meta             <span class="hljs-comment">// 访问父字段至子字段的meta</span><br>$route.matched[].meta   <span class="hljs-comment">// 访问路由数组中z的meta</span><br></code></pre></div></td></tr></table></figure><h2 id="数据获取">数据获取</h2>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
      <tag>router</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue动画与过渡</title>
    <link href="/2022/01/23/vue%E5%8A%A8%E7%94%BB%E4%B8%8E%E8%BF%87%E6%B8%A1/"/>
    <url>/2022/01/23/vue%E5%8A%A8%E7%94%BB%E4%B8%8E%E8%BF%87%E6%B8%A1/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗Vue组件</title>
    <link href="/2022/01/22/vue%E7%BB%84%E4%BB%B6/"/>
    <url>/2022/01/22/vue%E7%BB%84%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p><strong>组件名推荐使用烤串式命名</strong></p><p><code>my-component</code><strong>DOM与模板均适用</strong></p><p><code>myComponent</code><strong>仅在模板中适用</strong></p><h2 id="组件注册">组件注册</h2><h3 id="组件注册-1">🥕组件注册</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = Vue.creatApp(&#123;  &#125;<span class="hljs-comment">/* 组件对象]*/</span>)<br>app.component(<span class="hljs-string">&#x27;component-name&#x27;</span>, )<br></code></pre></div></td></tr></table></figure><h3 id="全局注册">🥕全局注册</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">Vue.createApp(&#123;...&#125;).component(<span class="hljs-string">&#x27;component-name&#x27;</span>,&#123;<br>    <span class="hljs-comment">// ...</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="局部注册">🥕局部注册</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> componentName = &#123;<br>    /...<br>&#125;<br><span class="hljs-keyword">const</span> app = Vue.createApp(<span class="hljs-string">&#x27;&#x27;</span>, &#123;&#125;)<br></code></pre></div></td></tr></table></figure><h2 id="props">props</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">props: &#123;<br>    <span class="hljs-attr">key</span>: &#123;<br>        <span class="hljs-attr">type</span>: [<br>            <span class="hljs-built_in">String</span> | <span class="hljs-built_in">Number</span> | <span class="hljs-built_in">Boolean</span> | <span class="hljs-built_in">Array</span> | <span class="hljs-built_in">Object</span> | <span class="hljs-built_in">Date</span> | <span class="hljs-built_in">Function</span> | <span class="hljs-built_in">Symbol</span><br>        ],               <span class="hljs-comment">// 可多选</span><br>        <span class="hljs-attr">default</span>: <span class="hljs-literal">null</span>    <span class="hljs-comment">// 默认值</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="插槽">插槽</h2><p><strong>组件模板中添加</strong><code>slot</code><strong>标签可以将组件识别为双标签</strong></p><p><strong>插槽不可访问父组件作用域</strong></p><p><strong>DOM:</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">my-component</span>&gt;</span><br>    插入位置<br><span class="hljs-tag">&lt;/<span class="hljs-name">my-component</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>模板:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;div&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">slot</span>&gt;</span>/* 默认内容 */<span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br>&lt;/div&gt;<br></code></pre></div></td></tr></table></figure><h3 id="具名插槽">🥬具名插槽</h3><p><strong>用</strong><code>slot</code><strong>的</strong><code>name</code><strong>属性绑定插槽</strong></p><p><strong>无</strong><code>name</code><strong>属性的会默认有</strong><code>name="default"</code></p><p><strong>在DOM中用</strong><code>&lt;template v-slot:slot-name&gt;&lt;/template&gt;</code></p><p><code>v-slot:name</code><strong>缩写</strong><code>#name</code></p><p><strong>模板:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;div&gt;<br>    &lt;header&gt;<br>        <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">slot</span>&gt;</span>/* 默认内容 */<span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br>    &lt;header&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>/* 默认内容 */<span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></span><br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>/* 默认内容 */<span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></span><br>&lt;/div&gt;<br></code></pre></div></td></tr></table></figure><p><strong>DOM:</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">my-page</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:default</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><br>            header<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:main</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><br>            main<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:footer</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><br>            footer<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">my-page</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="插槽传参">🥬插槽传参</h3><p><strong>用</strong><code>#name=&#123; x, y, ... &#125;</code><strong>向插槽传参</strong></p><p><strong>可用</strong><code>#name=&#123; x = 0, y = 1, ... &#125;</code><strong>提供默认值</strong></p><p><strong>使用缩写不提供</strong><code>name</code><strong>(如:</strong><code>#=&#123; x, y, ... &#125;</code><strong>)传参无效</strong></p><h3 id="动态插槽">🥬动态插槽</h3><p><code>v-slot:[name]</code><strong>实现动态插槽</strong></p><h2 id="section"></h2>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript对象</title>
    <link href="/2022/01/22/JavaScript%E5%AF%B9%E8%B1%A1/"/>
    <url>/2022/01/22/JavaScript%E5%AF%B9%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗Vue3.2基础</title>
    <link href="/2022/01/19/vue3-2%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/19/vue3-2%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="setup语法糖">setup语法糖</h2><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./son.vue&#x27;</span>               <span class="hljs-comment">// 无需competazhu&#x27;c</span></span><br><span class="javascript">    <span class="hljs-keyword">const</span> data = ref(<span class="hljs-string">&#x27;son&#x27;</span>)                   <span class="hljs-comment">// 无需return</span></span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">son</span>&gt;</span>&#123;&#123; data &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">son</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></div></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./son.vue&#x27;</span>               <span class="hljs-comment">// 无需competazhu&#x27;c</span></span><br><span class="javascript">    <span class="hljs-keyword">const</span> props = defineProps(&#123;</span><br><span class="javascript">        <span class="hljs-attr">key</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">type</span>: ,</span><br><span class="javascript">            <span class="hljs-keyword">default</span>: </span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;)</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">son</span>  &#123;&#123; <span class="hljs-attr">data</span> &#125;&#125;/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
      <tag>Vue3.2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>❌Vuex基础</title>
    <link href="/2022/01/17/vuex%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/17/vuex%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<p><strong>vuex用于解决组件间的数据通信</strong></p><p><img src="https://vuex.vuejs.org/vuex.png" srcset="/img/loading.gif" lazyload></p><h2 id="section"></h2><h2 id="state共享状态数据">state(共享状态数据)</h2><h2 id="mutaitions同步处理">mutaitions(同步处理)</h2><h2 id="actions异步处理">actions(异步处理)</h2>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
      <tag>Vuex</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue基础</title>
    <link href="/2022/01/17/vue%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/17/vue%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="指令">指令</h2><h3 id="指令基础">🥝指令基础</h3><p><strong>指令以</strong><code>v-</code><strong>为前缀的属性</strong></p><p><strong>指令可以接受一个单句表达式(除了v-for,v-on)</strong></p><p><code>v-???:参数=""</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;clickFunction&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><code>v-???:[动态参数]=""</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-on:</span>[<span class="hljs-attr">eventType</span>]=<span class="hljs-string">&quot;eventFunction&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="指令语法糖">🥝指令语法糖</h3><p><code>v-bind:</code><strong>等价于</strong><code>:</code></p><p><code>v-on:</code><strong>等价于</strong><code>@</code></p><h3 id="指令修饰符">🥝指令修饰符</h3><h2 id="插值">插值</h2><p><strong>双花括号内输入插值变量(单个js表达式)</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tag</span>&gt;</span>&#123;&#123; (conditions) ? msgT : msgF &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>v-once</code><strong>指令数据只响应一次</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-once</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>v-html</code><strong>指令插入html代码</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;htmlCode&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>v-bind</code><strong>指令绑定标签属性值</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-bind:</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;titleMsg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="data选项">data选项</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = &#123;<br>    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-comment">// 业务处理</span><br>        <span class="hljs-keyword">return</span> &#123;  &#125; <span class="hljs-comment">// 返回需求内容对象</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="methods选项">methods选项</h2><p><code>this</code><strong>指向组件实例</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = &#123;<br>    <span class="hljs-attr">methods</span>: &#123;<br>        <span class="hljs-function"><span class="hljs-title">methodOne</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-comment">// 业务处理</span><br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">methodTwo</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-comment">// 业务处理</span><br>        &#125;,<br>        <span class="hljs-comment">// ......</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="computed选项">computed选项</h2><p><strong>当数据没有变化时返回缓存</strong></p><h2 id="watch选项">watch选项</h2><p><strong>被侦听数据改变时执行</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = &#123;<br>    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> msg = <span class="hljs-string">&#x27;Jonathan&#x27;</span><br>        <span class="hljs-keyword">return</span> &#123; Jonathan &#125;<br>    &#125;,<br>    <span class="hljs-attr">watch</span>: &#123;<br>        <span class="hljs-function"><span class="hljs-title">msg</span>(<span class="hljs-params">oldMsg, newMsg</span>)</span>&#123;<br>            <span class="hljs-comment">// 业务代码</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="绑定class">绑定class</h2><p><strong>用</strong><code>v-bind:class=""</code><strong>指令来绑定动态</strong><code>class</code><strong>属性</strong></p><h3 id="对象绑定">🥬对象绑定</h3><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;&#123; className1 : isTrue1 &#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = &#123;<br>    <span class="hljs-keyword">let</span> isTrue1 = <span class="hljs-comment">// 是否应用className1</span><br>    <span class="hljs-keyword">return</span> &#123; isTrue1 &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>可绑定多个类</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;&#123; className1 : isTrue1, className2 : isTrue2, ... &#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="数组绑定">🥬数组绑定</h3><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html">```<br><br><br><br>## 绑定内联style<br><br>**vue可自动匹配css前缀**<br><br><br><br><br><br>## 条件渲染<br><br>### 🍉`v-if`系列指令<br><br>**可用**`v-if`,`v-else-if`,`v-else`**指令来指定不同条件下的显示组件**<br><br>`v-if`**初始化不会全部渲染,故初始化开销较小,但频繁切换开销大不适合频繁切换的组件**<br><br><br><br>```html<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;a&#x27; &amp;&amp; ch &lt;= &#x27;z&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是小写字符<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;A&#x27; &amp;&amp; ch &lt;= &#x27;Z&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是大写字符<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是阿拉伯数字<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- ...可多个v-else-if --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch既不是字母也不是阿拉伯数字<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="v-show指令">🍉<code>v-show</code>指令</h3><p><code>v-show</code><strong>会全部渲染后再改变css来条件显示组件</strong></p><p><code>v-show</code><strong>初始化开销大,适合应用于需频繁切换的组件</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;a&#x27; &amp;&amp; ch &lt;= &#x27;z&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是小写字符<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;A&#x27; &amp;&amp; ch &lt;= &#x27;Z&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是大写字符<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是阿拉伯数字<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="列表渲染">列表渲染</h2><p><code>v-for="item in/of items"</code><strong>指令</strong></p><h3 id="遍历正整数">🥦遍历正整数</h3><p><strong>从1开始遍历</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i of n&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="遍历数组">🥦遍历数组</h3><p><strong>可选两个参数</strong><code>(value[值], index[索引])</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(value, index) of [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]&quot;</span>&gt;</span>第&#123;&#123; index &#125;&#125;个元素是&#123;&#123; value &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="遍历对象">🥦遍历对象</h3><p><strong>可选三个参数</strong><code>(value[值], key[键名], index[索引])</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(vlaue, key, index) in obj&quot;</span>&gt;</span>&#123;&#123; index &#125;&#125;-&#123;&#123; key &#125;&#125;:&#123;&#123; value &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="事件监听">事件监听</h2><p><code>v-on:event="method"</code><strong>指令绑定事件</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;count++&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>缩写</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;count++&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>绑定多个事件</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;count++, count *= 2&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="事件修饰符">🍠事件修饰符</h3><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 阻止单击事件继续冒泡 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;doThis&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 提交事件不再重载页面 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> @<span class="hljs-attr">submit.prevent</span>=<span class="hljs-string">&quot;onSubmit&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 修饰符可以串联 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> @<span class="hljs-attr">click.stop.prevent</span>=<span class="hljs-string">&quot;doThat&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 只有修饰符 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> @<span class="hljs-attr">submit.prevent</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 添加事件监听器时使用事件捕获模式 --&gt;</span><br><span class="hljs-comment">&lt;!-- 即内部元素触发的事件先在此处理，然后才交由内部元素进行处理 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click.capture</span>=<span class="hljs-string">&quot;doThis&quot;</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;</span><br><span class="hljs-comment">&lt;!-- 即事件不是从内部元素触发的 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click.self</span>=<span class="hljs-string">&quot;doThat&quot;</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="按键修饰符">🍠按键修饰符</h3><h3 id="事件名">🍠事件名</h3><h2 id="表单绑定">表单绑定</h2><p><code>v-model</code><strong>指令实现双向绑定</strong></p><p><strong>中文等拼写时不会绑定</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;msg&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>    Your input is &#123;&#123; msg &#125;&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="复选元素">🥑复选元素</h3><p><strong>对于复选元素</strong><code>v-model</code><strong>返回一个数组</strong></p><h3 id="修饰符">🥑修饰符</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">v-model.lazy                 <span class="hljs-comment">// 确认时再渲染</span><br>v-model.number               <span class="hljs-comment">// 用parseFloat()转数字,失败则返回原始值</span><br>v-model.trim                 <span class="hljs-comment">// 去除格式符</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>✔Vue高亮</title>
    <link href="/2022/01/17/vue%E9%AB%98%E4%BA%AE/"/>
    <url>/2022/01/17/vue%E9%AB%98%E4%BA%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="安装vuter插件">安装vuter插件</h2><h3 id="搜索vuter并安装">🌰搜索<code>vuter</code>并安装</h3><h3 id="打开设置">🌰打开设置</h3><p><code>ctrl+shift+p</code><strong>搜索</strong><code>首选项:打开设置(json)</code><strong>或</strong><code>Open Settings (JSON)</code></p><h3 id="加入配置">🌰加入配置</h3><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json"><span class="hljs-string">&quot;emmet.syntaxProfiles&quot;</span>: &#123;<br><span class="hljs-attr">&quot;vue-html&quot;</span>: <span class="hljs-string">&quot;html&quot;</span>,<br><span class="hljs-attr">&quot;vue&quot;</span>: <span class="hljs-string">&quot;html&quot;</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="保存即可">🌰保存即可</h3>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vite基础使用</title>
    <link href="/2022/01/17/vite%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/01/17/vite%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="安装vite">安装vite</h2><h3 id="项目创建">🍉项目创建</h3><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">pnpm create vite                         # 开始创建vite项目<br></code></pre></div></td></tr></table></figure><h3 id="安装依赖">🍉安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">pnpm install                             <span class="hljs-comment"># 进入项目目录后再安装</span><br></code></pre></div></td></tr></table></figure><h3 id="启动项目">🍉启动项目</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">pnpm run dev                             <span class="hljs-comment"># 自动开启localhost:3000端口</span><br></code></pre></div></td></tr></table></figure><h2 id="使用scss">使用scss</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">pnpm add sa<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vite</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue3基础</title>
    <link href="/2022/01/17/vue3%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/17/vue3%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="生成vue3">生成vue3</h2><h3 id="从vue导入createapp函数">🥬从vue导入createApp函数</h3><p><strong>在</strong><code>src</code><strong>目录下新建</strong><code>main.js</code><strong>导入</strong><code>createApp</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="创建一个根组件app.vue导入至main.js">🥬创建一个根组件App.vue导入至main.js</h3><p><strong>在</strong><code>src</code><strong>目录下新建</strong><code>App.vue</code><strong>中导入</strong><code>main.js</code></p><p><code>App.vue</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        根组件内容</span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span></span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><p><code>main.js</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> &#123;App <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="使用createapp创建应用实例">🥬使用createApp创建应用实例</h3><p>在<code>main.js</code>添加</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = createApp(App)<br></code></pre></div></td></tr></table></figure><h3 id="应用实例挂载到app容器中">🥬应用实例挂载到#app容器中</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">app.mount(<span class="hljs-string">&#x27;#app&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h2 id="setup函数">setup函数</h2><ul><li><strong>容器函数,组合各个API</strong></li><li><strong>函数内不可使用</strong><code>this</code><strong>(在组件实例创建前执行)</strong></li><li><strong>返回模板需求的数据与函数(对象)</strong></li></ul><h3 id="创建vue模板及setup函数">🍅创建vue模板及setup函数</h3><p><code>App.vue</code><strong>中写入根组件及</strong><code>setup</code><strong>函数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="在setup与模板中写入代码返回数据">🍅在setup与模板中写入代码,返回数据</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> msg = <span class="hljs-string">&#x27;Hellow Word!&#x27;</span></span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; msg &#125;                            <span class="hljs-comment">// 返回数据为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="在setup与模板中写入代码返回函数">🍅在setup与模板中写入代码,返回函数</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;say ()&quot;</span> &gt;</span>Click Me.<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> say = <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Hellow Word!&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; say &#125;                            <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="生命周期">生命周期</h2><h3 id="钩子函数">🍈钩子函数</h3><ul><li><code>setup</code><strong>创建实例前</strong></li><li><code>onBeforeMount</code><strong>挂载DOM前</strong></li><li><code>onMounted</code><strong>挂载DOM后</strong></li><li><code>onBeforeUpdate</code><strong>更新组件前</strong></li><li><code>onUpdated</code><strong>更新组件后</strong></li><li><code>onBeforeUnmount</code><strong>卸载销毁前</strong></li><li><code>onUmounted</code><strong>卸载销毁后</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123;onBeforeMount, onMounted, onBeforeUpdate, onUpdated, onBeforeUnmount, onUmounted&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-comment">// 使用钩子函数需先导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 创建实例前</span></span></span><br><span class="javascript"><span class="xml"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onBeforeMount</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 挂载DOM前</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onMounted</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 挂载DOM后</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onBeforeUpdate</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 更新组件前</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml">         <span class="hljs-function"><span class="hljs-title">onUpdated</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-comment">// 更新组件后</span></span></span><br><span class="javascript"><span class="xml">         &#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onBeforeUnmount</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 卸载销毁前</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onUmounted</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-comment">// 卸载销毁后</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><ul><li><p><strong>钩子函数无需</strong><code>return</code><strong>可直接执行</strong></p></li><li><p><strong>可注册多个相同钩子(按序执行)</strong></p></li></ul><h2 id="reactive函数">reactive函数</h2><ul><li><strong>定义复杂数据类型(对象)为响应式数据</strong></li></ul><h3 id="写入点击记数功能">🍒写入点击记数功能</h3><p><strong>此时数据变化,但DOM不渲染</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; obj.count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = &#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">count</span>: <span class="hljs-number">0</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; obj, cnt &#125;                            <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="使用reactive函数">🍒使用reactive函数</h3><p><strong>用</strong><code>reactive</code><strong>函数将</strong><code>obj</code><strong>对象构造为响应式数据即可动态响应</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; obj.count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                        <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                       <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">count</span>: <span class="hljs-number">0</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; obj, cnt &#125;                          <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="toref函数">toRef函数</h2><ul><li><strong>单独返回响应式对象的某一属性</strong></li><li><strong>修改</strong><code>attribute.value</code><strong>来响应式变化</strong></li></ul><h3 id="写入点击记数功能-1">🥒写入点击记数功能</h3><p><strong>使用解构得到的为静态值,无法实时更新</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                        <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                       <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">count</span>: <span class="hljs-number">0</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">time</span>: <span class="hljs-number">2</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">const</span> &#123; count &#125; = obj</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; count, cnt &#125;                          <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="使用toref函数">🥒使用toRef函数</h3><p><strong>用</strong><code>toRef</code><strong>函数将属性构造为响应式对象即可响应</strong></p><p><strong>通过修改其</strong><code>value</code><strong>属性实现响应式数据</strong></p><p><strong>该值与原对象关联</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive, toRef &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                 <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                       <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">count</span>: <span class="hljs-number">0</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">time</span>: <span class="hljs-number">2</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">const</span> count = toRef(obj, <span class="hljs-string">&#x27;count&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> count.value++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; count, cnt &#125;                        <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="torefs函数">toRefs函数</h2><ul><li><strong>可以批量解构响应式对象为响应式数据</strong></li></ul><h3 id="写入点击记数功能-2">🍓写入点击记数功能</h3><p><strong>使用解构得到的为静态值,无法实时更新</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123; time &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                        <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                       <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">count</span>: <span class="hljs-number">0</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">time</span>: <span class="hljs-number">2</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; ...obj &#125;                          <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="使用torefs函数">🍓使用toRefs函数</h3><p><strong>用</strong><code>toRefs</code><strong>函数将属性集构造为响应式对象</strong></p><p><strong>新对象与原对象关联</strong></p><p><strong>通过修改其属性的</strong><code>value</code><strong>属性实现响应式数据</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123; time &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive, toRefs &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                 <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                        <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">count</span>: <span class="hljs-number">0</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">time</span>: <span class="hljs-number">2</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">const</span> obj2 = toRefs(obj)                      <span class="hljs-comment">// 响应式属性集</span></span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; ...obj2, cnt &#125;                  <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="ref函数">ref函数</h2><ul><li><p><strong>将简单数据类型定义为响应式数据</strong></p></li><li><p><strong>更改数据需更改</strong><code>value</code><strong>属性</strong></p></li></ul><h3 id="定义简单响应式数据">🍊定义简单响应式数据</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> msg = ref(<span class="hljs-string">&#x27;title&#x27;</span>)                                        <span class="hljs-comment">// </span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">return</span> &#123; msg &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="computed函数">computed函数</h2><ul><li><p><strong>数据 根据响应式数据变化而变化时使用计算函数</strong></p></li><li><p><strong>计算函数返回值只读</strong></p></li></ul><h3 id="计算函数">🥦计算函数</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; computed, ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> oldDate = ref(<span class="hljs-number">2020</span>)</span></span><br><span class="javascript"><span class="xml">         <span class="hljs-keyword">const</span> newDate = computed(<span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-keyword">return</span> oldDate.value + <span class="hljs-number">1</span></span></span><br><span class="javascript"><span class="xml">         &#125;)</span></span><br><span class="javascript"><span class="xml">         <span class="hljs-keyword">return</span> &#123; oldDate, newDate &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><p><code>get()</code></p><p><code>set()</code></p><h2 id="watch函数">watch函数</h2><ul><li><strong>数据变化后执行</strong></li></ul><h3 id="监听一个简单响应式数据">🍎监听一个简单响应式数据</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; ref, watch &#125;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> foo = ref(<span class="hljs-string">&#x27;bar&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        whatch(foo, <span class="hljs-function">(<span class="hljs-params">oldDate, newDate</span>) =&gt;</span> &#123;                 <span class="hljs-comment">// 回调函数传递改变前后的数据值</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;foo变化了&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="监听一个响应式对象">🍎监听一个响应式对象</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactie, watch &#125;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> foo = reactive(&#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">age</span>: <span class="hljs-number">19</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        whatch(foo, <span class="hljs-function">(<span class="hljs-params">oldDate, newDate</span>) =&gt;</span> &#123;                 <span class="hljs-comment">// 回调函数传递改变前后的数据值</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;foo变化了&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="监听多个响应式数据">🍎监听多个响应式数据</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactie, ref, watch &#125;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> foo = reactive(&#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">age</span>: <span class="hljs-number">19</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> far = ref(<span class="hljs-number">10</span>)</span></span><br><span class="javascript"><span class="xml">        whatch([foo, far], <span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;foo,far至少一个变化了&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="监听一个响应式对象的某一属性">🍎监听一个响应式对象的某一属性</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactie, watch &#125;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> foo = reactive(&#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">age</span>: <span class="hljs-number">19</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        whatch(<span class="hljs-function">() =&gt;</span> foo.name, <span class="hljs-function">() =&gt;</span> &#123;                       <span class="hljs-comment">// 用函数传递属性值</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;foo.name变化了&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="深度监听">🍎深度监听</h3><ul><li><strong>监听响应式对象的对象变化</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">watch(date, callback, &#123;<br>    <span class="hljs-attr">deep</span>: <span class="hljs-literal">true</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="默认执行">🍎默认执行</h3><ul><li><strong>初始化时执行一次</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">watch(date, callback, &#123;<br>    <span class="hljs-attr">immediate</span>: <span class="hljs-literal">true</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><h2 id="ref属性">ref属性</h2><ul><li><strong>获取DOM或组件实例</strong></li></ul><h3 id="获取单个dom">🌳获取单个DOM</h3><p><strong>先定义并返回空的响应式数据</strong></p><p><strong>再将</strong><code>ref</code><strong>属性绑定到DOM上</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>title<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;app&#x27;</span></span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> title = ref(<span class="hljs-literal">null</span>)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; title &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="获取v-for遍历的dom">🌳获取<code>v-for</code>遍历的DOM</h3><p><strong>定义并返回一个空数组</strong></p><p><strong>定义一个DOM插入函数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i in 4&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;i&quot;</span> <span class="hljs-attr">:ref</span>=<span class="hljs-string">&quot;setDom&quot;</span>&gt;</span>第&#123;&#123; i &#125;&#125;个<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> domList = []</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-keyword">const</span> setDom = <span class="hljs-function">(<span class="hljs-params">el</span>) =&gt;</span> &#123;</span></span><br><span class="javascript"><span class="xml">domList.push(el)</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">return</span> &#123; setDom &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="父子通讯">父子通讯</h2><h3 id="父子">🍁父=&gt;子</h3><p><strong>用</strong><code>:key="variable"</code><strong>绑定给子组件</strong></p><p><strong>子元素用</strong><code>props</code><strong>接收数据</strong></p><p><strong>子元素</strong><code>setup(props)</code><strong>传递数据给组合API</strong></p><p><code>App.vue</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; level &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">son</span> <span class="hljs-attr">:relationship</span>=<span class="hljs-string">&quot;level&quot;</span> /&gt;</span>           // 绑定传递</span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./son.vue&#x27;</span>                 <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">components</span>: &#123;                          <span class="hljs-comment">// 注册组件</span></span></span><br><span class="javascript"><span class="xml">son</span></span><br><span class="javascript"><span class="xml">&#125;,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> level = ref(<span class="hljs-string">&#x27;father&#x27;</span>)</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">return</span> &#123; level &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><p><code>son.vue</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>子组件&#123;&#123; relationship &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;son&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-attr">props</span>: &#123;                                <span class="hljs-comment">// 接收数据</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">relationship</span>: &#123;</span></span><br><span class="javascript"><span class="xml">                <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,</span></span><br><span class="javascript"><span class="xml">                <span class="hljs-attr">default</span>: <span class="hljs-string">&#x27;null&#x27;</span></span></span><br><span class="javascript"><span class="xml">            &#125;</span></span><br><span class="javascript"><span class="xml">        &#125;,</span></span><br><span class="javascript"><span class="xml">    setup (props) &#123;                        <span class="hljs-comment">// 传递数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-built_in">console</span>.log(props.relationship)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="父子-1">🍁父&lt;=子</h3><p><strong>利用</strong><code>&#123; emit &#125;</code><strong>(触发自定义事件)向父组件传递数据</strong></p><p><strong>父组件函数接收数据</strong></p><p><code>App.vue</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>父组件<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">son</span> @<span class="hljs-attr">msg</span>=<span class="hljs-string">&quot;receive&quot;</span> /&gt;</span>           <span class="hljs-comment">&lt;!-- 触发接受函数 --&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./son.vue&#x27;</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">components</span>: &#123;</span></span><br><span class="javascript"><span class="xml">son</span></span><br><span class="javascript"><span class="xml">&#125;,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> receive = <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> <span class="hljs-built_in">console</span>.log(res)  <span class="hljs-comment">// 接收数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">return</span> &#123; receive &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><p><code>son.js</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;pass&quot;</span> &gt;</span>子组件<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>                   <span class="hljs-comment">&lt;!-- 触发传递函数 --&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;son&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup (props, &#123; emit &#125;) &#123;                        <span class="hljs-comment">// 不可省略props</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">const</span> pass = <span class="hljs-function">() =&gt;</span> emit(<span class="hljs-string">&#x27;msg&#x27;</span>, <span class="hljs-string">&#x27;sonDom&#x27;</span>) <span class="hljs-comment">// 数据传递</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">return</span> &#123; pass &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="父子-语法糖">🍁父&lt;=&gt;子 语法糖</h3><h2 id="依赖注入">依赖注入</h2><p><code>provide</code><strong>函数给后代提供数据与方法</strong></p><p><code>inject</code><strong>函数接受父代数据与方法</strong></p><h3 id="向后代传值">🍉向后代传值</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; provide &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br>provide(<span class="hljs-string">&#x27;key&#x27;</span>, value)                       <span class="hljs-comment">// 向后代传值</span><br></code></pre></div></td></tr></table></figure><h3 id="接收值">🍉接收值</h3><p><strong>单向数据流</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> key = inject(<span class="hljs-string">&#x27;key&#x27;</span>)                  <span class="hljs-comment">// 接受父代传递值</span><br></code></pre></div></td></tr></table></figure><h3 id="数据通信">🍉数据通信</h3><p><strong>在父组件定义并传递一个数据修改方法</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> changeValue = <span class="hljs-function">() =&gt;</span> key()            <span class="hljs-comment">// 修改value</span><br>provide(<span class="hljs-string">&#x27;changeKey&#x27;</span>, changeValue)          <span class="hljs-comment">// 向后代传递方法</span><br></code></pre></div></td></tr></table></figure><p><strong>后代接收方法来修改数据</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> change = inject(<span class="hljs-string">&#x27;changeKey&#x27;</span>)         <span class="hljs-comment">// 用此函数修改key的值</span><br></code></pre></div></td></tr></table></figure><h2 id="setup-语法糖">setup 语法糖</h2><h3 id="注册与变量">🍍注册与变量</h3><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">Son</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript"></span><br><span class="javascript">  <span class="hljs-keyword">import</span> Son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@...&#x27;</span>              <span class="hljs-comment">// 无需再注册</span></span><br><span class="javascript">  <span class="hljs-keyword">const</span> title = <span class="hljs-string">&#x27;糖&#x27;</span>                  <span class="hljs-comment">// 无需return变量</span></span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="section">🍍</h3>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Vue3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>yarn基础使用</title>
    <link href="/2022/01/16/yarn%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/01/16/yarn%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="脚本起用">脚本起用</h2><ul><li><strong>在当前窗口启用脚本</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">Set-ExecutionPolicy</span> RemoteSigned <span class="hljs-keyword">Process</span>       <span class="hljs-comment"># 在当前窗口启用脚本</span><br></code></pre></div></td></tr></table></figure><h2 id="安装全部项目依赖">安装全部项目依赖</h2><ul><li><strong>package</strong><code>name</code><strong>含中文字符会报错</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn                                           <span class="hljs-comment"># 安装所有依赖包</span><br></code></pre></div></td></tr></table></figure><h2 id="初始化">初始化</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn init <span class="hljs-literal">-y</span>   <span class="hljs-comment"># 默认</span><br>yarn init      <span class="hljs-comment"># 自定义</span><br></code></pre></div></td></tr></table></figure><h2 id="添加包">添加包</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn add name [<span class="hljs-type">package</span>] <span class="hljs-comment"># 安装包</span><br>yarn add global [<span class="hljs-type">package</span>] <span class="hljs-comment"># 全局安装包</span><br></code></pre></div></td></tr></table></figure><h2 id="移除包">移除包</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn remove [<span class="hljs-type">package</span>]                          <span class="hljs-comment"># 移除包</span><br>yarn remove global [<span class="hljs-type">package</span>]                   <span class="hljs-comment"># 全局移除包</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>yarn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🏗webpack基础使用</title>
    <link href="/2022/01/16/webpack%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/01/16/webpack%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p><strong>webpack打包后压缩冗余空格与换行、变量名</strong></p><h2 id="初始化包环境">初始化包环境</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn init                                   <span class="hljs-comment"># 回车确认</span><br>yarn init <span class="hljs-literal">-y</span>                                <span class="hljs-comment"># 默认配置</span><br></code></pre></div></td></tr></table></figure><h2 id="安装webpack包">安装webpack包</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn add webpack webpack<span class="hljs-literal">-cli</span> <span class="hljs-literal">-D</span><br></code></pre></div></td></tr></table></figure><h2 id="配置scripts">配置scripts</h2><ul><li><strong>在</strong><code>package.json</code><strong>文件下配置</strong></li></ul><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json"><span class="hljs-string">&quot;scripts&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;build&quot;</span>: <span class="hljs-string">&quot;webpack&quot;</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="建立项目文件夹src">建立项目文件夹src</h2><ul><li><p><strong>默认入口</strong>:<code>src/index.js</code></p></li><li><p><strong>在</strong><code>package.json</code><strong>目录下建立</strong><code>src</code><strong>文件夹</strong></p></li></ul><h2 id="js打包">js打包</h2><h3 id="导出模块文件">🍉导出模块文件</h3><p><code>src</code><strong>下新建</strong><code>sum/sum.js</code></p><p><code>sum.js</code><strong>写入导出求和函数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> sum = <span class="hljs-function">(<span class="hljs-params">x, y</span>) =&gt;</span> x + y<br></code></pre></div></td></tr></table></figure><h3 id="导入模块文件">🍉导入模块文件</h3><p><code>src</code><strong>下新建默认入口文件</strong><code>index.js</code></p><p><code>index.js</code><strong>引用</strong><code>sum</code><strong>函数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123;sum&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./sum/sum&#x27;</span><br><br><span class="hljs-keyword">const</span> [x, y] = [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>]<br><span class="hljs-built_in">console</span>.log(sum(x, y))<br></code></pre></div></td></tr></table></figure><h3 id="打包">🍉打包</h3><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn build                                      <span class="hljs-comment"># 或 `npm run build`</span><br></code></pre></div></td></tr></table></figure><p><strong>运行后在</strong><code>src</code><strong>的同级目录下生成默认出口</strong><code>dist/main.js</code></p><p><code>main.js</code><strong>的内容为</strong><code>index.js</code><strong>与其模块</strong><code>sum.js</code><strong>的打包内容</strong></p><ul><li><strong>只有与入口文件关联的代码会被打包</strong></li></ul><p><code>main.js</code><strong>内容如下</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">(<span class="hljs-function">()=&gt;</span>&#123;<span class="hljs-string">&quot;use strict&quot;</span>;<span class="hljs-keyword">const</span>[o,s]=[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>];<span class="hljs-built_in">console</span>.log((<span class="hljs-function">(<span class="hljs-params">o,s</span>)=&gt;</span>o+s)(o,s))&#125;)();<br></code></pre></div></td></tr></table></figure><h3 id="更新代码">🍉更新代码</h3><p><strong>添加功能后再次</strong><code>yarn build</code><strong>打包即可更新</strong><code>main.js</code></p><h2 id="自定义打包出入口">自定义打包出入口</h2><h3 id="新建webpack配置文件">🍇新建webpack配置文件</h3><p><strong>在</strong><code>src</code><strong>同级目录下新建</strong><code>webpack.config.js</code><strong>文件</strong></p><h3 id="配置打包出入口">🍇配置打包出入口</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;path&quot;</span>)<br><br><span class="hljs-built_in">module</span>.exports = &#123;<br>    <span class="hljs-attr">entry</span>: <span class="hljs-string">&#x27;./src/入口文件名.js&#x27;</span>,<br>    <span class="hljs-attr">output</span>: &#123;<br>        <span class="hljs-attr">path</span>: path.join(__dirname, <span class="hljs-string">&#x27;出口文件夹&#x27;</span>),<br>        <span class="hljs-attr">filename</span>: <span class="hljs-string">&#x27;出口文件名.js&#x27;</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><ul><li><strong>🥝要先自定义打包命令以使用配置文件</strong></li></ul><p><strong>自定义打包命令:</strong><a href="#配置scripts">配置scripts</a></p><h3 id="打包yarn-build">🍇打包<code>yarn build</code></h3><h2 id="自动嵌入html">自动嵌入html</h2><p><code>html-webpack-plugin</code><strong>可以使webpack打包后自动将js引入html</strong><code>head</code><strong>标签中</strong></p><h3 id="安装">🍅安装</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn add html-webpack-plugin -D<br></code></pre></div></td></tr></table></figure><h3 id="提供主页面">🍅提供主页面</h3><p>在<code>src</code>同目录下新建<code>pubilc\index.html</code></p><h3 id="配置">🍅配置</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> HtmlWebpackPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;html-webpack-plugin&#x27;</span>)<br><br><span class="hljs-built_in">module</span>.exports = &#123;<br>    <span class="hljs-attr">plugins</span>: [<br>        <span class="hljs-keyword">new</span> HtmlWebpackPlugin(&#123;<br>            <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;./public/index.html&#x27;</span>          <span class="hljs-comment">// 要导入的html</span><br>        &#125;)<br>    ]<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="打包-1">🍅打包</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn build<br></code></pre></div></td></tr></table></figure><p><strong>默认在</strong><code>dist</code><strong>目录下生成</strong><code>index.html</code></p><h2 id="css打包">css打包</h2><h3 id="新建css文件">🥑新建css文件</h3><p><strong>在</strong><code>./src</code><strong>目录下新建</strong><code>css/background.css</code></p><p><code>background.css</code><strong>:</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span>&#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#000</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>webpack不可直接打包css(webpack默认识别js与json文件)</strong></p><p><strong>可安装loader加载器来打包css</strong></p><h3 id="安装loader">🥑安装loader</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn add style-loader css-loader -D<br></code></pre></div></td></tr></table></figure><p><strong>webpack通过</strong><code>css-loader</code><strong>识别与打包css</strong> <code>style-loader</code><strong>将样式绑定dom</strong></p><h3 id="webpack配置">🥑webpack配置</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">module</span>.exports = &#123;<br>    <span class="hljs-attr">module</span>: &#123;<br>        <span class="hljs-attr">rules</span>: [<br>            &#123;<br>                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.css$/</span>,                        <span class="hljs-comment">// 匹配所有css</span><br>                use: [<span class="hljs-string">&#x27;style-loader&#x27;</span>, <span class="hljs-string">&#x27;css-loader&#x27;</span>]<br>            &#125;<br>        ]<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="引入入口js">🥑引入入口js</h3><p><strong>在</strong><code>index.js</code><strong>(入口文件)中引入</strong><code>background.css</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./css/background.css&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="打包构建">🥑打包构建</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn build<br></code></pre></div></td></tr></table></figure><h2 id="图片打包">图片打包</h2><h3 id="安装依赖">🥕安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn add url-loader file-loader -D<br></code></pre></div></td></tr></table></figure><h3 id="webpack配置-1">🥕webpack配置</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&#123;<br>    <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.(png|jpg|gif|jpeg)$/i</span>,<br>    use: [<br>        &#123;<br>        <span class="hljs-attr">loader</span>: <span class="hljs-string">&#x27;url-loader&#x27;</span>,<br>        <span class="hljs-attr">options</span>: &#123;<br>        <span class="hljs-attr">limit</span>: <span class="hljs-number">8</span> * <span class="hljs-number">1024</span>,<br>        &#125;,<br>        &#125;,<br>    ],<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="字体图标打包">字体图标打包</h2>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>webpack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>✔hexo博客搭建</title>
    <link href="/2022/01/16/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/01/16/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="安装依赖包">1.安装依赖包</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">npm install <span class="hljs-literal">-g</span> hexo<span class="hljs-literal">-cli</span><br></code></pre></div></td></tr></table></figure><h2 id="初始化">2.初始化</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">hexo init<br>npm install<br></code></pre></div></td></tr></table></figure><h2 id="关联github">3.关联github</h2><h2 id="清除修改">清除修改</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo clean<br></code></pre></div></td></tr></table></figure><h2 id="上传博客">上传博客</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo g[enerate]<br>hexo d<br></code></pre></div></td></tr></table></figure><h2 id="本地服务器">本地服务器</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo g<br>hexo s[erver]<br></code></pre></div></td></tr></table></figure><h2 id="给文章加封面">给文章加封面</h2><ul><li><p><strong>在</strong><code>/source/img</code><strong>中放入图片</strong></p></li><li><p><strong>在开头</strong><code>Front-matter</code><strong>中配置</strong> <code>index_img</code> <strong>属性如下</strong></p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">index<span class="hljs-emphasis">_img: [url]</span><br></code></pre></div></td></tr></table></figure><h2 id="给文章加图片">给文章加图片</h2><p><strong>在</strong><code>_config.yml</code><strong>中设置</strong><code>post_asset_folder: true</code></p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></div></td></tr></table></figure><p><strong>新建文章</strong></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo n <span class="hljs-string">&quot;title&quot;</span><br></code></pre></div></td></tr></table></figure><p><strong>在</strong><code>_post</code><strong>下的</strong><code>title</code><strong>文件夹中放入图片</strong></p><p><strong>用markdown引用</strong></p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">![<span class="hljs-string">加载失败信息</span>](<span class="hljs-link">title\xxx.png</span>)<br></code></pre></div></td></tr></table></figure><h2 id="分类页">分类页</h2><ol type="1"><li><strong>创建分类页</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo new page categories<br></code></pre></div></td></tr></table></figure><ol start="2" type="1"><li><strong>在</strong><code>source/categories/index.md</code><strong>开头</strong><code>Front-matter</code><strong>中添加</strong><code>type: "categories"</code><strong>如下</strong></li></ol><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">---<br>title: categories<br>date: 2022-01-15 21:30:40<br><span class="hljs-section">type: &quot;categories&quot;</span><br><span class="hljs-section">---</span><br></code></pre></div></td></tr></table></figure><ol start="3" type="1"><li><strong>在博客的头部添加</strong><code>categories: - type</code><strong>即可分类</strong></li></ol><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">---<br>title: hexo博客搭建<br><span class="hljs-section">categories: [categories1, categories2] </span><br><span class="hljs-section">---</span><br></code></pre></div></td></tr></table></figure><h2 id="标签页">标签页</h2><ol type="1"><li><strong>创建标签页</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo new page tags<br></code></pre></div></td></tr></table></figure><ol start="2" type="1"><li><strong>在</strong><code>source/tags/index.md</code><strong>开头</strong><code>Front-matter</code><strong>中添加</strong><code>type: "tags"</code><strong>如下</strong></li></ol><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">---<br>title: categories<br>date: 2022-01-15 21:30:40<br><span class="hljs-section">type: &quot;tags&quot;</span><br><span class="hljs-section">---</span><br></code></pre></div></td></tr></table></figure><ol start="3" type="1"><li><strong>在博客的头部添加</strong><code>tags: [tag1, tag2, ...]</code><strong>即可分类</strong></li></ol><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">---<br>title: hexo博客搭建<br><span class="hljs-section">tags: [tag1, tag2] </span><br><span class="hljs-section">---</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
