<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ES6模块</title>
    <link href="/2022/01/27/JavaScriptES6/"/>
    <url>/2022/01/27/JavaScriptES6/</url>
    
    <content type="html"><![CDATA[<h2 id="export"><a href="#export" class="headerlink" title="export"></a>export</h2><h3 id="🌿导出"><a href="#🌿导出" class="headerlink" title="🌿导出"></a>🌿导出</h3><p><strong>可以用</strong><code>export</code><strong>对外暴露</strong><code>变量</code>,<code>方法</code>,<code>类</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> x = <span class="hljs-number">0</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> y = <span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a + b<br><br><span class="hljs-comment">// 或一次性</span><br><span class="hljs-keyword">export</span> &#123; x, y &#125; <br></code></pre></div></td></tr></table></figure><h2 id="export-default"><a href="#export-default" class="headerlink" title="export default"></a>export default</h2><h2 id="import"><a href="#import" class="headerlink" title="import"></a>import</h2>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>ES6</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>ES6</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>less学习</title>
    <link href="/2022/01/26/less%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/01/26/less%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-comment">// 行注释,编译去除</span><br><span class="hljs-comment">/* 块注释,编译保留 */</span><br></code></pre></div></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p><strong>使用</strong><code>@</code><strong>命名变量</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-variable">@key:</span> value;<br></code></pre></div></td></tr></table></figure><p><strong>也可命名</strong><code>选择器</code></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-variable">@selsetor:</span> className&gt;p<br><br>.<span class="hljs-variable">@&#123;selector&#125;</span>&#123;   <br>    <span class="hljs-comment">// 即`.className&gt;p&#123;&#125;`</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p><strong>作用域同</strong><code>JavaScript</code></p><p><strong>同作用域变量申明先后与使用无关</strong></p><h2 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h2><p><strong>可以对数字,颜色,变量进行</strong> <code>+-*/</code><strong>运算</strong></p><p><strong>绝对单位运算时进行单位转换,结果单位为最左的第一个单位</strong></p><p><strong>结果为相对单位运算时只将数字进行运算,结果单位为最左的第一个单位</strong></p><p><strong>有颜色时运算结果为颜色</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-variable">@a:</span> <span class="hljs-number">#012</span>;<br><br><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-variable">@a</span> + <span class="hljs-number">2vw</span>;             <span class="hljs-comment">// #021324;</span><br>  <span class="hljs-attribute">color</span>: <span class="hljs-variable">@a</span> - <span class="hljs-number">2px</span>;             <span class="hljs-comment">// #000f20;</span><br>  <span class="hljs-attribute">color</span>: <span class="hljs-variable">@a</span> * <span class="hljs-number">2%</span>;              <span class="hljs-comment">// #000f20;</span><br>  <span class="hljs-attribute">color</span>: <span class="hljs-variable">@a</span> / <span class="hljs-number">2cm</span>;             <span class="hljs-comment">// #000f20;</span><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">2px</span> - <span class="hljs-variable">@a</span>;             <span class="hljs-comment">// #000f20;</span><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">2px</span> - <span class="hljs-number">1vw</span>;            <span class="hljs-comment">// 1px;</span><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">1vw</span> + <span class="hljs-number">12px</span> + <span class="hljs-number">1cm</span>;     <span class="hljs-comment">// 14vw;</span><br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">1px</span> + <span class="hljs-number">12vw</span> + <span class="hljs-number">1cm</span>;     <span class="hljs-comment">// 50.79527559px;</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="混合"><a href="#混合" class="headerlink" title="混合"></a>混合</h2><p><code>#key()</code><strong>或</strong><code>.key()</code><strong>可复用样式</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-selector-class">.banner</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>&#125;<br><br><span class="hljs-selector-id">#bar</span> &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">355px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.mixins</span>&#123;<br>    <span class="hljs-selector-class">.banner</span>();<br>    <span class="hljs-selector-id">#bar</span>();<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h2><p><code>&amp;</code><strong>表示父选择器(效果类似宏展开)</strong></p><p><strong>外层可读取内层样式</strong></p><p><strong>内层样式不会覆盖外层样式</strong></p><p><code>less</code><strong>:</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-selector-tag">&amp;</span>&gt;<span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">color</span>:<span class="hljs-number">#000</span>;<br>    <span class="hljs-selector-tag">a</span> &#123;<br>      <span class="hljs-attribute">color</span>: <span class="hljs-number">#123</span>;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><code>css</code><strong>:</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>&#125;<br><span class="hljs-selector-tag">div</span> &gt; <span class="hljs-selector-tag">p</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>&#125;<br><span class="hljs-selector-tag">div</span> &gt; <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#123</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h2><p><strong>用</strong><code>()</code><strong>创造一个map,编译后不保留</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-selector-id">#colors</span>() &#123;<br>    color1: #f2f3f5;<br>    color2: #231;<br>&#125;<br><br><span class="hljs-selector-tag">div</span> &#123;<br>    <span class="hljs-attribute">background</span>: #colors[color1];<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="命名空间与访问符"><a href="#命名空间与访问符" class="headerlink" title="命名空间与访问符"></a>命名空间与访问符</h2><p><strong>用</strong><code>()</code><strong>创造一个样式集,编译后不保留</strong></p><p><code>less</code><strong>:</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-selector-id">#bundle</span>() &#123;<br>  <span class="hljs-selector-class">.button</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>    <span class="hljs-selector-tag">&amp;</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>      <span class="hljs-attribute">color</span>: <span class="hljs-number">#111</span>;<br>    &#125;<br>  &#125;<br>  <span class="hljs-selector-class">.tab</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#222</span>;<br>  &#125;<br>  <span class="hljs-selector-class">.citation</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>;<br>  &#125;<br>&#125;<br><br><span class="hljs-selector-id">#header</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-selector-id">#bundle</span><span class="hljs-selector-class">.button</span>();  <span class="hljs-comment">// 还可以书写为 #bundle &gt; .button 形式</span><br>  <span class="hljs-selector-id">#bundle</span><span class="hljs-selector-class">.tab</span>();<br>&#125;<br></code></pre></div></td></tr></table></figure><p><code>css</code><strong>:</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-id">#header</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#222</span>;<br>&#125;<br><span class="hljs-selector-id">#header</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#111</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="media规则"><a href="#media规则" class="headerlink" title="@media规则"></a>@media规则</h2><p><strong>向上冒泡合并选择器(内含)与</strong><code>@media</code><strong>(</strong><code>and</code><strong>合并)</strong></p><p><strong>向下内含样式但忽略其他</strong><code>@media</code><strong>中的样式</strong></p><p><code>less</code><strong>:</strong></p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-selector-class">.component</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>  <span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">1280px</span>) &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#111</span>;<br>  <span class="hljs-selector-tag">&amp;</span>&gt;<span class="hljs-selector-tag">p</span>&#123;<br>    <span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">768px</span>) &#123;<br>      <span class="hljs-attribute">color</span>: <span class="hljs-number">#222</span>;<br>        <span class="hljs-selector-tag">div</span> &#123;<br>      <span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>;<br>        &#125;<br>        <span class="hljs-selector-tag">&amp;</span>&gt;<span class="hljs-selector-tag">a</span> &#123;<br>          <span class="hljs-keyword">@media</span>  (<span class="hljs-attribute">min-resolution</span>: <span class="hljs-number">192dpi</span>) &#123;<br>            <span class="hljs-attribute">color</span>: <span class="hljs-number">#555</span>;<br>          &#125;<br>        <span class="hljs-attribute">color</span>: <span class="hljs-number">#444</span>;<br>        &#125;<br>    &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><code>css</code><strong>:</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-class">.component</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;<br>&#125;<br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">1280px</span>) &#123;<br>  <span class="hljs-selector-class">.component</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#111</span>;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">1280px</span>) <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">768px</span>) &#123;<br>  <span class="hljs-selector-class">.component</span> &gt; <span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#222</span>;<br>  &#125;<br>  <span class="hljs-selector-class">.component</span> &gt; <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">div</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>;<br>  &#125;<br>  <span class="hljs-selector-class">.component</span> &gt; <span class="hljs-selector-tag">p</span> &gt; <span class="hljs-selector-tag">a</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#444</span>;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">1280px</span>) <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">768px</span>) <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-resolution</span>: <span class="hljs-number">192dpi</span>) &#123;<br>  <span class="hljs-selector-class">.component</span> &gt; <span class="hljs-selector-tag">p</span> &gt; <span class="hljs-selector-tag">a</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#555</span>;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h2><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;less-style&quot;</span>;     <span class="hljs-comment">// 引入less样式表可不加拓展名</span><br><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;css-style.css&quot;</span>;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>css预处理</category>
      
      <category>Less</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Less</tag>
      
      <tag>css预处理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Sass学习</title>
    <link href="/2022/01/26/sass%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/01/26/sass%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>css预处理</category>
      
      <category>Sass</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css预处理</tag>
      
      <tag>Sass</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Axios学习</title>
    <link href="/2022/01/25/Axios%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/01/25/Axios%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn add <br></code></pre></div></td></tr></table></figure><p><strong>使用时引入</strong><code>axios</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;axios&#x27;</span><br></code></pre></div></td></tr></table></figure><h2 id="axios-API配置"><a href="#axios-API配置" class="headerlink" title="axios( ) API配置"></a>axios( ) API配置</h2><h3 id="🍆axios配置"><a href="#🍆axios配置" class="headerlink" title="🍆axios配置"></a>🍆<code>axios</code>配置</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">axios(&#123;<br>    <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;/user&#x27;</span>,                        <span class="hljs-comment">// 请求地址(必选项)</span><br>    <span class="hljs-attr">baseURL</span>: <span class="hljs-string">&#x27;https://www.bar.com/foo&#x27;</span>,  <span class="hljs-comment">// 自动配置前缀</span><br>    <span class="hljs-attr">params</span>: &#123;                            <span class="hljs-comment">// url参数</span><br>        <span class="hljs-attr">id</span>: <span class="hljs-number">1234</span><br>    &#125;,<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;post&#x27;</span>,                      <span class="hljs-comment">// 请求方式(默认GET)</span><br>    <span class="hljs-attr">data</span>: &#123;                              <span class="hljs-comment">// 请求体</span><br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;foo&#x27;</span>,<br>        <span class="hljs-attr">id</span>: <span class="hljs-number">1231</span>,<br>    &#125;<br>&#125;)<br>    .then( <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>         <span class="hljs-comment">// 成功执行</span><br>     &#125;)<br>     .catch(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br>         <span class="hljs-comment">// 失败执行</span><br>     &#125;)<br>     .then(<span class="hljs-function">() =&gt;</span> &#123;<br>         <span class="hljs-comment">// 始终执行</span><br>     &#125;)<br></code></pre></div></td></tr></table></figure><h3 id="🍆axios请求别名"><a href="#🍆axios请求别名" class="headerlink" title="🍆axios请求别名"></a>🍆<code>axios</code>请求别名</h3><p><strong>使用别名后无需指定</strong><code>method</code>,<code>data</code><strong>等属性</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">axios.request(config)<br><br>axios.get(url, [config])<br>axios.delete(url, [config])<br>axios.head(url, [config])<br>axios.options(url, [config])<br><br>axios.post(url, [data, [config]])<br>axios.put(url, [data, [config]])<br>axios.patch(url, [data, [config]])<br></code></pre></div></td></tr></table></figure><h3 id="🍆自定义请求"><a href="#🍆自定义请求" class="headerlink" title="🍆自定义请求"></a>🍆自定义请求</h3><h2 id="请求结果"><a href="#请求结果" class="headerlink" title="请求结果"></a>请求结果</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&#123;<br>    <span class="hljs-attr">data</span>: &#123;&#125;,                <span class="hljs-comment">// 服务器返回内容</span><br>    <span class="hljs-attr">status</span>: <span class="hljs-number">200</span>,             <span class="hljs-comment">// http状态码</span><br>    <span class="hljs-attr">statusText</span>: <span class="hljs-string">&#x27;OK&#x27;</span>,        <span class="hljs-comment">// http状态信息</span><br>    <span class="hljs-attr">headers</span>: &#123;&#125;,             <span class="hljs-comment">// 服务器响应头</span><br>    <span class="hljs-attr">config</span>: &#123;&#125;,              <span class="hljs-comment">// axios配置信息</span><br>    <span class="hljs-attr">request</span>: &#123;&#125;              <span class="hljs-comment">// </span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h2><h3 id="🌿请求拦截器"><a href="#🌿请求拦截器" class="headerlink" title="🌿请求拦截器"></a>🌿请求拦截器</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">axios.interceptors.request.use(<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">config</span>) </span>&#123;<br>        <span class="hljs-comment">// 请求前处理</span><br>        <span class="hljs-keyword">return</span> config<br>    &#125;,<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;<br>        <span class="hljs-comment">// 请求错误处理</span><br>        <span class="hljs-keyword">return</span> error<br>    &#125;<br>)<br></code></pre></div></td></tr></table></figure><h3 id="🌿响应拦截器"><a href="#🌿响应拦截器" class="headerlink" title="🌿响应拦截器"></a>🌿响应拦截器</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">axios.interceptors.response.use(<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) </span>&#123;<br>        <span class="hljs-comment">// 状态码2xx时处理</span><br>        <span class="hljs-keyword">return</span> response<br>    &#125;,<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;<br>        <span class="hljs-comment">// 状态码超出2xx时处理</span><br>        <span class="hljs-keyword">return</span> error<br>    &#125;<br>)<br></code></pre></div></td></tr></table></figure><h3 id="🌿拦截器移除"><a href="#🌿拦截器移除" class="headerlink" title="🌿拦截器移除"></a>🌿拦截器移除</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> interceptor = axios.interceptors.response.use(...)<br><br>axios.interceptors.request.eject(interceptor)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Axios</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Axios</tag>
      
      <tag>网络请求</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>React基础</title>
    <link href="/2022/01/24/react%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/24/react%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>React</category>
      
    </categories>
    
    
    <tags>
      
      <tag>React</tag>
      
      <tag>框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>npm基础使用</title>
    <link href="/2022/01/23/npm%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/01/23/npm%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm init -y         <span class="hljs-comment"># 默认初始化选项</span><br>npm init<br></code></pre></div></td></tr></table></figure><h3 id="npm选项"><a href="#npm选项" class="headerlink" title="npm选项"></a>npm选项</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">package name:     <span class="hljs-comment"># 包名</span><br>version:          <span class="hljs-comment"># 版本号</span><br>description:      <span class="hljs-comment"># 包描述</span><br>entry point:      <span class="hljs-comment"># 入口文件</span><br><span class="hljs-built_in">test</span> <span class="hljs-built_in">command</span>:     <span class="hljs-comment"># 测试指令</span><br>git repository:   <span class="hljs-comment"># git仓库地址</span><br>keywords:         <span class="hljs-comment"># 关键字</span><br>author:           <span class="hljs-comment"># 作者</span><br>license:          <span class="hljs-comment"># 协议</span><br></code></pre></div></td></tr></table></figure><h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>npm</tag>
      
      <tag>前端工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TypeScript学习</title>
    <link href="/2022/01/23/TypeScript%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/01/23/TypeScript%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="配置TS环境"><a href="#配置TS环境" class="headerlink" title="配置TS环境"></a>配置TS环境</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm init -y<br></code></pre></div></td></tr></table></figure><h3 id="🥝配置"><a href="#🥝配置" class="headerlink" title="🥝配置"></a>🥝配置</h3><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">&#123;<br>    ...<br>    <span class="hljs-attr">&quot;main&quot;</span>: <span class="hljs-string">&quot;./src/index.ts&quot;</span><br>    ...<br>    <span class="hljs-string">&quot;scripts&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;test&quot;</span>: <span class="hljs-string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>,<br>        <span class="hljs-comment">// 启用配置文件, 需安装依赖`npm install cross-env -D`</span><br>        <span class="hljs-attr">&quot;start&quot;</span>: <span class="hljs-string">&quot;cross-env NODE_ENV=development webpack-dev-server --config ./build/webpack.config.js&quot;</span><br>    &#125;<br>    ...<br>    <span class="hljs-string">&quot;license&quot;</span>: <span class="hljs-string">&quot;MIT&quot;</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="🥝文件目录"><a href="#🥝文件目录" class="headerlink" title="🥝文件目录"></a>🥝文件目录</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">└─TS-demo<br>    ├─build                     <span class="hljs-comment"># 构建配置</span><br>    ├─src                       <span class="hljs-comment"># 项目代码</span><br>    │  ├─api                    <span class="hljs-comment"># 公共接口</span><br>    │  ├─assets                 <span class="hljs-comment"># 静态资源</span><br>    │  │  ├─font                <span class="hljs-comment"># 字体资源</span><br>    │  │  └─img                 <span class="hljs-comment"># 图像资源</span><br>    │  ├─config                 <span class="hljs-comment"># 配置文件</span><br>    │  ├─tools                  <span class="hljs-comment"># 工具函数</span><br>    │  └─utils                  <span class="hljs-comment"># 核心业务代码</span><br>    └─typings                   <span class="hljs-comment"># 模块声明文件</span><br>  <br></code></pre></div></td></tr></table></figure><h3 id="🥝依赖安装"><a href="#🥝依赖安装" class="headerlink" title="🥝依赖安装"></a>🥝依赖安装</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install typescript tslint -g<br></code></pre></div></td></tr></table></figure><h3 id="🥝初始化TS配置"><a href="#🥝初始化TS配置" class="headerlink" title="🥝初始化TS配置"></a>🥝初始化TS配置</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">tsc --init<br></code></pre></div></td></tr></table></figure><h3 id="🥝初始化tslint"><a href="#🥝初始化tslint" class="headerlink" title="🥝初始化tslint"></a>🥝初始化tslint</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">tsl<br></code></pre></div></td></tr></table></figure><h3 id="🥝安装webpack开发依赖"><a href="#🥝安装webpack开发依赖" class="headerlink" title="🥝安装webpack开发依赖"></a>🥝安装webpack开发依赖</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install webpack webpack-cli webpack-dev-server -D<br></code></pre></div></td></tr></table></figure><h3 id="🥝添加webpack配置"><a href="#🥝添加webpack配置" class="headerlink" title="🥝添加webpack配置"></a>🥝添加webpack配置</h3><p><strong>在</strong><code>build</code><strong>目录下添加配置文件</strong><code>webpack.config.js</code></p><p><strong>安装TS打包加载器</strong><code>npm install ts-loader -D</code></p><p><strong>安装插件</strong><code>npm install clean-webpack-plugin html-webpack-plugin -D</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">/* 导入插件 */</span><br><span class="hljs-keyword">const</span> HtmlWebpackPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;html-webpack-plugin&#x27;</span>)<br><span class="hljs-keyword">const</span> &#123;CleanWebpackPlugin&#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;clean-webpack-plugin&#x27;</span>)<br><br><span class="hljs-built_in">module</span>.exports = &#123;<br>    <span class="hljs-comment">/* 打包出入口配置 */</span><br>    <span class="hljs-attr">entry</span>: <span class="hljs-string">&quot;./src/index.ts&quot;</span>,                             <span class="hljs-comment">// 项目入口文件</span><br>    <span class="hljs-attr">output</span>: &#123;<br>        <span class="hljs-attr">filename</span>: <span class="hljs-string">&quot;main.js&quot;</span>                              <span class="hljs-comment">// 出口文件</span><br>    &#125;,<br>    <br>    <span class="hljs-comment">/* 打包文件配置 */</span><br>    <span class="hljs-attr">resolve</span>: &#123;<br>        <span class="hljs-attr">extensions</span>: [<span class="hljs-string">&#x27;.ts&#x27;</span>, <span class="hljs-string">&#x27;.tsx&#x27;</span>, <span class="hljs-string">&#x27;.js&#x27;</span>]               <span class="hljs-comment">// 自动匹配后缀</span><br>    &#125;,<br>    <span class="hljs-attr">module</span>: &#123;<br>        <span class="hljs-attr">rule</span>: [&#123;                                         <span class="hljs-comment">// .ts与.tsx打包</span><br>            <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.tsx?$/</span>,<br>            use: <span class="hljs-string">&#x27;ts-loader&#x27;</span>,<br>            <span class="hljs-attr">exclude</span>: <span class="hljs-regexp">/node_modules/</span>                      <span class="hljs-comment">// 不打包node_modules下的配置文件</span><br>        &#125;]<br>    &#125;,<br>    <br>    <span class="hljs-comment">/* 开发调试工具,只在开发环境加载 */</span><br>    <span class="hljs-attr">devtool</span>: process.env.NODE_ENV === <span class="hljs-string">&#x27;production&#x27;</span> ? <span class="hljs-literal">false</span> : <span class="hljs-string">&#x27;inline-source-map&#x27;</span>,<br><br>    <span class="hljs-comment">/* 本地服务器配置 */</span><br>    <span class="hljs-attr">devServer</span>: &#123;<br>        <span class="hljs-attr">compress</span>: <span class="hljs-literal">false</span>,                                 <span class="hljs-comment">// 是否压缩代码</span><br>        <span class="hljs-attr">host</span>: <span class="hljs-string">`localhost`</span>, <br>        <span class="hljs-attr">port</span>: <span class="hljs-number">8080</span>                                       <span class="hljs-comment">// 端口</span><br>    &#125;,<br>    <br>    <span class="hljs-comment">/* 插件 */</span><br>    <span class="hljs-attr">plugins</span>: [<br>        <span class="hljs-keyword">new</span> CleanWebpackPlugin(&#123;<br>            <span class="hljs-attr">cleanOnceBeforeBuildPatterns</span>: [<span class="hljs-string">&#x27;./dist&#x27;</span>]<br>        &#125;),<br>        <span class="hljs-keyword">new</span> HtmlWebpackPlugin(&#123;<br>            <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;./src/template/index.html&#x27;</span><br>        &#125;)<br>    ]<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="🥝项目安装TS依赖"><a href="#🥝项目安装TS依赖" class="headerlink" title="🥝项目安装TS依赖"></a>🥝项目安装TS依赖</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">npm install typescript<br></code></pre></div></td></tr></table></figure><h2 id="变量申明"><a href="#变量申明" class="headerlink" title="变量申明"></a>变量申明</h2><h3 id="🍉定义基础类型"><a href="#🍉定义基础类型" class="headerlink" title="🍉定义基础类型"></a>🍉定义基础类型</h3><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> name: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;Jonathan&#x27;</span><br><span class="hljs-keyword">let</span> age: <span class="hljs-built_in">number</span> = <span class="hljs-number">20</span><br><span class="hljs-keyword">let</span> isMale: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">true</span><br></code></pre></div></td></tr></table></figure><h3 id="🍉定义数组"><a href="#🍉定义数组" class="headerlink" title="🍉定义数组"></a>🍉定义数组</h3><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> list: <span class="hljs-built_in">number</span>[] = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>]<br><br><span class="hljs-keyword">let</span> list: <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span>&gt; = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>]<br></code></pre></div></td></tr></table></figure><h3 id="🍉定义元组"><a href="#🍉定义元组" class="headerlink" title="🍉定义元组"></a>🍉定义元组</h3><p><strong>元组为元素数量,各索引数据类型已知的数据类型</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> tuples: [<span class="hljs-built_in">string</span>, <span class="hljs-built_in">number</span>, <span class="hljs-built_in">boolean</span>] = [<span class="hljs-string">&#x27;Jonathan&#x27;</span>, <span class="hljs-number">20</span>, <span class="hljs-literal">true</span>]<br></code></pre></div></td></tr></table></figure><h3 id="🍉定义枚举"><a href="#🍉定义枚举" class="headerlink" title="🍉定义枚举"></a>🍉定义枚举</h3><p><strong>枚举可以通过数值得到反向映射结果</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-built_in">enum</span> StudentList &#123;<br>    <span class="hljs-string">&#x27;ZhangSan&#x27;</span>,<br>    <span class="hljs-string">&#x27;LiSi&#x27;</span> = <span class="hljs-number">4</span>,<br>    <span class="hljs-string">&#x27;LiuWu&#x27;</span>,<br>    <span class="hljs-string">&#x27;LingYun&#x27;</span> = <span class="hljs-number">7</span><br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-built_in">console</span>.log(StudentList[<span class="hljs-string">&#x27;Zhangsan&#x27;</span>])  <span class="hljs-comment">// 0</span><br><span class="hljs-built_in">console</span>.log(StudentList[<span class="hljs-string">&#x27;LiuWu&#x27;</span>])     <span class="hljs-comment">// 5</span><br><span class="hljs-built_in">console</span>.log(StudentList[<span class="hljs-number">7</span>])           <span class="hljs-comment">// LingYun</span><br></code></pre></div></td></tr></table></figure><p><strong>字符串枚举不支持反向映射</strong></p><figure class="highlight ts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ts"><span class="hljs-built_in">enum</span> Message &#123;<br>    False = <span class="hljs-string">&quot;No&quot;</span>,<br>    True = <span class="hljs-string">&quot;Yes&quot;</span>,<br>    Yes = True<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="🍉定义未知类型"><a href="#🍉定义未知类型" class="headerlink" title="🍉定义未知类型"></a>🍉定义未知类型</h3>]]></content>
    
    
    <categories>
      
      <category>TypeScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TypeScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🍍Pinia</title>
    <link href="/2022/01/23/pinia/"/>
    <url>/2022/01/23/pinia/</url>
    
    <content type="html"><![CDATA[<h2 id="store基础使用"><a href="#store基础使用" class="headerlink" title="store基础使用"></a>store基础使用</h2><h3 id="🌿申明store"><a href="#🌿申明store" class="headerlink" title="🌿申明store"></a>🌿申明store</h3><p><code>store.js</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;pinia&quot;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(&#123;   <span class="hljs-comment">// 定义调用函数</span><br>    id = <span class="hljs-string">&#x27;globalStore&#x27;</span>,                 <span class="hljs-comment">// id必选且唯一</span><br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> &#123;                      <span class="hljs-comment">// 返回一个对象</span><br>        <span class="hljs-keyword">return</span> &#123;<br>            <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Hellow Pinia🍍&#x27;</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">/* </span><br><span class="hljs-comment">    *  或用箭头函数直接返回对象</span><br><span class="hljs-comment">    *  state: () =&gt; (&#123; title: &#x27;Hellow Pinia🍍&#x27; &#125;)</span><br><span class="hljs-comment">    */</span><br>&#125;)<br><br><span class="hljs-comment">// 亦可简写id</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(<span class="hljs-string">&#x27;globalStore&#x27;</span>, &#123;<br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> (&#123; <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Hellow Pinia🍍&#x27;</span> &#125;)<br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="🌿响应式store"><a href="#🌿响应式store" class="headerlink" title="🌿响应式store"></a>🌿响应式store</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(<span class="hljs-string">&#x27;foo&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> cnt = ref(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">const</span> doubleValue = <span class="hljs-function">() =&gt;</span> <span class="hljs-number">2</span> * cnt.value<br>    <span class="hljs-keyword">return</span> &#123; cnt, d &#125;<br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="🌿使用store"><a href="#🌿使用store" class="headerlink" title="🌿使用store"></a>🌿使用store</h3><p><code>index.vue</code><strong>:</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><br>        &#123;&#123; store.title &#125;&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">import</span> &#123; useStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;url&#x27;</span>      <span class="hljs-comment">// 导入自定义store</span></span><br><span class="javascript">    </span><br><span class="javascript">    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">        setup () &#123;</span><br><span class="javascript">            <span class="hljs-keyword">const</span> store = useStore()    <span class="hljs-comment">// 调用函数得到返回对象</span></span><br><span class="javascript">            <span class="hljs-keyword">return</span> &#123; store &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="Getter"><a href="#Getter" class="headerlink" title="Getter"></a>Getter</h2><h3 id="🍉调用自身store"><a href="#🍉调用自身store" class="headerlink" title="🍉调用自身store"></a>🍉调用自身<code>store</code></h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(&#123;<br>    id = <span class="hljs-string">&#x27;foo&#x27;</span>,<br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> (&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">3</span> &#125;),<br>    <span class="hljs-attr">getters</span>: &#123;                        <span class="hljs-comment">// 第一个参数为state</span><br>        <span class="hljs-attr">doubleValue</span>: <span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> <span class="hljs-number">2</span> * state.value,<br>        <span class="hljs-function"><span class="hljs-title">trebleValue</span>(<span class="hljs-params"></span>)</span> &#123;               <span class="hljs-comment">// 可以使用this</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-number">3</span> * <span class="hljs-built_in">this</span>.value<br>        &#125;,<br>        <span class="hljs-attr">fivefoldValue</span>: &#123;              <span class="hljs-comment">// 可以调用其他Getter</span><br>            <span class="hljs-keyword">return</span> doubleValue(state) + trebleValue(state)<br>        &#125;<br>    &#125;<br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="🍉调用其他store"><a href="#🍉调用其他store" class="headerlink" title="🍉调用其他store"></a>🍉调用其他<code>store</code></h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><span class="hljs-keyword">import</span> &#123; store2 &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;url&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(&#123;<br>    id = <span class="hljs-string">&#x27;bar&#x27;</span>,<br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> (&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">1</span> &#125;),<br>    <span class="hljs-attr">getters</span>: &#123;<br>        <span class="hljs-function"><span class="hljs-title">add</span>(<span class="hljs-params"></span>)</span> &#123;<br>            <span class="hljs-keyword">const</span> state2 = store2()    <span class="hljs-comment">// 与setup中调用一样</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.value + state2.value<br>        &#125;<br>    &#125;<br>&#125;)<br></code></pre></div></td></tr></table></figure><h2 id="action"><a href="#action" class="headerlink" title="action"></a>action</h2><p><strong>与</strong><code>Getter</code><strong>相似</strong></p><h3 id="🥒调用自身store"><a href="#🥒调用自身store" class="headerlink" title="🥒调用自身store"></a>🥒调用自身<code>store</code></h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(&#123;<br>    id = <span class="hljs-string">&#x27;foo&#x27;</span>,<br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> (&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">3</span> &#125;),<br>    <span class="hljs-attr">actions</span>: &#123;                        <span class="hljs-comment">// 第一个参数为state</span><br>        <span class="hljs-attr">doubleValue</span>: <span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> <span class="hljs-number">2</span> * state.value,<br>        <span class="hljs-function"><span class="hljs-title">trebleValue</span>(<span class="hljs-params"></span>)</span> &#123;               <span class="hljs-comment">// 可以使用this</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-number">3</span> * <span class="hljs-built_in">this</span>.value<br>        &#125;,<br>        <span class="hljs-attr">fivefoldValue</span>: &#123;              <span class="hljs-comment">// 可以调用其他Getter</span><br>            <span class="hljs-keyword">return</span> doubleValue(state) + trebleValue(state)<br>        &#125;<br>    &#125;<br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="🥒调用其他store"><a href="#🥒调用其他store" class="headerlink" title="🥒调用其他store"></a>🥒调用其他<code>store</code></h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><span class="hljs-keyword">import</span> &#123; store2 &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;url&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useStore = defineStore(&#123;<br>    id = <span class="hljs-string">&#x27;bar&#x27;</span>,<br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> (&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">1</span> &#125;),<br>    <span class="hljs-attr">actions</span>: &#123;<br>        <span class="hljs-function"><span class="hljs-title">add</span>(<span class="hljs-params"></span>)</span> &#123;<br>            <span class="hljs-keyword">const</span> state2 = store2()       <span class="hljs-comment">// 与setup中调用一样</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.value + state2.value<br>        &#125;<br>    &#125;<br>&#125;)<br></code></pre></div></td></tr></table></figure><h2 id="reset"><a href="#reset" class="headerlink" title="$reset"></a>$reset</h2><p><strong>使用</strong><code>stre.$reset()</code><strong>可以重置状态</strong></p>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
      <tag>Pinia</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue路由</title>
    <link href="/2022/01/23/vue%E8%B7%AF%E7%94%B1/"/>
    <url>/2022/01/23/vue%E8%B7%AF%E7%94%B1/</url>
    
    <content type="html"><![CDATA[<h2 id="路由模板"><a href="#路由模板" class="headerlink" title="路由模板"></a>路由模板</h2><h3 id="🌰提供路由渲染"><a href="#🌰提供路由渲染" class="headerlink" title="🌰提供路由渲染"></a>🌰提供路由渲染</h3><p><code>router-link</code><strong>标签提供路由地址选项,在</strong><code>to</code><strong>属性中指定路由地址</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 多组路由选项 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/&quot;</span> &gt;</span>地址一<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/posts&quot;</span>&gt;</span>地址二<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><code>router-view</code><strong>标签渲染出选中路由</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🌰定义路由组件"><a href="#🌰定义路由组件" class="headerlink" title="🌰定义路由组件"></a>🌰定义路由组件</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> [HOME, POSTS] = [<br>    &#123; <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;&lt;div&gt;主页&lt;/div&gt;&#x27;</span> &#125;,<br>    &#123; <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;&lt;div&gt;文章&lt;/div&gt;&#x27;</span> &#125;<br>]<br></code></pre></div></td></tr></table></figure><h3 id="🌰定义路由"><a href="#🌰定义路由" class="headerlink" title="🌰定义路由"></a>🌰定义路由</h3><p><code>path</code><strong>与</strong><code>component</code><strong>为必选项</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-attr">component</span>: HOME &#125;,<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/posts&#x27;</span>, <span class="hljs-attr">component</span>: POSTS &#125;<br>]<br></code></pre></div></td></tr></table></figure><h3 id="🌰创建实例并配置routes"><a href="#🌰创建实例并配置routes" class="headerlink" title="🌰创建实例并配置routes"></a>🌰创建实例并配置<code>routes</code></h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> router = <span class="hljs-keyword">new</span> VueRouter.createRouter(&#123;<br>    <span class="hljs-attr">history</span>: VueRouter.createWebHashHistory(),<br>    routes,            <span class="hljs-comment">// ES6 routes == routes:</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="🌰创建并挂载路由"><a href="#🌰创建并挂载路由" class="headerlink" title="🌰创建并挂载路由"></a>🌰创建并挂载路由</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = Vue.createApp(&#123;&#125;)<br>app.use(router).mount(<span class="hljs-string">&#x27;#app&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h2 id="获取路由"><a href="#获取路由" class="headerlink" title="获取路由"></a>获取路由</h2><p><strong>使用</strong><code>this.$route</code><strong>或在</strong><code>setup</code><strong>内用</strong><code>createRouter</code><strong>创建可获得路由信息对象</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">this</span>.$route.path      <span class="hljs-comment">//</span><br><span class="hljs-built_in">this</span>.$route.<br><span class="hljs-built_in">this</span>.$params          <span class="hljs-comment">// 动态路由参数的对象</span><br></code></pre></div></td></tr></table></figure><h2 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h2><p><strong>用</strong><code>/:rute</code><strong>来表示</strong><code>路径参数</code></p><p><strong>不同参数都会映射至父级路径</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/:id&#x27;</span>, <span class="hljs-attr">component</span>: USER &#125;<br>]<br></code></pre></div></td></tr></table></figure><h2 id="路由匹配"><a href="#路由匹配" class="headerlink" title="路由匹配"></a>路由匹配</h2><h3 id="🌿同父级路径的动态路由"><a href="#🌿同父级路径的动态路由" class="headerlink" title="🌿同父级路径的动态路由"></a>🌿同父级路径的动态路由</h3><p><strong>在路径后加</strong><code>/:rute(reg)</code><strong>来匹配不同路由</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/:id(\\d+)&#x27;</span>, <span class="hljs-attr">component</span>: USER &#125;,    <span class="hljs-comment">// 数字才匹配</span><br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/:piicture&#x27;</span>, <span class="hljs-attr">component</span>: PICTURE &#125;  <span class="hljs-comment">// 其他情况匹配</span><br>]<br></code></pre></div></td></tr></table></figure><h3 id="🌿多级动态路由"><a href="#🌿多级动态路由" class="headerlink" title="🌿多级动态路由"></a>🌿多级动态路由</h3><p><strong>在路径末加</strong><code>*</code><strong>(零个以上)</strong>,<code>+</code><strong>(一个以上)来匹配重复项</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/:option(//d+)*&#x27;</span> component: OPTIONS &#125;<br>]<br></code></pre></div></td></tr></table></figure><h3 id="🌿可选动态路由"><a href="#🌿可选动态路由" class="headerlink" title="🌿可选动态路由"></a>🌿可选动态路由</h3><p><strong>在路径末加</strong><code>?</code><strong>表示路径至多有一个</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    <span class="hljs-comment">// 有无name均会渲染USER</span><br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/:id(//d+)/:name?&#x27;</span>, <span class="hljs-attr">component</span>: USER &#125;<br>]<br></code></pre></div></td></tr></table></figure><h2 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h2><p><strong>在路由</strong><code>children</code><strong>属性内可添加子路由,在父组件的</strong><code>router-view</code><strong>标签内渲染子组件</strong></p><p><strong>子路由设置</strong><code>path</code><strong>为</strong><code>&#39;&#39;</code><strong>为默认时渲染</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123; <br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/:id(\\d+)&#x27;</span>,<br>        <span class="hljs-attr">component</span>: USER,<br>        <span class="hljs-attr">children</span>: [<br>            &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-attr">component</span>: DEFAULT &#125;,<br>            &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-attr">component</span>: MESSAGE &#125;,<br>            &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;pictures&#x27;</span>, <span class="hljs-attr">component</span>: PICTURES &#125;<br>        ]<br>    &#125;<br>]<br></code></pre></div></td></tr></table></figure><h2 id="编程式导航"><a href="#编程式导航" class="headerlink" title="编程式导航"></a>编程式导航</h2><h3 id="🥑导航至不同位置"><a href="#🥑导航至不同位置" class="headerlink" title="🥑导航至不同位置"></a>🥑导航至不同位置</h3><p><strong>触发</strong><code>router-link</code><strong>即调用</strong><code>router.push()</code><strong>方法</strong></p><p><strong>有</strong><code>path</code><strong>属性时,</strong><code>params</code><strong>属性将失效</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">router.push(<span class="hljs-string">&#x27;/users/eduardo&#x27;</span>)                                   <span class="hljs-comment">// 字符串路径</span><br><br>router.push(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/users/eduardo&#x27;</span> &#125;)                         <span class="hljs-comment">// 带有路径的对象</span><br><br>router.push(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;user&#x27;</span>, <span class="hljs-attr">params</span>: &#123; <span class="hljs-attr">username</span>: <span class="hljs-string">&#x27;eduardo&#x27;</span> &#125; &#125;)  <span class="hljs-comment">// 命名的路由，并加上参数，让路由建立 url</span><br><br>router.push(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/register&#x27;</span>, <span class="hljs-attr">query</span>: &#123; <span class="hljs-attr">plan</span>: <span class="hljs-string">&#x27;private&#x27;</span> &#125; &#125;)  <span class="hljs-comment">// 带查询参数，结果是 /register?plan=private</span><br><br>router.push(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/about&#x27;</span>, <span class="hljs-attr">hash</span>: <span class="hljs-string">&#x27;#team&#x27;</span> &#125;)                  <span class="hljs-comment">// // 带 hash，结果是 /about#team</span><br></code></pre></div></td></tr></table></figure><h3 id="🥑替换当前位置"><a href="#🥑替换当前位置" class="headerlink" title="🥑替换当前位置"></a>🥑替换当前位置</h3><p><strong>使用</strong><code>replace</code><strong>不会向</strong><code>history</code><strong>增加记录而是替换当前记录</strong></p><p><strong>声明式:</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/user&quot;</span> <span class="hljs-attr">replace</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>编程式:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">router.replace(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user&#x27;</span> &#125;)<br>router.push(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user&#x27;</span>, <span class="hljs-attr">replace</span>: <span class="hljs-literal">true</span> &#125;)      <span class="hljs-comment">// 等效于</span><br></code></pre></div></td></tr></table></figure><h2 id="命名路由"><a href="#命名路由" class="headerlink" title="命名路由"></a>命名路由</h2><p><strong>使命名的路由可简便的调用</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/:id/:name&#x27;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;user&#x27;</span>,             <span class="hljs-comment">// 命名为`user`</span><br>        <span class="hljs-attr">component</span>: USER<br>    &#125;<br>]<br></code></pre></div></td></tr></table></figure><p><strong>编程式:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">router.push(&#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;user&#x27;</span>,<br>    <span class="hljs-attr">params</span>: &#123;                     <span class="hljs-comment">// 路由参数</span><br>        <span class="hljs-attr">id</span>: <span class="hljs-number">001</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Jonathan&#x27;</span><br>    &#125;<br>&#125;)<br></code></pre></div></td></tr></table></figure><p><strong>声明式:</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;&#123; name: &#x27;user&#x27;, params: &#123; id: 001, name: &#x27;Jonathan&#x27; &#125; &#125;&quot;</span>&gt;</span><br>    个人信息<br><span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="命名视图"><a href="#命名视图" class="headerlink" title="命名视图"></a>命名视图</h2><p><strong>可以在同一组件内渲染多个</strong><code>router-view</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- name默认值为default --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Docs&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Header&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>为多个组件指定渲染视图</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>        <span class="hljs-attr">components</span>: &#123;        <span class="hljs-comment">// 需加`s`</span><br>            <span class="hljs-attr">default</span>: Menu,<br>            <span class="hljs-attr">Docs</span>: Docs,      <span class="hljs-comment">// ES6简写`Docs,`</span><br>            <span class="hljs-attr">Header</span>: Header<br>        &#125;<br>    &#125;<br>]<br></code></pre></div></td></tr></table></figure><h2 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h2><p><strong>将</strong><code>路由1</code><strong>跳转至</strong><code>路由2</code></p><p><strong>可将没有锚点的路由</strong><code>/</code><strong>重定向至主页面路由</strong><code>/home</code></p><p><strong>重定向可以是</strong><code>路径</code>,<code>方法</code>,<code>命名路由</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-attr">redirect</span>: <span class="hljs-string">&#x27;/home&#x27;</span> &#125;,     <span class="hljs-comment">// 可不绑定组件</span><br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/home&#x27;</span>, <span class="hljs-attr">component</span>: Home &#125;<br>]<br></code></pre></div></td></tr></table></figure><h2 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h2><h2 id="路由组件传参"><a href="#路由组件传参" class="headerlink" title="路由组件传参"></a>路由组件传参</h2><h3 id="🍆布尔模式"><a href="#🍆布尔模式" class="headerlink" title="🍆布尔模式"></a>🍆布尔模式</h3><p><strong>设置</strong><code>props</code><strong>为</strong><code>true</code><strong>即可将</strong><code>router.params</code><strong>属性赋给组件的</strong><code>props</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> USER = &#123;<br>    <span class="hljs-attr">props</span>: [<span class="hljs-string">&#x27;id&#x27;</span>]<br>    <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;&lt;div&gt;&#123;&#123; id &#125;&lt;/div&gt;&#x27;</span><br>&#125;<br><br><span class="hljs-keyword">const</span> routes = [<br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/:id&#x27;</span>, <span class="hljs-attr">component</span>: USER, <span class="hljs-attr">props</span>:<span class="hljs-literal">true</span> &#125;<br>]<br></code></pre></div></td></tr></table></figure><h3 id="🍆命名视图"><a href="#🍆命名视图" class="headerlink" title="🍆命名视图"></a>🍆命名视图</h3><p><strong>可为不同的视图设置</strong><code>props</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/:id&#x27;</span>,<br>    <span class="hljs-attr">components</span>: &#123;<br>        <span class="hljs-attr">default</span>: User,<br>        Docs,<br>        Posts<br>    &#125;,<br>    <span class="hljs-attr">props</span>: &#123;<br>        <span class="hljs-attr">default</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">Docs</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">Posts</span>: <span class="hljs-literal">false</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="🍆对象模式"><a href="#🍆对象模式" class="headerlink" title="🍆对象模式"></a>🍆对象模式</h3><h2 id="导航守卫"><a href="#导航守卫" class="headerlink" title="导航守卫"></a>导航守卫</h2><h3 id="🥬全局前置守卫"><a href="#🥬全局前置守卫" class="headerlink" title="🥬全局前置守卫"></a>🥬全局前置守卫</h3><p><strong>全局前置守卫会按创建顺序执行,在所有守卫</strong><code>resolve</code><strong>完前状态均为</strong><code>pending</code></p><p><code>beforeEach((to, from[, next]) =&gt; &#123;&#125;)</code></p><p><strong>返回</strong><code>true</code><strong>或不返回表示导航有效</strong></p><p><strong>返回</strong><code>false</code><strong>取消导航,回至</strong><code>from</code></p><p><strong>返回</strong><code>路由对象</code><strong>导航至该</strong><code>路由对象</code></p><p><code>to</code><strong>:正在进入的路由对象</strong></p><p><code>from</code><strong>:正在离开的路由对象</strong></p><ul><li><code>next()</code></li></ul><p><strong>执行下一个</strong></p><ul><li><code>next(false)</code></li></ul><p><strong>停止导航,回到</strong><code>from</code></p><ul><li><code>next(路由对象)</code></li></ul><p><strong>改变</strong><code>to</code><strong>路由对象</strong></p><ul><li><code>next(Error)</code></li></ul><p><strong>导航终止,</strong><code>Error</code><strong>传给回调</strong><code>router.onError</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> router = <span class="hljs-keyword">new</span> VueRouter(&#123;...&#125;)<br>router.beforeEach(<span class="hljs-function">(<span class="hljs-params"><span class="hljs-string">&#x27;/user&#x27;</span>, <span class="hljs-string">&#x27;/home&#x27;</span>, next</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 处理代码</span><br>    next(...)<br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="🥬全局后置钩子"><a href="#🥬全局后置钩子" class="headerlink" title="🥬全局后置钩子"></a>🥬全局后置钩子</h3><p><strong>后置钩子不会改变导航,不接受</strong><code>next</code><strong>,其用于改变页面标题等功能</strong></p><p><code>afterEach((to, from[, failure]) =&gt; &#123;&#125;)</code></p><h3 id="🥬路由独享守卫"><a href="#🥬路由独享守卫" class="headerlink" title="🥬路由独享守卫"></a>🥬路由独享守卫</h3><p><strong>可以直接在</strong><code>routes</code><strong>中配置守卫,守卫只有从不同路由进入才触发,动态参数改变不触发</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/:id&#x27;</span>,<br>        <span class="hljs-attr">component</span>: User,<br>        <span class="hljs-attr">beforEach</span>: <span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span>, next</span>) =&gt;</span> &#123;<br>            <span class="hljs-comment">// ...</span><br>        &#125;<br>    &#125;<br>]<br></code></pre></div></td></tr></table></figure><h2 id="路由元信息"><a href="#路由元信息" class="headerlink" title="路由元信息"></a>路由元信息</h2><p><strong>可以附加所需信息至</strong><code>meta</code><strong>属性,路由地址与导航守卫均可访问</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> routes = [<br>    &#123;<br>        <span class="hljs-comment">// 其他配置</span><br>        <span class="hljs-attr">meta</span>: &#123;<br>            <span class="hljs-attr">isAuthentication</span>: <span class="hljs-literal">true</span><br>        &#125;<br>    &#125;<br>]<br></code></pre></div></td></tr></table></figure><h3 id="访问meta"><a href="#访问meta" class="headerlink" title="访问meta"></a>访问<code>meta</code></h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">$route.meta             <span class="hljs-comment">// 访问父字段至子字段的meta</span><br>$route.matched[].meta   <span class="hljs-comment">// 访问路由数组中z的meta</span><br></code></pre></div></td></tr></table></figure><h2 id="数据获取"><a href="#数据获取" class="headerlink" title="数据获取"></a>数据获取</h2>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>router</tag>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue动画与过渡</title>
    <link href="/2022/01/23/vue%E5%8A%A8%E7%94%BB%E4%B8%8E%E8%BF%87%E6%B8%A1/"/>
    <url>/2022/01/23/vue%E5%8A%A8%E7%94%BB%E4%B8%8E%E8%BF%87%E6%B8%A1/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue组件</title>
    <link href="/2022/01/22/vue%E7%BB%84%E4%BB%B6/"/>
    <url>/2022/01/22/vue%E7%BB%84%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p><strong>组件名推荐使用烤串式命名</strong></p><p><code>my-component</code><strong>DOM与模板均适用</strong></p><p><code>myComponent</code><strong>仅在模板中适用</strong></p><h2 id="组件注册"><a href="#组件注册" class="headerlink" title="组件注册"></a>组件注册</h2><h3 id="🥕组件注册"><a href="#🥕组件注册" class="headerlink" title="🥕组件注册"></a>🥕组件注册</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = Vue.creatApp(&#123;  &#125;<span class="hljs-comment">/* 组件对象]*/</span>)<br>app.component(<span class="hljs-string">&#x27;component-name&#x27;</span>, )<br></code></pre></div></td></tr></table></figure><h3 id="🥕全局注册"><a href="#🥕全局注册" class="headerlink" title="🥕全局注册"></a>🥕全局注册</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">Vue.createApp(&#123;...&#125;).component(<span class="hljs-string">&#x27;component-name&#x27;</span>,&#123;<br>    <span class="hljs-comment">// ...</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="🥕局部注册"><a href="#🥕局部注册" class="headerlink" title="🥕局部注册"></a>🥕局部注册</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> componentName = &#123;<br>    /...<br>&#125;<br><span class="hljs-keyword">const</span> app = Vue.createApp(<span class="hljs-string">&#x27;&#x27;</span>, &#123;&#125;)<br></code></pre></div></td></tr></table></figure><h2 id="props"><a href="#props" class="headerlink" title="props"></a>props</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">props: &#123;<br>    <span class="hljs-attr">key</span>: &#123;<br>        <span class="hljs-attr">type</span>: [<br>            <span class="hljs-built_in">String</span> | <span class="hljs-built_in">Number</span> | <span class="hljs-built_in">Boolean</span> | <span class="hljs-built_in">Array</span> | <span class="hljs-built_in">Object</span> | <span class="hljs-built_in">Date</span> | <span class="hljs-built_in">Function</span> | <span class="hljs-built_in">Symbol</span><br>        ],               <span class="hljs-comment">// 可多选</span><br>        <span class="hljs-attr">default</span>: <span class="hljs-literal">null</span>    <span class="hljs-comment">// 默认值</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h2><p><strong>组件模板中添加</strong><code>slot</code><strong>标签可以将组件识别为双标签</strong></p><p><strong>插槽不可访问父组件作用域</strong></p><p> <strong>DOM:</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">my-component</span>&gt;</span><br>    插入位置<br><span class="hljs-tag">&lt;/<span class="hljs-name">my-component</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>模板:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;div&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">slot</span>&gt;</span>/* 默认内容 */<span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br>&lt;/div&gt;<br></code></pre></div></td></tr></table></figure><h3 id="🥬具名插槽"><a href="#🥬具名插槽" class="headerlink" title="🥬具名插槽"></a>🥬具名插槽</h3><p><strong>用</strong><code>slot</code><strong>的</strong><code>name</code><strong>属性绑定插槽</strong></p><p><strong>无</strong><code>name</code><strong>属性的会默认有</strong><code>name=&quot;default&quot;</code></p><p><strong>在DOM中用</strong><code>&lt;template v-slot:slot-name&gt;&lt;/template&gt;</code></p><p><code>v-slot:name</code><strong>缩写</strong><code>#name</code></p><p><strong>模板:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;div&gt;<br>    &lt;header&gt;<br>        <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">slot</span>&gt;</span>/* 默认内容 */<span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br>    &lt;header&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span>/* 默认内容 */<span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></span><br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>/* 默认内容 */<span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span></span><br>&lt;/div&gt;<br></code></pre></div></td></tr></table></figure><p><strong>DOM:</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">my-page</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:default</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><br>            header<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:main</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><br>            main<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:footer</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><br>            footer<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">my-page</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥬插槽传参"><a href="#🥬插槽传参" class="headerlink" title="🥬插槽传参"></a>🥬插槽传参</h3><p><strong>用</strong><code>#name=&#123; x, y, ... &#125;</code><strong>向插槽传参</strong></p><p><strong>可用</strong><code>#name=&#123; x = 0, y = 1, ... &#125;</code><strong>提供默认值</strong></p><p><strong>使用缩写不提供</strong><code>name</code><strong>(如:</strong><code>#=&#123; x, y, ... &#125;</code><strong>)传参无效</strong></p><h3 id="🥬动态插槽"><a href="#🥬动态插槽" class="headerlink" title="🥬动态插槽"></a>🥬动态插槽</h3><p><code>v-slot:[name]</code><strong>实现动态插槽</strong></p><h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript基础</title>
    <link href="/2022/01/22/JavaScript%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/22/JavaScript%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>JavaScript基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue3.2基础</title>
    <link href="/2022/01/19/vue3-2%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/19/vue3-2%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="setup语法糖"><a href="#setup语法糖" class="headerlink" title="setup语法糖"></a>setup语法糖</h2><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./son.vue&#x27;</span>               <span class="hljs-comment">// 无需competazhu&#x27;c</span></span><br><span class="javascript">    <span class="hljs-keyword">const</span> data = ref(<span class="hljs-string">&#x27;son&#x27;</span>)                   <span class="hljs-comment">// 无需return</span></span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">son</span>&gt;</span>&#123;&#123; data &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">son</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></div></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./son.vue&#x27;</span>               <span class="hljs-comment">// 无需competazhu&#x27;c</span></span><br><span class="javascript">    <span class="hljs-keyword">const</span> props = defineProps(&#123;</span><br><span class="javascript">        <span class="hljs-attr">key</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">type</span>: ,</span><br><span class="javascript">            <span class="hljs-keyword">default</span>: </span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;)</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">son</span>  &#123;&#123; <span class="hljs-attr">data</span> &#125;&#125;/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
      <tag>Vue3.2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vuex基础</title>
    <link href="/2022/01/17/vuex%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/17/vuex%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<p><strong>vuex用于解决组件间的数据通信</strong></p><p><img src="https://vuex.vuejs.org/vuex.png" srcset="/img/loading.gif" lazyload></p><h2 id><a href="#" class="headerlink" title></a></h2><h2 id="state-共享状态数据"><a href="#state-共享状态数据" class="headerlink" title="state(共享状态数据)"></a>state(共享状态数据)</h2><h2 id="mutaitions-同步处理"><a href="#mutaitions-同步处理" class="headerlink" title="mutaitions(同步处理)"></a>mutaitions(同步处理)</h2><h2 id="actions-异步处理"><a href="#actions-异步处理" class="headerlink" title="actions(异步处理)"></a>actions(异步处理)</h2>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
      <tag>Vuex</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue基础</title>
    <link href="/2022/01/17/vue%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/17/vue%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><h3 id="🥝指令基础"><a href="#🥝指令基础" class="headerlink" title="🥝指令基础"></a>🥝指令基础</h3><p><strong>指令以</strong><code>v-</code><strong>为前缀的属性</strong></p><p><strong>指令可以接受一个单句表达式(除了v-for,v-on)</strong></p><p><code>v-???:参数=&quot;&quot;</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;clickFunction&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><code>v-???:[动态参数]=&quot;&quot;</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-on:</span>[<span class="hljs-attr">eventType</span>]=<span class="hljs-string">&quot;eventFunction&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥝指令语法糖"><a href="#🥝指令语法糖" class="headerlink" title="🥝指令语法糖"></a>🥝指令语法糖</h3><p><code>v-bind:</code><strong>等价于</strong><code>:</code></p><p><code>v-on:</code><strong>等价于</strong><code>@</code></p><h3 id="🥝指令修饰符"><a href="#🥝指令修饰符" class="headerlink" title="🥝指令修饰符"></a>🥝指令修饰符</h3><h2 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h2><p><strong>双花括号内输入插值变量(单个js表达式)</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tag</span>&gt;</span>&#123;&#123; (conditions) ? msgT : msgF &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>v-once</code><strong>指令数据只响应一次</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-once</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>v-html</code><strong>指令插入html代码</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;htmlCode&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>v-bind</code><strong>指令绑定标签属性值</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-bind:</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;titleMsg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="data选项"><a href="#data选项" class="headerlink" title="data选项"></a>data选项</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = &#123;<br>    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-comment">// 业务处理</span><br>        <span class="hljs-keyword">return</span> &#123;  &#125; <span class="hljs-comment">// 返回需求内容对象</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="methods选项"><a href="#methods选项" class="headerlink" title="methods选项"></a>methods选项</h2><p><code>this</code><strong>指向组件实例</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = &#123;<br>    <span class="hljs-attr">methods</span>: &#123;<br>        <span class="hljs-function"><span class="hljs-title">methodOne</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-comment">// 业务处理</span><br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">methodTwo</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-comment">// 业务处理</span><br>        &#125;,<br>        <span class="hljs-comment">// ......</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="computed选项"><a href="#computed选项" class="headerlink" title="computed选项"></a>computed选项</h2><p><strong>当数据没有变化时返回缓存</strong></p><h2 id="watch选项"><a href="#watch选项" class="headerlink" title="watch选项"></a>watch选项</h2><p><strong>被侦听数据改变时执行</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = &#123;<br>    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> msg = <span class="hljs-string">&#x27;Jonathan&#x27;</span><br>        <span class="hljs-keyword">return</span> &#123; Jonathan &#125;<br>    &#125;,<br>    <span class="hljs-attr">watch</span>: &#123;<br>        <span class="hljs-function"><span class="hljs-title">msg</span>(<span class="hljs-params">oldMsg, newMsg</span>)</span>&#123;<br>            <span class="hljs-comment">// 业务代码</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="绑定class"><a href="#绑定class" class="headerlink" title="绑定class"></a>绑定class</h2><p><strong>用</strong><code>v-bind:class=&quot;&quot;</code><strong>指令来绑定动态</strong><code>class</code><strong>属性</strong></p><h3 id="🥬对象绑定"><a href="#🥬对象绑定" class="headerlink" title="🥬对象绑定"></a>🥬对象绑定</h3><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;&#123; className1 : isTrue1 &#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = &#123;<br>    <span class="hljs-keyword">let</span> isTrue1 = <span class="hljs-comment">// 是否应用className1</span><br>    <span class="hljs-keyword">return</span> &#123; isTrue1 &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>可绑定多个类</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;&#123; className1 : isTrue1, className2 : isTrue2, ... &#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥬数组绑定"><a href="#🥬数组绑定" class="headerlink" title="🥬数组绑定"></a>🥬数组绑定</h3><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html">```<br><br><br><br>## 绑定内联style<br><br>**vue可自动匹配css前缀**<br><br><br><br><br><br>## 条件渲染<br><br>### 🍉`v-if`系列指令<br><br>**可用**`v-if`,`v-else-if`,`v-else`**指令来指定不同条件下的显示组件**<br><br>`v-if`**初始化不会全部渲染,故初始化开销较小,但频繁切换开销大不适合频繁切换的组件**<br><br><br><br>```html<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;a&#x27; &amp;&amp; ch &lt;= &#x27;z&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是小写字符<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;A&#x27; &amp;&amp; ch &lt;= &#x27;Z&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是大写字符<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是阿拉伯数字<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- ...可多个v-else-if --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch既不是字母也不是阿拉伯数字<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🍉v-show指令"><a href="#🍉v-show指令" class="headerlink" title="🍉v-show指令"></a>🍉<code>v-show</code>指令</h3><p><code>v-show</code><strong>会全部渲染后再改变css来条件显示组件</strong></p><p><code>v-show</code><strong>初始化开销大,适合应用于需频繁切换的组件</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;a&#x27; &amp;&amp; ch &lt;= &#x27;z&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是小写字符<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;A&#x27; &amp;&amp; ch &lt;= &#x27;Z&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是大写字符<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是阿拉伯数字<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><p><code>v-for=&quot;item in/of items&quot;</code><strong>指令</strong></p><h3 id="🥦遍历正整数"><a href="#🥦遍历正整数" class="headerlink" title="🥦遍历正整数"></a>🥦遍历正整数</h3><p><strong>从1开始遍历</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i of n&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥦遍历数组"><a href="#🥦遍历数组" class="headerlink" title="🥦遍历数组"></a>🥦遍历数组</h3><p><strong>可选两个参数</strong><code>(value[值], index[索引])</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(value, index) of [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]&quot;</span>&gt;</span>第&#123;&#123; index &#125;&#125;个元素是&#123;&#123; value &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥦遍历对象"><a href="#🥦遍历对象" class="headerlink" title="🥦遍历对象"></a>🥦遍历对象</h3><p><strong>可选三个参数</strong><code>(value[值], key[键名], index[索引])</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(vlaue, key, index) in obj&quot;</span>&gt;</span>&#123;&#123; index &#125;&#125;-&#123;&#123; key &#125;&#125;:&#123;&#123; value &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h2><p><code>v-on:event=&quot;method&quot;</code><strong>指令绑定事件</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;count++&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>缩写</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;count++&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>绑定多个事件</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;count++, count *= 2&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🍠事件修饰符"><a href="#🍠事件修饰符" class="headerlink" title="🍠事件修饰符"></a>🍠事件修饰符</h3><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 阻止单击事件继续冒泡 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;doThis&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 提交事件不再重载页面 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> @<span class="hljs-attr">submit.prevent</span>=<span class="hljs-string">&quot;onSubmit&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 修饰符可以串联 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> @<span class="hljs-attr">click.stop.prevent</span>=<span class="hljs-string">&quot;doThat&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 只有修饰符 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> @<span class="hljs-attr">submit.prevent</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 添加事件监听器时使用事件捕获模式 --&gt;</span><br><span class="hljs-comment">&lt;!-- 即内部元素触发的事件先在此处理，然后才交由内部元素进行处理 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click.capture</span>=<span class="hljs-string">&quot;doThis&quot;</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;</span><br><span class="hljs-comment">&lt;!-- 即事件不是从内部元素触发的 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click.self</span>=<span class="hljs-string">&quot;doThat&quot;</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🍠按键修饰符"><a href="#🍠按键修饰符" class="headerlink" title="🍠按键修饰符"></a>🍠按键修饰符</h3><h3 id="🍠事件名"><a href="#🍠事件名" class="headerlink" title="🍠事件名"></a>🍠事件名</h3><h2 id="表单绑定"><a href="#表单绑定" class="headerlink" title="表单绑定"></a>表单绑定</h2><p><code>v-model</code><strong>指令实现双向绑定</strong></p><p><strong>中文等拼写时不会绑定</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;msg&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>    Your input is &#123;&#123; msg &#125;&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥑复选元素"><a href="#🥑复选元素" class="headerlink" title="🥑复选元素"></a>🥑复选元素</h3><p><strong>对于复选元素</strong><code>v-model</code><strong>返回一个数组</strong></p><h3 id="🥑修饰符"><a href="#🥑修饰符" class="headerlink" title="🥑修饰符"></a>🥑修饰符</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">v-model.lazy                 <span class="hljs-comment">// 确认时再渲染</span><br>v-model.number               <span class="hljs-comment">// 用parseFloat()转数字,失败则返回原始值</span><br>v-model.trim                 <span class="hljs-comment">// 去除格式符</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue高亮</title>
    <link href="/2022/01/17/vue%E9%AB%98%E4%BA%AE/"/>
    <url>/2022/01/17/vue%E9%AB%98%E4%BA%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="安装vuter插件"><a href="#安装vuter插件" class="headerlink" title="安装vuter插件"></a>安装vuter插件</h2><h3 id="🌰搜索vuter并安装"><a href="#🌰搜索vuter并安装" class="headerlink" title="🌰搜索vuter并安装"></a>🌰搜索<code>vuter</code>并安装</h3><h3 id="🌰打开设置"><a href="#🌰打开设置" class="headerlink" title="🌰打开设置"></a>🌰打开设置</h3><p><code>ctrl+shift+p</code><strong>搜索</strong><code>首选项:打开设置(json)</code><strong>或</strong><code>Open Settings (JSON)</code></p><h3 id="🌰加入配置"><a href="#🌰加入配置" class="headerlink" title="🌰加入配置"></a>🌰加入配置</h3><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json"><span class="hljs-string">&quot;emmet.syntaxProfiles&quot;</span>: &#123;<br><span class="hljs-attr">&quot;vue-html&quot;</span>: <span class="hljs-string">&quot;html&quot;</span>,<br><span class="hljs-attr">&quot;vue&quot;</span>: <span class="hljs-string">&quot;html&quot;</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="🌰保存即可"><a href="#🌰保存即可" class="headerlink" title="🌰保存即可"></a>🌰保存即可</h3>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vite基础使用</title>
    <link href="/2022/01/17/vite%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/01/17/vite%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="安装vite"><a href="#安装vite" class="headerlink" title="安装vite"></a>安装vite</h2><h3 id="🍉项目创建"><a href="#🍉项目创建" class="headerlink" title="🍉项目创建"></a>🍉项目创建</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn create vite-app <span class="hljs-string">&quot;name&quot;</span>                <span class="hljs-comment"># 或`npm init vite-a`</span><br></code></pre></div></td></tr></table></figure><h3 id="🍉安装依赖"><a href="#🍉安装依赖" class="headerlink" title="🍉安装依赖"></a>🍉安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn                                       <span class="hljs-comment"># 或`npm i`</span><br></code></pre></div></td></tr></table></figure><h3 id="🍉启动项目"><a href="#🍉启动项目" class="headerlink" title="🍉启动项目"></a>🍉启动项目</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn dev                                    <span class="hljs-comment"># 或`npm run dev`</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Vite</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue3基础</title>
    <link href="/2022/01/17/vue3%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/17/vue3%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="生成vue3"><a href="#生成vue3" class="headerlink" title="生成vue3"></a>生成vue3</h2><h3 id="🥬从vue导入createApp函数"><a href="#🥬从vue导入createApp函数" class="headerlink" title="🥬从vue导入createApp函数"></a>🥬从vue导入createApp函数</h3><p><strong>在</strong><code>src</code><strong>目录下新建</strong><code>main.js</code><strong>导入</strong><code>createApp</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥬创建一个根组件App-vue导入至main-js"><a href="#🥬创建一个根组件App-vue导入至main-js" class="headerlink" title="🥬创建一个根组件App.vue导入至main.js"></a>🥬创建一个根组件App.vue导入至main.js</h3><p><strong>在</strong><code>src</code><strong>目录下新建</strong><code>App.vue</code><strong>中导入</strong><code>main.js</code></p><p><code>App.vue</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        根组件内容</span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span></span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><p><code>main.js</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> &#123;App <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥬使用createApp创建应用实例"><a href="#🥬使用createApp创建应用实例" class="headerlink" title="🥬使用createApp创建应用实例"></a>🥬使用createApp创建应用实例</h3><p>在<code>main.js</code>添加</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = createApp(App)<br></code></pre></div></td></tr></table></figure><h3 id="🥬应用实例挂载到-app容器中"><a href="#🥬应用实例挂载到-app容器中" class="headerlink" title="🥬应用实例挂载到#app容器中"></a>🥬应用实例挂载到#app容器中</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">app.mount(<span class="hljs-string">&#x27;#app&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h2 id="setup函数"><a href="#setup函数" class="headerlink" title="setup函数"></a>setup函数</h2><ul><li><strong>容器函数,组合各个API</strong></li><li><strong>函数内不可使用</strong><code>this</code><strong>(在组件实例创建前执行)</strong></li><li><strong>返回模板需求的数据与函数(对象)</strong></li></ul><h3 id="🍅创建vue模板及setup函数"><a href="#🍅创建vue模板及setup函数" class="headerlink" title="🍅创建vue模板及setup函数"></a>🍅创建vue模板及setup函数</h3><p><code>App.vue</code><strong>中写入根组件及</strong><code>setup</code><strong>函数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍅在setup与模板中写入代码-返回数据"><a href="#🍅在setup与模板中写入代码-返回数据" class="headerlink" title="🍅在setup与模板中写入代码,返回数据"></a>🍅在setup与模板中写入代码,返回数据</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> msg = <span class="hljs-string">&#x27;Hellow Word!&#x27;</span></span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; msg &#125;                            <span class="hljs-comment">// 返回数据为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍅在setup与模板中写入代码-返回函数"><a href="#🍅在setup与模板中写入代码-返回函数" class="headerlink" title="🍅在setup与模板中写入代码,返回函数"></a>🍅在setup与模板中写入代码,返回函数</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;say ()&quot;</span> &gt;</span>Click Me.<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> say = <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Hellow Word!&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; say &#125;                            <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><h3 id="🍈钩子函数"><a href="#🍈钩子函数" class="headerlink" title="🍈钩子函数"></a>🍈钩子函数</h3><ul><li><code>setup</code><strong>创建实例前</strong></li><li><code>onBeforeMount</code><strong>挂载DOM前</strong></li><li><code>onMounted</code><strong>挂载DOM后</strong></li><li><code>onBeforeUpdate</code><strong>更新组件前</strong></li><li><code>onUpdated</code><strong>更新组件后</strong></li><li><code>onBeforeUnmount</code><strong>卸载销毁前</strong></li><li><code>onUmounted</code><strong>卸载销毁后</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123;onBeforeMount, onMounted, onBeforeUpdate, onUpdated, onBeforeUnmount, onUmounted&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-comment">// 使用钩子函数需先导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 创建实例前</span></span></span><br><span class="javascript"><span class="xml"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onBeforeMount</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 挂载DOM前</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onMounted</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 挂载DOM后</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onBeforeUpdate</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 更新组件前</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml">         <span class="hljs-function"><span class="hljs-title">onUpdated</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-comment">// 更新组件后</span></span></span><br><span class="javascript"><span class="xml">         &#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onBeforeUnmount</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 卸载销毁前</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onUmounted</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-comment">// 卸载销毁后</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><ul><li><p><strong>钩子函数无需</strong><code>return</code><strong>可直接执行</strong></p></li><li><p><strong>可注册多个相同钩子(按序执行)</strong></p></li></ul><h2 id="reactive函数"><a href="#reactive函数" class="headerlink" title="reactive函数"></a>reactive函数</h2><ul><li><strong>定义复杂数据类型(对象)为响应式数据</strong></li></ul><h3 id="🍒写入点击记数功能"><a href="#🍒写入点击记数功能" class="headerlink" title="🍒写入点击记数功能"></a>🍒写入点击记数功能</h3><p><strong>此时数据变化,但DOM不渲染</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; obj.count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = &#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">count</span>: <span class="hljs-number">0</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; obj, cnt &#125;                            <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍒使用reactive函数"><a href="#🍒使用reactive函数" class="headerlink" title="🍒使用reactive函数"></a>🍒使用reactive函数</h3><p><strong>用</strong><code>reactive</code><strong>函数将</strong><code>obj</code><strong>对象构造为响应式数据即可动态响应</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; obj.count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                        <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                       <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">count</span>: <span class="hljs-number">0</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; obj, cnt &#125;                          <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="toRef函数"><a href="#toRef函数" class="headerlink" title="toRef函数"></a>toRef函数</h2><ul><li><strong>单独返回响应式对象的某一属性</strong></li><li><strong>修改</strong><code>attribute.value</code><strong>来响应式变化</strong></li></ul><h3 id="🥒写入点击记数功能"><a href="#🥒写入点击记数功能" class="headerlink" title="🥒写入点击记数功能"></a>🥒写入点击记数功能</h3><p><strong>使用解构得到的为静态值,无法实时更新</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                        <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                       <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">count</span>: <span class="hljs-number">0</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">time</span>: <span class="hljs-number">2</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">const</span> &#123; count &#125; = obj</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; count, cnt &#125;                          <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🥒使用toRef函数"><a href="#🥒使用toRef函数" class="headerlink" title="🥒使用toRef函数"></a>🥒使用toRef函数</h3><p><strong>用</strong><code>toRef</code><strong>函数将属性构造为响应式对象即可响应</strong></p><p><strong>通过修改其</strong><code>value</code><strong>属性实现响应式数据</strong></p><p><strong>该值与原对象关联</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive, toRef &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                 <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                       <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">count</span>: <span class="hljs-number">0</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">time</span>: <span class="hljs-number">2</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">const</span> count = toRef(obj, <span class="hljs-string">&#x27;count&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> count.value++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; count, cnt &#125;                        <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="toRefs函数"><a href="#toRefs函数" class="headerlink" title="toRefs函数"></a>toRefs函数</h2><ul><li><strong>可以批量解构响应式对象为响应式数据</strong></li></ul><h3 id="🍓写入点击记数功能"><a href="#🍓写入点击记数功能" class="headerlink" title="🍓写入点击记数功能"></a>🍓写入点击记数功能</h3><p><strong>使用解构得到的为静态值,无法实时更新</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123; time &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                        <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                       <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">count</span>: <span class="hljs-number">0</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">time</span>: <span class="hljs-number">2</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; ...obj &#125;                          <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍓使用toRefs函数"><a href="#🍓使用toRefs函数" class="headerlink" title="🍓使用toRefs函数"></a>🍓使用toRefs函数</h3><p><strong>用</strong><code>toRefs</code><strong>函数将属性集构造为响应式对象</strong></p><p><strong>新对象与原对象关联</strong></p><p><strong>通过修改其属性的</strong><code>value</code><strong>属性实现响应式数据</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123; time &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive, toRefs &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                 <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                        <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">count</span>: <span class="hljs-number">0</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">time</span>: <span class="hljs-number">2</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">const</span> obj2 = toRefs(obj)                      <span class="hljs-comment">// 响应式属性集</span></span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; ...obj2, cnt &#125;                  <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="ref函数"><a href="#ref函数" class="headerlink" title="ref函数"></a>ref函数</h2><ul><li><p><strong>将简单数据类型定义为响应式数据</strong></p></li><li><p><strong>更改数据需更改</strong><code>value</code><strong>属性</strong></p></li></ul><h3 id="🍊定义简单响应式数据"><a href="#🍊定义简单响应式数据" class="headerlink" title="🍊定义简单响应式数据"></a>🍊定义简单响应式数据</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> msg = ref(<span class="hljs-string">&#x27;title&#x27;</span>)                                        <span class="hljs-comment">// </span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">return</span> &#123; msg &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="computed函数"><a href="#computed函数" class="headerlink" title="computed函数"></a>computed函数</h2><ul><li><p><strong>数据 根据响应式数据变化而变化时使用计算函数</strong></p></li><li><p><strong>计算函数返回值只读</strong></p></li></ul><h3 id="🥦计算函数"><a href="#🥦计算函数" class="headerlink" title="🥦计算函数"></a>🥦计算函数</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; computed, ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> oldDate = ref(<span class="hljs-number">2020</span>)</span></span><br><span class="javascript"><span class="xml">         <span class="hljs-keyword">const</span> newDate = computed(<span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-keyword">return</span> oldDate.value + <span class="hljs-number">1</span></span></span><br><span class="javascript"><span class="xml">         &#125;)</span></span><br><span class="javascript"><span class="xml">         <span class="hljs-keyword">return</span> &#123; oldDate, newDate &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><p><code>get()</code></p><p><code>set()</code></p><h2 id="watch函数"><a href="#watch函数" class="headerlink" title="watch函数"></a>watch函数</h2><ul><li><strong>数据变化后执行</strong></li></ul><h3 id="🍎监听一个简单响应式数据"><a href="#🍎监听一个简单响应式数据" class="headerlink" title="🍎监听一个简单响应式数据"></a>🍎监听一个简单响应式数据</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; ref, watch &#125;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> foo = ref(<span class="hljs-string">&#x27;bar&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        whatch(foo, <span class="hljs-function">(<span class="hljs-params">oldDate, newDate</span>) =&gt;</span> &#123;                 <span class="hljs-comment">// 回调函数传递改变前后的数据值</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;foo变化了&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍎监听一个响应式对象"><a href="#🍎监听一个响应式对象" class="headerlink" title="🍎监听一个响应式对象"></a>🍎监听一个响应式对象</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactie, watch &#125;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> foo = reactive(&#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">age</span>: <span class="hljs-number">19</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        whatch(foo, <span class="hljs-function">(<span class="hljs-params">oldDate, newDate</span>) =&gt;</span> &#123;                 <span class="hljs-comment">// 回调函数传递改变前后的数据值</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;foo变化了&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍎监听多个响应式数据"><a href="#🍎监听多个响应式数据" class="headerlink" title="🍎监听多个响应式数据"></a>🍎监听多个响应式数据</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactie, ref, watch &#125;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> foo = reactive(&#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">age</span>: <span class="hljs-number">19</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> far = ref(<span class="hljs-number">10</span>)</span></span><br><span class="javascript"><span class="xml">        whatch([foo, far], <span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;foo,far至少一个变化了&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍎监听一个响应式对象的某一属性"><a href="#🍎监听一个响应式对象的某一属性" class="headerlink" title="🍎监听一个响应式对象的某一属性"></a>🍎监听一个响应式对象的某一属性</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactie, watch &#125;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> foo = reactive(&#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">age</span>: <span class="hljs-number">19</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        whatch(<span class="hljs-function">() =&gt;</span> foo.name, <span class="hljs-function">() =&gt;</span> &#123;                       <span class="hljs-comment">// 用函数传递属性值</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;foo.name变化了&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍎深度监听"><a href="#🍎深度监听" class="headerlink" title="🍎深度监听"></a>🍎深度监听</h3><ul><li><strong>监听响应式对象的对象变化</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">watch(date, callback, &#123;<br>    <span class="hljs-attr">deep</span>: <span class="hljs-literal">true</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="🍎默认执行"><a href="#🍎默认执行" class="headerlink" title="🍎默认执行"></a>🍎默认执行</h3><ul><li><strong>初始化时执行一次</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">watch(date, callback, &#123;<br>    <span class="hljs-attr">immediate</span>: <span class="hljs-literal">true</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><h2 id="ref属性"><a href="#ref属性" class="headerlink" title="ref属性"></a>ref属性</h2><ul><li><strong>获取DOM或组件实例</strong></li></ul><h3 id="🌳获取单个DOM"><a href="#🌳获取单个DOM" class="headerlink" title="🌳获取单个DOM"></a>🌳获取单个DOM</h3><p><strong>先定义并返回空的响应式数据</strong></p><p><strong>再将</strong><code>ref</code><strong>属性绑定到DOM上</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>title<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;app&#x27;</span></span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> title = ref(<span class="hljs-literal">null</span>)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; title &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🌳获取v-for遍历的DOM"><a href="#🌳获取v-for遍历的DOM" class="headerlink" title="🌳获取v-for遍历的DOM"></a>🌳获取<code>v-for</code>遍历的DOM</h3><p><strong>定义并返回一个空数组</strong></p><p><strong>定义一个DOM插入函数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i in 4&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;i&quot;</span> <span class="hljs-attr">:ref</span>=<span class="hljs-string">&quot;setDom&quot;</span>&gt;</span>第&#123;&#123; i &#125;&#125;个<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> domList = []</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-keyword">const</span> setDom = <span class="hljs-function">(<span class="hljs-params">el</span>) =&gt;</span> &#123;</span></span><br><span class="javascript"><span class="xml">domList.push(el)</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">return</span> &#123; setDom &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="父子通讯"><a href="#父子通讯" class="headerlink" title="父子通讯"></a>父子通讯</h2><h3 id="🍁父-gt-子"><a href="#🍁父-gt-子" class="headerlink" title="🍁父=&gt;子"></a>🍁父=&gt;子</h3><p><strong>用</strong><code>:key=&quot;variable&quot;</code><strong>绑定给子组件</strong></p><p><strong>子元素用</strong><code>props</code><strong>接收数据</strong></p><p><strong>子元素</strong><code>setup(props)</code><strong>传递数据给组合API</strong></p><p><code>App.vue</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; level &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">son</span> <span class="hljs-attr">:relationship</span>=<span class="hljs-string">&quot;level&quot;</span> /&gt;</span>           // 绑定传递</span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./son.vue&#x27;</span>                 <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">components</span>: &#123;                          <span class="hljs-comment">// 注册组件</span></span></span><br><span class="javascript"><span class="xml">son</span></span><br><span class="javascript"><span class="xml">&#125;,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> level = ref(<span class="hljs-string">&#x27;father&#x27;</span>)</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">return</span> &#123; level &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><p><code>son.vue</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>子组件&#123;&#123; relationship &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;son&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-attr">props</span>: &#123;                                <span class="hljs-comment">// 接收数据</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">relationship</span>: &#123;</span></span><br><span class="javascript"><span class="xml">                <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,</span></span><br><span class="javascript"><span class="xml">                <span class="hljs-attr">default</span>: <span class="hljs-string">&#x27;null&#x27;</span></span></span><br><span class="javascript"><span class="xml">            &#125;</span></span><br><span class="javascript"><span class="xml">        &#125;,</span></span><br><span class="javascript"><span class="xml">    setup (props) &#123;                        <span class="hljs-comment">// 传递数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-built_in">console</span>.log(props.relationship)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍁父-lt-子"><a href="#🍁父-lt-子" class="headerlink" title="🍁父&lt;=子"></a>🍁父&lt;=子</h3><p><strong>利用</strong><code>&#123; emit &#125;</code><strong>(触发自定义事件)向父组件传递数据</strong></p><p><strong>父组件函数接收数据</strong></p><p><code>App.vue</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>父组件<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">son</span> @<span class="hljs-attr">msg</span>=<span class="hljs-string">&quot;receive&quot;</span> /&gt;</span>           <span class="hljs-comment">&lt;!-- 触发接受函数 --&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./son.vue&#x27;</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">components</span>: &#123;</span></span><br><span class="javascript"><span class="xml">son</span></span><br><span class="javascript"><span class="xml">&#125;,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> receive = <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> <span class="hljs-built_in">console</span>.log(res)  <span class="hljs-comment">// 接收数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">return</span> &#123; receive &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><p><code>son.js</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;pass&quot;</span> &gt;</span>子组件<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>                   <span class="hljs-comment">&lt;!-- 触发传递函数 --&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;son&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup (props, &#123; emit &#125;) &#123;                        <span class="hljs-comment">// 不可省略props</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">const</span> pass = <span class="hljs-function">() =&gt;</span> emit(<span class="hljs-string">&#x27;msg&#x27;</span>, <span class="hljs-string">&#x27;sonDom&#x27;</span>) <span class="hljs-comment">// 数据传递</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">return</span> &#123; pass &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍁父-lt-gt-子-语法糖"><a href="#🍁父-lt-gt-子-语法糖" class="headerlink" title="🍁父&lt;=&gt;子 语法糖"></a>🍁父&lt;=&gt;子 语法糖</h3><h2 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h2><p><code>provide</code><strong>函数给后代提供数据与方法</strong></p><p><code>inject</code><strong>函数接受父代数据与方法</strong></p><h3 id="🍉向后代传值"><a href="#🍉向后代传值" class="headerlink" title="🍉向后代传值"></a>🍉向后代传值</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; provide &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br>provide(<span class="hljs-string">&#x27;key&#x27;</span>, value)                       <span class="hljs-comment">// 向后代传值</span><br></code></pre></div></td></tr></table></figure><h3 id="🍉接收值"><a href="#🍉接收值" class="headerlink" title="🍉接收值"></a>🍉接收值</h3><p><strong>单向数据流</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> key = inject(<span class="hljs-string">&#x27;key&#x27;</span>)                  <span class="hljs-comment">// 接受父代传递值</span><br></code></pre></div></td></tr></table></figure><h3 id="🍉数据通信"><a href="#🍉数据通信" class="headerlink" title="🍉数据通信"></a>🍉数据通信</h3><p><strong>在父组件定义并传递一个数据修改方法</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> changeValue = <span class="hljs-function">() =&gt;</span> key()            <span class="hljs-comment">// 修改value</span><br>provide(<span class="hljs-string">&#x27;changeKey&#x27;</span>, changeValue)          <span class="hljs-comment">// 向后代传递方法</span><br></code></pre></div></td></tr></table></figure><p><strong>后代接收方法来修改数据</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> change = inject(<span class="hljs-string">&#x27;changeKey&#x27;</span>)         <span class="hljs-comment">// 用此函数修改key的值</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Vue3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>yarn基础使用</title>
    <link href="/2022/01/16/yarn%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/01/16/yarn%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="脚本起用"><a href="#脚本起用" class="headerlink" title="脚本起用"></a>脚本起用</h2><ul><li><strong>在当前窗口启用脚本</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">Set-ExecutionPolicy</span> RemoteSigned <span class="hljs-keyword">Process</span>       <span class="hljs-comment"># 在当前窗口启用脚本</span><br></code></pre></div></td></tr></table></figure><h2 id="安装全部项目依赖"><a href="#安装全部项目依赖" class="headerlink" title="安装全部项目依赖"></a>安装全部项目依赖</h2><ul><li><strong>package</strong><code>name</code><strong>含中文字符会报错</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn                                           <span class="hljs-comment"># 安装所有依赖包</span><br></code></pre></div></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn init <span class="hljs-literal">-y</span>   <span class="hljs-comment"># 默认</span><br>yarn init      <span class="hljs-comment"># 自定义</span><br></code></pre></div></td></tr></table></figure><h2 id="添加包"><a href="#添加包" class="headerlink" title="添加包"></a>添加包</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn add name [<span class="hljs-type">package</span>] <span class="hljs-comment"># 安装包</span><br>yarn add global [<span class="hljs-type">package</span>] <span class="hljs-comment"># 全局安装包</span><br></code></pre></div></td></tr></table></figure><h2 id="移除包"><a href="#移除包" class="headerlink" title="移除包"></a>移除包</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn remove [<span class="hljs-type">package</span>]                          <span class="hljs-comment"># 移除包</span><br>yarn remove global [<span class="hljs-type">package</span>]                   <span class="hljs-comment"># 全局移除包</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>yarn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>webpack基础使用</title>
    <link href="/2022/01/16/webpack%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/01/16/webpack%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p><strong>webpack打包后压缩冗余空格与换行、变量名</strong></p><h2 id="初始化包环境"><a href="#初始化包环境" class="headerlink" title="初始化包环境"></a>初始化包环境</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn init                                   <span class="hljs-comment"># 回车确认</span><br>yarn init <span class="hljs-literal">-y</span>                                <span class="hljs-comment"># 默认配置</span><br></code></pre></div></td></tr></table></figure><h2 id="安装webpack包"><a href="#安装webpack包" class="headerlink" title="安装webpack包"></a>安装webpack包</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn add webpack webpack<span class="hljs-literal">-cli</span> <span class="hljs-literal">-D</span><br></code></pre></div></td></tr></table></figure><h2 id="配置scripts"><a href="#配置scripts" class="headerlink" title="配置scripts"></a>配置scripts</h2><ul><li><strong>在</strong><code>package.json</code><strong>文件下配置</strong></li></ul><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json"><span class="hljs-string">&quot;scripts&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;build&quot;</span>: <span class="hljs-string">&quot;webpack&quot;</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="建立项目文件夹src"><a href="#建立项目文件夹src" class="headerlink" title="建立项目文件夹src"></a>建立项目文件夹src</h2><ul><li><p><strong>默认入口</strong>:<code>src/index.js</code></p></li><li><p><strong>在</strong><code>package.json</code><strong>目录下建立</strong><code>src</code><strong>文件夹</strong></p></li></ul><h2 id="js打包"><a href="#js打包" class="headerlink" title="js打包"></a>js打包</h2><h3 id="🍉导出模块文件"><a href="#🍉导出模块文件" class="headerlink" title="🍉导出模块文件"></a>🍉导出模块文件</h3><p><code>src</code><strong>下新建</strong><code>sum/sum.js</code></p><p><code>sum.js</code><strong>写入导出求和函数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> sum = <span class="hljs-function">(<span class="hljs-params">x, y</span>) =&gt;</span> x + y<br></code></pre></div></td></tr></table></figure><h3 id="🍉导入模块文件"><a href="#🍉导入模块文件" class="headerlink" title="🍉导入模块文件"></a>🍉导入模块文件</h3><p><code>src</code><strong>下新建默认入口文件</strong><code>index.js</code></p><p><code>index.js</code><strong>引用</strong><code>sum</code><strong>函数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123;sum&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./sum/sum&#x27;</span><br><br><span class="hljs-keyword">const</span> [x, y] = [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>]<br><span class="hljs-built_in">console</span>.log(sum(x, y))<br></code></pre></div></td></tr></table></figure><h3 id="🍉打包"><a href="#🍉打包" class="headerlink" title="🍉打包"></a>🍉打包</h3><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn build                                      <span class="hljs-comment"># 或 `npm run build`</span><br></code></pre></div></td></tr></table></figure><p><strong>运行后在</strong><code>src</code><strong>的同级目录下生成默认出口</strong><code>dist/main.js</code></p><p><code>main.js</code><strong>的内容为</strong><code>index.js</code><strong>与其模块</strong><code>sum.js</code><strong>的打包内容</strong></p><ul><li><strong>只有与入口文件关联的代码会被打包</strong></li></ul><p><code>main.js</code><strong>内容如下</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">(<span class="hljs-function">()=&gt;</span>&#123;<span class="hljs-string">&quot;use strict&quot;</span>;<span class="hljs-keyword">const</span>[o,s]=[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>];<span class="hljs-built_in">console</span>.log((<span class="hljs-function">(<span class="hljs-params">o,s</span>)=&gt;</span>o+s)(o,s))&#125;)();<br></code></pre></div></td></tr></table></figure><h3 id="🍉更新代码"><a href="#🍉更新代码" class="headerlink" title="🍉更新代码"></a>🍉更新代码</h3><p><strong>添加功能后再次</strong><code>yarn build</code><strong>打包即可更新</strong><code>main.js</code></p><h2 id="自定义打包出入口"><a href="#自定义打包出入口" class="headerlink" title="自定义打包出入口"></a>自定义打包出入口</h2><h3 id="🍇新建webpack配置文件"><a href="#🍇新建webpack配置文件" class="headerlink" title="🍇新建webpack配置文件"></a>🍇新建webpack配置文件</h3><p><strong>在</strong><code>src</code><strong>同级目录下新建</strong><code>webpack.config.js</code><strong>文件</strong></p><h3 id="🍇配置打包出入口"><a href="#🍇配置打包出入口" class="headerlink" title="🍇配置打包出入口"></a>🍇配置打包出入口</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;path&quot;</span>)<br><br><span class="hljs-built_in">module</span>.exports = &#123;<br>    <span class="hljs-attr">entry</span>: <span class="hljs-string">&#x27;./src/入口文件名.js&#x27;</span>,<br>    <span class="hljs-attr">output</span>: &#123;<br>        <span class="hljs-attr">path</span>: path.join(__dirname, <span class="hljs-string">&#x27;出口文件夹&#x27;</span>),<br>        <span class="hljs-attr">filename</span>: <span class="hljs-string">&#x27;出口文件名.js&#x27;</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><ul><li><strong>🥝要先自定义打包命令以使用配置文件</strong></li></ul><p><strong>自定义打包命令:</strong><a href="#%E9%85%8D%E7%BD%AEscripts">配置scripts</a></p><h3 id="🍇打包yarn-build"><a href="#🍇打包yarn-build" class="headerlink" title="🍇打包yarn build"></a>🍇打包<code>yarn build</code></h3><h2 id="自动嵌入html"><a href="#自动嵌入html" class="headerlink" title="自动嵌入html"></a>自动嵌入html</h2><p><code>html-webpack-plugin</code><strong>可以使webpack打包后自动将js引入html</strong><code>head</code><strong>标签中</strong></p><h3 id="🍅安装"><a href="#🍅安装" class="headerlink" title="🍅安装"></a>🍅安装</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn add html-webpack-plugin -D<br></code></pre></div></td></tr></table></figure><h3 id="🍅提供主页面"><a href="#🍅提供主页面" class="headerlink" title="🍅提供主页面"></a>🍅提供主页面</h3><p>在<code>src</code>同目录下新建<code>pubilc\index.html</code></p><h3 id="🍅配置"><a href="#🍅配置" class="headerlink" title="🍅配置"></a>🍅配置</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> HtmlWebpackPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;html-webpack-plugin&#x27;</span>)<br><br><span class="hljs-built_in">module</span>.exports = &#123;<br>    <span class="hljs-attr">plugins</span>: [<br>        <span class="hljs-keyword">new</span> HtmlWebpackPlugin(&#123;<br>            <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;./public/index.html&#x27;</span>          <span class="hljs-comment">// 要导入的html</span><br>        &#125;)<br>    ]<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="🍅打包"><a href="#🍅打包" class="headerlink" title="🍅打包"></a>🍅打包</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn build<br></code></pre></div></td></tr></table></figure><p><strong>默认在</strong><code>dist</code><strong>目录下生成</strong><code>index.html</code></p><h2 id="css打包"><a href="#css打包" class="headerlink" title="css打包"></a>css打包</h2><h3 id="🥑新建css文件"><a href="#🥑新建css文件" class="headerlink" title="🥑新建css文件"></a>🥑新建css文件</h3><p><strong>在</strong><code>./src</code><strong>目录下新建</strong><code>css/background.css</code></p><p><code>background.css</code><strong>:</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span>&#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#000</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>webpack不可直接打包css(webpack默认识别js与json文件)</strong></p><p><strong>可安装loader加载器来打包css</strong></p><h3 id="🥑安装loader"><a href="#🥑安装loader" class="headerlink" title="🥑安装loader"></a>🥑安装loader</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn add style-loader css-loader -D<br></code></pre></div></td></tr></table></figure><p><strong>webpack通过</strong><code>css-loader</code><strong>识别与打包css</strong><br> <code>style-loader</code><strong>将样式绑定dom</strong></p><h3 id="🥑webpack配置"><a href="#🥑webpack配置" class="headerlink" title="🥑webpack配置"></a>🥑webpack配置</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">module</span>.exports = &#123;<br>    <span class="hljs-attr">module</span>: &#123;<br>        <span class="hljs-attr">rules</span>: [<br>            &#123;<br>                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.css$/</span>,                        <span class="hljs-comment">// 匹配所有css</span><br>                use: [<span class="hljs-string">&#x27;style-loader&#x27;</span>, <span class="hljs-string">&#x27;css-loader&#x27;</span>]<br>            &#125;<br>        ]<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="🥑引入入口js"><a href="#🥑引入入口js" class="headerlink" title="🥑引入入口js"></a>🥑引入入口js</h3><p><strong>在</strong><code>index.js</code><strong>(入口文件)中引入</strong><code>background.css</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./css/background.css&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥑打包构建"><a href="#🥑打包构建" class="headerlink" title="🥑打包构建"></a>🥑打包构建</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn build<br></code></pre></div></td></tr></table></figure><h2 id="图片打包"><a href="#图片打包" class="headerlink" title="图片打包"></a>图片打包</h2><h3 id="🥕安装依赖"><a href="#🥕安装依赖" class="headerlink" title="🥕安装依赖"></a>🥕安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn add url-loader file-loader -D<br></code></pre></div></td></tr></table></figure><h3 id="🥕webpack配置"><a href="#🥕webpack配置" class="headerlink" title="🥕webpack配置"></a>🥕webpack配置</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&#123;<br>    <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.(png|jpg|gif|jpeg)$/i</span>,<br>    use: [<br>        &#123;<br>        <span class="hljs-attr">loader</span>: <span class="hljs-string">&#x27;url-loader&#x27;</span>,<br>        <span class="hljs-attr">options</span>: &#123;<br>        <span class="hljs-attr">limit</span>: <span class="hljs-number">8</span> * <span class="hljs-number">1024</span>,<br>        &#125;,<br>        &#125;,<br>    ],<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="字体图标打包"><a href="#字体图标打包" class="headerlink" title="字体图标打包"></a>字体图标打包</h2>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>webpack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo博客搭建</title>
    <link href="/2022/01/16/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/01/16/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="1-安装依赖包"><a href="#1-安装依赖包" class="headerlink" title="1.安装依赖包"></a>1.安装依赖包</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">npm install <span class="hljs-literal">-g</span> hexo<span class="hljs-literal">-cli</span><br></code></pre></div></td></tr></table></figure><h2 id="2-初始化"><a href="#2-初始化" class="headerlink" title="2.初始化"></a>2.初始化</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">hexo init<br>npm install<br></code></pre></div></td></tr></table></figure><h2 id="3-关联github"><a href="#3-关联github" class="headerlink" title="3.关联github"></a>3.关联github</h2><h2 id="清除修改"><a href="#清除修改" class="headerlink" title="清除修改"></a>清除修改</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo clean<br></code></pre></div></td></tr></table></figure><h2 id="上传博客"><a href="#上传博客" class="headerlink" title="上传博客"></a>上传博客</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo g[enerate]<br>hexo d<br></code></pre></div></td></tr></table></figure><h2 id="本地服务器"><a href="#本地服务器" class="headerlink" title="本地服务器"></a>本地服务器</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo g<br>hexo s[erver]<br></code></pre></div></td></tr></table></figure><h2 id="给文章加封面"><a href="#给文章加封面" class="headerlink" title="给文章加封面"></a>给文章加封面</h2><ul><li><p><strong>在</strong><code>/source/img</code><strong>中放入图片</strong></p></li><li><p><strong>在开头</strong><code>Front-matter</code><strong>中配置</strong> <code>index_img</code> <strong>属性如下</strong></p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">index<span class="hljs-emphasis">_img: [url]</span><br></code></pre></div></td></tr></table></figure><h2 id="给文章加图片"><a href="#给文章加图片" class="headerlink" title="给文章加图片"></a>给文章加图片</h2><p><strong>在</strong><code>_config.yml</code><strong>中设置</strong><code>post_asset_folder: true</code></p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></div></td></tr></table></figure><p><strong>新建文章</strong></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo n <span class="hljs-string">&quot;title&quot;</span><br></code></pre></div></td></tr></table></figure><p><strong>在</strong><code>_post</code><strong>下的</strong><code>title</code><strong>文件夹中放入图片</strong></p><p><strong>用markdown引用</strong></p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">![<span class="hljs-string">加载失败信息</span>](<span class="hljs-link">title\xxx.png</span>)<br></code></pre></div></td></tr></table></figure><h2 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h2><ol><li><strong>创建分类页</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo new page categories<br></code></pre></div></td></tr></table></figure><ol start="2"><li><strong>在</strong><code>source/categories/index.md</code><strong>开头</strong><code>Front-matter</code><strong>中添加</strong><code>type: &quot;categories&quot;</code><strong>如下</strong></li></ol><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">---<br>title: categories<br>date: 2022-01-15 21:30:40<br><span class="hljs-section">type: &quot;categories&quot;</span><br><span class="hljs-section">---</span><br></code></pre></div></td></tr></table></figure><ol start="3"><li><strong>在博客的头部添加</strong><code>categories: - type</code><strong>即可分类</strong></li></ol><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">---<br>title: hexo博客搭建<br><span class="hljs-section">categories: [categories1, categories2] </span><br><span class="hljs-section">---</span><br></code></pre></div></td></tr></table></figure><h2 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h2><ol><li><strong>创建标签页</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo new page tags<br></code></pre></div></td></tr></table></figure><ol start="2"><li><strong>在</strong><code>source/tags/index.md</code><strong>开头</strong><code>Front-matter</code><strong>中添加</strong><code>type: &quot;tags&quot;</code><strong>如下</strong></li></ol><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">---<br>title: categories<br>date: 2022-01-15 21:30:40<br><span class="hljs-section">type: &quot;tags&quot;</span><br><span class="hljs-section">---</span><br></code></pre></div></td></tr></table></figure><ol start="3"><li><strong>在博客的头部添加</strong><code>tags: [tag1, tag2, ...]</code><strong>即可分类</strong></li></ol><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">---<br>title: hexo博客搭建<br><span class="hljs-section">tags: [tag1, tag2] </span><br><span class="hljs-section">---</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
