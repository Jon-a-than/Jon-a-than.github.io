<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>vue组件</title>
    <link href="/2022/01/22/vue%E7%BB%84%E4%BB%B6/"/>
    <url>/2022/01/22/vue%E7%BB%84%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p><strong>组件名推荐使用烤串式命名</strong></p><p><code>my-component</code><strong>DOM与模板均适用</strong></p><p><code>myComponent</code><strong>仅在模板中适用</strong></p><h2 id="组件注册"><a href="#组件注册" class="headerlink" title="组件注册"></a>组件注册</h2><h3 id="🥕组件注册"><a href="#🥕组件注册" class="headerlink" title="🥕组件注册"></a>🥕组件注册</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = Vue.creatApp(&#123;  &#125;<span class="hljs-comment">/* 组件对象]*/</span>)<br>app.component(<span class="hljs-string">&#x27;component-name&#x27;</span>, )<br></code></pre></div></td></tr></table></figure><h2 id="props"><a href="#props" class="headerlink" title="props"></a>props</h2>]]></content>
    
    
    <categories>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript基础</title>
    <link href="/2022/01/22/JavaScript%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/22/JavaScript%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue3.2基础</title>
    <link href="/2022/01/19/vue3-2%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/19/vue3-2%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="setup语法糖"><a href="#setup语法糖" class="headerlink" title="setup语法糖"></a>setup语法糖</h2><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./son.vue&#x27;</span>               <span class="hljs-comment">// 无需competazhu&#x27;c</span></span><br><span class="javascript">    <span class="hljs-keyword">const</span> data = ref(<span class="hljs-string">&#x27;son&#x27;</span>)                   <span class="hljs-comment">// 无需return</span></span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">son</span>&gt;</span>&#123;&#123; data &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">son</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></div></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./son.vue&#x27;</span>               <span class="hljs-comment">// 无需competazhu&#x27;c</span></span><br><span class="javascript">    <span class="hljs-keyword">const</span> props = defineProps(&#123;</span><br><span class="javascript">        <span class="hljs-attr">key</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">type</span>: ,</span><br><span class="javascript">            <span class="hljs-keyword">default</span>: </span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;)</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">son</span>  &#123;&#123; <span class="hljs-attr">data</span> &#125;&#125;/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>vue3.2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vuex基础</title>
    <link href="/2022/01/17/vuex%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/17/vuex%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<p><strong>vuex用于解决组件间的数据通信</strong></p><p><img src="https://vuex.vuejs.org/vuex.png" srcset="/img/loading.gif" lazyload></p><h2 id><a href="#" class="headerlink" title></a></h2><h2 id="state-共享状态数据"><a href="#state-共享状态数据" class="headerlink" title="state(共享状态数据)"></a>state(共享状态数据)</h2><h2 id="mutaitions-同步处理"><a href="#mutaitions-同步处理" class="headerlink" title="mutaitions(同步处理)"></a>mutaitions(同步处理)</h2><h2 id="actions-异步处理"><a href="#actions-异步处理" class="headerlink" title="actions(异步处理)"></a>actions(异步处理)</h2>]]></content>
    
    
    <categories>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>vuex</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue基础</title>
    <link href="/2022/01/17/vue%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/17/vue%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><h3 id="🥝指令基础"><a href="#🥝指令基础" class="headerlink" title="🥝指令基础"></a>🥝指令基础</h3><p><strong>指令以</strong><code>v-</code><strong>为前缀的属性</strong></p><p><strong>指令可以接受一个单句表达式(除了v-for,v-on)</strong></p><p><code>v-???:参数=&quot;&quot;</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;clickFunction&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><code>v-???:[动态参数]=&quot;&quot;</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-on:</span>[<span class="hljs-attr">eventType</span>]=<span class="hljs-string">&quot;eventFunction&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥝指令语法糖"><a href="#🥝指令语法糖" class="headerlink" title="🥝指令语法糖"></a>🥝指令语法糖</h3><p><code>v-bind:</code><strong>等价于</strong><code>:</code></p><p><code>v-on:</code><strong>等价于</strong><code>@</code></p><h3 id="🥝指令修饰符"><a href="#🥝指令修饰符" class="headerlink" title="🥝指令修饰符"></a>🥝指令修饰符</h3><h2 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h2><p><strong>双花括号内输入插值变量(单个js表达式)</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tag</span>&gt;</span>&#123;&#123; (conditions) ? msgT : msgF &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>v-once</code><strong>指令数据只响应一次</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-once</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>v-html</code><strong>指令插入html代码</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;htmlCode&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>使用</strong><code>v-bind</code><strong>指令绑定标签属性值</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-bind:</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;titleMsg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="data选项"><a href="#data选项" class="headerlink" title="data选项"></a>data选项</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = &#123;<br>    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-comment">// 业务处理</span><br>        <span class="hljs-keyword">return</span> &#123;  &#125; <span class="hljs-comment">// 返回需求内容对象</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="methods选项"><a href="#methods选项" class="headerlink" title="methods选项"></a>methods选项</h2><p><code>this</code><strong>指向组件实例</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = &#123;<br>    <span class="hljs-attr">methods</span>: &#123;<br>        <span class="hljs-function"><span class="hljs-title">methodOne</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-comment">// 业务处理</span><br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">methodTwo</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-comment">// 业务处理</span><br>        &#125;,<br>        <span class="hljs-comment">// ......</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="computed选项"><a href="#computed选项" class="headerlink" title="computed选项"></a>computed选项</h2><p><strong>当数据没有变化时返回缓存</strong></p><h2 id="watch选项"><a href="#watch选项" class="headerlink" title="watch选项"></a>watch选项</h2><p><strong>被侦听数据改变时执行</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = &#123;<br>    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> msg = <span class="hljs-string">&#x27;Jonathan&#x27;</span><br>        <span class="hljs-keyword">return</span> &#123; Jonathan &#125;<br>    &#125;,<br>    <span class="hljs-attr">watch</span>: &#123;<br>        <span class="hljs-function"><span class="hljs-title">msg</span>(<span class="hljs-params">oldMsg, newMsg</span>)</span>&#123;<br>            <span class="hljs-comment">// 业务代码</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="绑定class"><a href="#绑定class" class="headerlink" title="绑定class"></a>绑定class</h2><p><strong>用</strong><code>v-bind:class=&quot;&quot;</code><strong>指令来绑定动态</strong><code>class</code><strong>属性</strong></p><h3 id="🥬对象绑定"><a href="#🥬对象绑定" class="headerlink" title="🥬对象绑定"></a>🥬对象绑定</h3><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;&#123; className1 : isTrue1 &#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = &#123;<br>    <span class="hljs-keyword">let</span> isTrue1 = <span class="hljs-comment">// 是否应用className1</span><br>    <span class="hljs-keyword">return</span> &#123; isTrue1 &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>可绑定多个类</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;&#123; className1 : isTrue1, className2 : isTrue2, ... &#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥬数组绑定"><a href="#🥬数组绑定" class="headerlink" title="🥬数组绑定"></a>🥬数组绑定</h3><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html">```<br><br><br><br>## 绑定内联style<br><br>**vue可自动匹配css前缀**<br><br><br><br><br><br>## 条件渲染<br><br>### 🍉`v-if`系列指令<br><br>**可用**`v-if`,`v-else-if`,`v-else`**指令来指定不同条件下的显示组件**<br><br>`v-if`**初始化不会全部渲染,故初始化开销较小,但频繁切换开销大不适合频繁切换的组件**<br><br><br><br>```html<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;a&#x27; &amp;&amp; ch &lt;= &#x27;z&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是小写字符<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;A&#x27; &amp;&amp; ch &lt;= &#x27;Z&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是大写字符<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是阿拉伯数字<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!-- ...可多个v-else-if --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-else</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch既不是字母也不是阿拉伯数字<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🍉v-show指令"><a href="#🍉v-show指令" class="headerlink" title="🍉v-show指令"></a>🍉<code>v-show</code>指令</h3><p><code>v-show</code><strong>会全部渲染后再改变css来条件显示组件</strong></p><p><code>v-show</code><strong>初始化开销大,适合应用于需频繁切换的组件</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;a&#x27; &amp;&amp; ch &lt;= &#x27;z&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是小写字符<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;A&#x27; &amp;&amp; ch &lt;= &#x27;Z&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是大写字符<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot; ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27; &quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>ch是阿拉伯数字<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><p><code>v-for=&quot;item in/of items&quot;</code><strong>指令</strong></p><h3 id="🥦遍历正整数"><a href="#🥦遍历正整数" class="headerlink" title="🥦遍历正整数"></a>🥦遍历正整数</h3><p><strong>从1开始遍历</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i of n&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥦遍历数组"><a href="#🥦遍历数组" class="headerlink" title="🥦遍历数组"></a>🥦遍历数组</h3><p><strong>可选两个参数</strong><code>(value[值], index[索引])</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(value, index) of [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]&quot;</span>&gt;</span>第&#123;&#123; index &#125;&#125;个元素是&#123;&#123; value &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥦遍历对象"><a href="#🥦遍历对象" class="headerlink" title="🥦遍历对象"></a>🥦遍历对象</h3><p><strong>可选三个参数</strong><code>(value[值], key[键名], index[索引])</code></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(vlaue, key, index) in obj&quot;</span>&gt;</span>&#123;&#123; index &#125;&#125;-&#123;&#123; key &#125;&#125;:&#123;&#123; value &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h2><p><code>v-on:event=&quot;method&quot;</code><strong>指令绑定事件</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;count++&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>缩写</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;count++&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>绑定多个事件</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">tag</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;count++, count *= 2&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🍠事件修饰符"><a href="#🍠事件修饰符" class="headerlink" title="🍠事件修饰符"></a>🍠事件修饰符</h3><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 阻止单击事件继续冒泡 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;doThis&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 提交事件不再重载页面 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> @<span class="hljs-attr">submit.prevent</span>=<span class="hljs-string">&quot;onSubmit&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 修饰符可以串联 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> @<span class="hljs-attr">click.stop.prevent</span>=<span class="hljs-string">&quot;doThat&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 只有修饰符 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> @<span class="hljs-attr">submit.prevent</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 添加事件监听器时使用事件捕获模式 --&gt;</span><br><span class="hljs-comment">&lt;!-- 即内部元素触发的事件先在此处理，然后才交由内部元素进行处理 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click.capture</span>=<span class="hljs-string">&quot;doThis&quot;</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;</span><br><span class="hljs-comment">&lt;!-- 即事件不是从内部元素触发的 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click.self</span>=<span class="hljs-string">&quot;doThat&quot;</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🍠按键修饰符"><a href="#🍠按键修饰符" class="headerlink" title="🍠按键修饰符"></a>🍠按键修饰符</h3><h3 id="🍠事件名"><a href="#🍠事件名" class="headerlink" title="🍠事件名"></a>🍠事件名</h3><h2 id="表单绑定"><a href="#表单绑定" class="headerlink" title="表单绑定"></a>表单绑定</h2><p><code>v-model</code><strong>指令实现双向绑定</strong></p><p><strong>中文等拼写时不会绑定</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;msg&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>    Your input is &#123;&#123; msg &#125;&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥑复选元素"><a href="#🥑复选元素" class="headerlink" title="🥑复选元素"></a>🥑复选元素</h3><p><strong>对于复选元素</strong><code>v-model</code><strong>返回一个数组</strong></p><h3 id="🥑修饰符"><a href="#🥑修饰符" class="headerlink" title="🥑修饰符"></a>🥑修饰符</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">v-model.lazy                 <span class="hljs-comment">// 确认时再渲染</span><br>v-model.number               <span class="hljs-comment">// 用parseFloat()转数字,失败则返回原始值</span><br>v-model.trim                 <span class="hljs-comment">// 去除格式符</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue高亮</title>
    <link href="/2022/01/17/vue%E9%AB%98%E4%BA%AE/"/>
    <url>/2022/01/17/vue%E9%AB%98%E4%BA%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="安装vuter插件"><a href="#安装vuter插件" class="headerlink" title="安装vuter插件"></a>安装vuter插件</h2><h3 id="🌰搜索vuter并安装"><a href="#🌰搜索vuter并安装" class="headerlink" title="🌰搜索vuter并安装"></a>🌰搜索<code>vuter</code>并安装</h3><h3 id="🌰打开设置"><a href="#🌰打开设置" class="headerlink" title="🌰打开设置"></a>🌰打开设置</h3><p><code>ctrl+shift+p</code><strong>搜索</strong><code>首选项:打开设置(json)</code><strong>或</strong><code>Open Settings (JSON)</code></p><h3 id="🌰加入配置"><a href="#🌰加入配置" class="headerlink" title="🌰加入配置"></a>🌰加入配置</h3><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json"><span class="hljs-string">&quot;emmet.syntaxProfiles&quot;</span>: &#123;<br><span class="hljs-attr">&quot;vue-html&quot;</span>: <span class="hljs-string">&quot;html&quot;</span>,<br><span class="hljs-attr">&quot;vue&quot;</span>: <span class="hljs-string">&quot;html&quot;</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="🌰保存即可"><a href="#🌰保存即可" class="headerlink" title="🌰保存即可"></a>🌰保存即可</h3>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vite基础使用</title>
    <link href="/2022/01/17/vite%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/01/17/vite%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="安装vite"><a href="#安装vite" class="headerlink" title="安装vite"></a>安装vite</h2><h3 id="🍉项目创建"><a href="#🍉项目创建" class="headerlink" title="🍉项目创建"></a>🍉项目创建</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn create vite-app <span class="hljs-string">&quot;name&quot;</span>                <span class="hljs-comment"># 或`npm init vite-a`</span><br></code></pre></div></td></tr></table></figure><h3 id="🍉安装依赖"><a href="#🍉安装依赖" class="headerlink" title="🍉安装依赖"></a>🍉安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn                                       <span class="hljs-comment"># 或`npm i`</span><br></code></pre></div></td></tr></table></figure><h3 id="🍉启动项目"><a href="#🍉启动项目" class="headerlink" title="🍉启动项目"></a>🍉启动项目</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn dev                                    <span class="hljs-comment"># 或`npm run dev`</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vite</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue3基础</title>
    <link href="/2022/01/17/vue3%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/01/17/vue3%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="生成vue3"><a href="#生成vue3" class="headerlink" title="生成vue3"></a>生成vue3</h2><h3 id="🥬从vue导入createApp函数"><a href="#🥬从vue导入createApp函数" class="headerlink" title="🥬从vue导入createApp函数"></a>🥬从vue导入createApp函数</h3><p><strong>在</strong><code>src</code><strong>目录下新建</strong><code>main.js</code><strong>导入</strong><code>createApp</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥬创建一个根组件App-vue导入至main-js"><a href="#🥬创建一个根组件App-vue导入至main-js" class="headerlink" title="🥬创建一个根组件App.vue导入至main.js"></a>🥬创建一个根组件App.vue导入至main.js</h3><p><strong>在</strong><code>src</code><strong>目录下新建</strong><code>App.vue</code><strong>中导入</strong><code>main.js</code></p><p><code>App.vue</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        根组件内容</span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span></span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><p><code>main.js</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> &#123;App <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥬使用createApp创建应用实例"><a href="#🥬使用createApp创建应用实例" class="headerlink" title="🥬使用createApp创建应用实例"></a>🥬使用createApp创建应用实例</h3><p>在<code>main.js</code>添加</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> app = createApp(App)<br></code></pre></div></td></tr></table></figure><h3 id="🥬应用实例挂载到-app容器中"><a href="#🥬应用实例挂载到-app容器中" class="headerlink" title="🥬应用实例挂载到#app容器中"></a>🥬应用实例挂载到#app容器中</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">app.mount(<span class="hljs-string">&#x27;#app&#x27;</span>)<br></code></pre></div></td></tr></table></figure><h2 id="setup函数"><a href="#setup函数" class="headerlink" title="setup函数"></a>setup函数</h2><ul><li><strong>容器函数,组合各个API</strong></li><li><strong>函数内不可使用</strong><code>this</code><strong>(在组件实例创建前执行)</strong></li><li><strong>返回模板需求的数据与函数(对象)</strong></li></ul><h3 id="🍅创建vue模板及setup函数"><a href="#🍅创建vue模板及setup函数" class="headerlink" title="🍅创建vue模板及setup函数"></a>🍅创建vue模板及setup函数</h3><p><code>App.vue</code><strong>中写入根组件及</strong><code>setup</code><strong>函数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍅在setup与模板中写入代码-返回数据"><a href="#🍅在setup与模板中写入代码-返回数据" class="headerlink" title="🍅在setup与模板中写入代码,返回数据"></a>🍅在setup与模板中写入代码,返回数据</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> msg = <span class="hljs-string">&#x27;Hellow Word!&#x27;</span></span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; msg &#125;                            <span class="hljs-comment">// 返回数据为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍅在setup与模板中写入代码-返回函数"><a href="#🍅在setup与模板中写入代码-返回函数" class="headerlink" title="🍅在setup与模板中写入代码,返回函数"></a>🍅在setup与模板中写入代码,返回函数</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;say ()&quot;</span> &gt;</span>Click Me.<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> say = <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Hellow Word!&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; say &#125;                            <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><h3 id="🍈钩子函数"><a href="#🍈钩子函数" class="headerlink" title="🍈钩子函数"></a>🍈钩子函数</h3><ul><li><code>setup</code><strong>创建实例前</strong></li><li><code>onBeforeMount</code><strong>挂载DOM前</strong></li><li><code>onMounted</code><strong>挂载DOM后</strong></li><li><code>onBeforeUpdate</code><strong>更新组件前</strong></li><li><code>onUpdated</code><strong>更新组件后</strong></li><li><code>onBeforeUnmount</code><strong>卸载销毁前</strong></li><li><code>onUmounted</code><strong>卸载销毁后</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123;onBeforeMount, onMounted, onBeforeUpdate, onUpdated, onBeforeUnmount, onUmounted&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-comment">// 使用钩子函数需先导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 创建实例前</span></span></span><br><span class="javascript"><span class="xml"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onBeforeMount</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 挂载DOM前</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onMounted</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 挂载DOM后</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onBeforeUpdate</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 更新组件前</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml">         <span class="hljs-function"><span class="hljs-title">onUpdated</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-comment">// 更新组件后</span></span></span><br><span class="javascript"><span class="xml">         &#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onBeforeUnmount</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-comment">// 卸载销毁前</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-function"><span class="hljs-title">onUmounted</span>(<span class="hljs-params"></span>)</span>&#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-comment">// 卸载销毁后</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><ul><li><p><strong>钩子函数无需</strong><code>return</code><strong>可直接执行</strong></p></li><li><p><strong>可注册多个相同钩子(按序执行)</strong></p></li></ul><h2 id="reactive函数"><a href="#reactive函数" class="headerlink" title="reactive函数"></a>reactive函数</h2><ul><li><strong>定义复杂数据类型(对象)为响应式数据</strong></li></ul><h3 id="🍒写入点击记数功能"><a href="#🍒写入点击记数功能" class="headerlink" title="🍒写入点击记数功能"></a>🍒写入点击记数功能</h3><p><strong>此时数据变化,但DOM不渲染</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; obj.count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = &#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">count</span>: <span class="hljs-number">0</span></span></span><br><span class="javascript"><span class="xml">        &#125;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; obj, cnt &#125;                            <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍒使用reactive函数"><a href="#🍒使用reactive函数" class="headerlink" title="🍒使用reactive函数"></a>🍒使用reactive函数</h3><p><strong>用</strong><code>reactive</code><strong>函数将</strong><code>obj</code><strong>对象构造为响应式数据即可动态响应</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; obj.count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                        <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                       <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">count</span>: <span class="hljs-number">0</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; obj, cnt &#125;                          <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="toRef函数"><a href="#toRef函数" class="headerlink" title="toRef函数"></a>toRef函数</h2><ul><li><strong>单独返回响应式对象的某一属性</strong></li><li><strong>修改</strong><code>attribute.value</code><strong>来响应式变化</strong></li></ul><h3 id="🥒写入点击记数功能"><a href="#🥒写入点击记数功能" class="headerlink" title="🥒写入点击记数功能"></a>🥒写入点击记数功能</h3><p><strong>使用解构得到的为静态值,无法实时更新</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                        <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                       <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">count</span>: <span class="hljs-number">0</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">time</span>: <span class="hljs-number">2</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">const</span> &#123; count &#125; = obj</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; count, cnt &#125;                          <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🥒使用toRef函数"><a href="#🥒使用toRef函数" class="headerlink" title="🥒使用toRef函数"></a>🥒使用toRef函数</h3><p><strong>用</strong><code>toRef</code><strong>函数将属性构造为响应式对象即可响应</strong></p><p><strong>通过修改其</strong><code>value</code><strong>属性实现响应式数据</strong></p><p><strong>该值与原对象关联</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive, toRef &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                 <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                       <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">count</span>: <span class="hljs-number">0</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">time</span>: <span class="hljs-number">2</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">const</span> count = toRef(obj, <span class="hljs-string">&#x27;count&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> count.value++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; count, cnt &#125;                        <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="toRefs函数"><a href="#toRefs函数" class="headerlink" title="toRefs函数"></a>toRefs函数</h2><ul><li><strong>可以批量解构响应式对象为响应式数据</strong></li></ul><h3 id="🍓写入点击记数功能"><a href="#🍓写入点击记数功能" class="headerlink" title="🍓写入点击记数功能"></a>🍓写入点击记数功能</h3><p><strong>使用解构得到的为静态值,无法实时更新</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123; time &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                        <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                       <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">count</span>: <span class="hljs-number">0</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">time</span>: <span class="hljs-number">2</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; ...obj &#125;                          <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍓使用toRefs函数"><a href="#🍓使用toRefs函数" class="headerlink" title="🍓使用toRefs函数"></a>🍓使用toRefs函数</h3><p><strong>用</strong><code>toRefs</code><strong>函数将属性集构造为响应式对象</strong></p><p><strong>新对象与原对象关联</strong></p><p><strong>通过修改其属性的</strong><code>value</code><strong>属性实现响应式数据</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cnt&quot;</span> &gt;</span>&#123;&#123; count &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123; time &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactive, toRefs &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>                 <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> obj = reactive(&#123;                        <span class="hljs-comment">// 构造为响应式数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">count</span>: <span class="hljs-number">0</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">time</span>: <span class="hljs-number">2</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">const</span> obj2 = toRefs(obj)                      <span class="hljs-comment">// 响应式属性集</span></span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> cnt = <span class="hljs-function">() =&gt;</span> obj.count++</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; ...obj2, cnt &#125;                  <span class="hljs-comment">// 返回函数为对象</span></span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="ref函数"><a href="#ref函数" class="headerlink" title="ref函数"></a>ref函数</h2><ul><li><p><strong>将简单数据类型定义为响应式数据</strong></p></li><li><p><strong>更改数据需更改</strong><code>value</code><strong>属性</strong></p></li></ul><h3 id="🍊定义简单响应式数据"><a href="#🍊定义简单响应式数据" class="headerlink" title="🍊定义简单响应式数据"></a>🍊定义简单响应式数据</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> msg = ref(<span class="hljs-string">&#x27;title&#x27;</span>)                                        <span class="hljs-comment">// </span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">return</span> &#123; msg &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="computed函数"><a href="#computed函数" class="headerlink" title="computed函数"></a>computed函数</h2><ul><li><p><strong>数据 根据响应式数据变化而变化时使用计算函数</strong></p></li><li><p><strong>计算函数返回值只读</strong></p></li></ul><h3 id="🥦计算函数"><a href="#🥦计算函数" class="headerlink" title="🥦计算函数"></a>🥦计算函数</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; computed, ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> oldDate = ref(<span class="hljs-number">2020</span>)</span></span><br><span class="javascript"><span class="xml">         <span class="hljs-keyword">const</span> newDate = computed(<span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-keyword">return</span> oldDate.value + <span class="hljs-number">1</span></span></span><br><span class="javascript"><span class="xml">         &#125;)</span></span><br><span class="javascript"><span class="xml">         <span class="hljs-keyword">return</span> &#123; oldDate, newDate &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><p><code>get()</code></p><p><code>set()</code></p><h2 id="watch函数"><a href="#watch函数" class="headerlink" title="watch函数"></a>watch函数</h2><ul><li><strong>数据变化后执行</strong></li></ul><h3 id="🍎监听一个简单响应式数据"><a href="#🍎监听一个简单响应式数据" class="headerlink" title="🍎监听一个简单响应式数据"></a>🍎监听一个简单响应式数据</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; ref, watch &#125;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> foo = ref(<span class="hljs-string">&#x27;bar&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        whatch(foo, <span class="hljs-function">(<span class="hljs-params">oldDate, newDate</span>) =&gt;</span> &#123;                 <span class="hljs-comment">// 回调函数传递改变前后的数据值</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;foo变化了&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍎监听一个响应式对象"><a href="#🍎监听一个响应式对象" class="headerlink" title="🍎监听一个响应式对象"></a>🍎监听一个响应式对象</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactie, watch &#125;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> foo = reactive(&#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">age</span>: <span class="hljs-number">19</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        whatch(foo, <span class="hljs-function">(<span class="hljs-params">oldDate, newDate</span>) =&gt;</span> &#123;                 <span class="hljs-comment">// 回调函数传递改变前后的数据值</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;foo变化了&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍎监听多个响应式数据"><a href="#🍎监听多个响应式数据" class="headerlink" title="🍎监听多个响应式数据"></a>🍎监听多个响应式数据</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactie, ref, watch &#125;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> foo = reactive(&#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">age</span>: <span class="hljs-number">19</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> far = ref(<span class="hljs-number">10</span>)</span></span><br><span class="javascript"><span class="xml">        whatch([foo, far], <span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;foo,far至少一个变化了&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍎监听一个响应式对象的某一属性"><a href="#🍎监听一个响应式对象的某一属性" class="headerlink" title="🍎监听一个响应式对象的某一属性"></a>🍎监听一个响应式对象的某一属性</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> &#123; reactie, watch &#125;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> foo = reactive(&#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">age</span>: <span class="hljs-number">19</span></span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">        whatch(<span class="hljs-function">() =&gt;</span> foo.name, <span class="hljs-function">() =&gt;</span> &#123;                       <span class="hljs-comment">// 用函数传递属性值</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;foo.name变化了&#x27;</span>)</span></span><br><span class="javascript"><span class="xml">        &#125;)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍎深度监听"><a href="#🍎深度监听" class="headerlink" title="🍎深度监听"></a>🍎深度监听</h3><ul><li><strong>监听响应式对象的对象变化</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">watch(date, callback, &#123;<br>    <span class="hljs-attr">deep</span>: <span class="hljs-literal">true</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><h3 id="🍎默认执行"><a href="#🍎默认执行" class="headerlink" title="🍎默认执行"></a>🍎默认执行</h3><ul><li><strong>初始化时执行一次</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">watch(date, callback, &#123;<br>    <span class="hljs-attr">immediate</span>: <span class="hljs-literal">true</span><br>&#125;)<br></code></pre></div></td></tr></table></figure><h2 id="ref属性"><a href="#ref属性" class="headerlink" title="ref属性"></a>ref属性</h2><ul><li><strong>获取DOM或组件实例</strong></li></ul><h3 id="🌳获取单个DOM"><a href="#🌳获取单个DOM" class="headerlink" title="🌳获取单个DOM"></a>🌳获取单个DOM</h3><p><strong>先定义并返回空的响应式数据</strong></p><p><strong>再将</strong><code>ref</code><strong>属性绑定到DOM上</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>title<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;app&#x27;</span></span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">const</span> title = ref(<span class="hljs-literal">null</span>)</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-keyword">return</span> &#123; title &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🌳获取v-for遍历的DOM"><a href="#🌳获取v-for遍历的DOM" class="headerlink" title="🌳获取v-for遍历的DOM"></a>🌳获取<code>v-for</code>遍历的DOM</h3><p><strong>定义并返回一个空数组</strong></p><p><strong>定义一个DOM插入函数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i in 4&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;i&quot;</span> <span class="hljs-attr">:ref</span>=<span class="hljs-string">&quot;setDom&quot;</span>&gt;</span>第&#123;&#123; i &#125;&#125;个<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> domList = []</span></span><br><span class="javascript"><span class="xml">             <span class="hljs-keyword">const</span> setDom = <span class="hljs-function">(<span class="hljs-params">el</span>) =&gt;</span> &#123;</span></span><br><span class="javascript"><span class="xml">domList.push(el)</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">return</span> &#123; setDom &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h2 id="父子通讯"><a href="#父子通讯" class="headerlink" title="父子通讯"></a>父子通讯</h2><h3 id="🍁父-gt-子"><a href="#🍁父-gt-子" class="headerlink" title="🍁父=&gt;子"></a>🍁父=&gt;子</h3><p><strong>用</strong><code>:key=&quot;variable&quot;</code><strong>绑定给子组件</strong></p><p><strong>子元素用</strong><code>props</code><strong>接收数据</strong></p><p><strong>子元素</strong><code>setup(props)</code><strong>传递数据给组合API</strong></p><p><code>App.vue</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; level &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">son</span> <span class="hljs-attr">:relationship</span>=<span class="hljs-string">&quot;level&quot;</span> /&gt;</span>           // 绑定传递</span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./son.vue&#x27;</span>                 <span class="hljs-comment">// 需导入</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">components</span>: &#123;                          <span class="hljs-comment">// 注册组件</span></span></span><br><span class="javascript"><span class="xml">son</span></span><br><span class="javascript"><span class="xml">&#125;,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> level = ref(<span class="hljs-string">&#x27;father&#x27;</span>)</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">return</span> &#123; level &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><p><code>son.vue</code><strong>:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>子组件&#123;&#123; relationship &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;son&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-attr">props</span>: &#123;                                <span class="hljs-comment">// 接收数据</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-attr">relationship</span>: &#123;</span></span><br><span class="javascript"><span class="xml">                <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,</span></span><br><span class="javascript"><span class="xml">                <span class="hljs-attr">default</span>: <span class="hljs-string">&#x27;null&#x27;</span></span></span><br><span class="javascript"><span class="xml">            &#125;</span></span><br><span class="javascript"><span class="xml">        &#125;,</span></span><br><span class="javascript"><span class="xml">    setup (props) &#123;                        <span class="hljs-comment">// 传递数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-built_in">console</span>.log(props.relationship)</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍁父-lt-子"><a href="#🍁父-lt-子" class="headerlink" title="🍁父&lt;=子"></a>🍁父&lt;=子</h3><p><strong>利用</strong><code>&#123; emit &#125;</code><strong>(触发自定义事件)向父组件传递数据</strong></p><p><strong>父组件函数接收数据</strong></p><p><code>App.vue</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>父组件<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">son</span> @<span class="hljs-attr">msg</span>=<span class="hljs-string">&quot;receive&quot;</span> /&gt;</span>           <span class="hljs-comment">&lt;!-- 触发接受函数 --&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">    <span class="hljs-keyword">import</span> son <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./son.vue&#x27;</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;App&#x27;</span>,</span></span><br><span class="javascript"><span class="xml"><span class="hljs-attr">components</span>: &#123;</span></span><br><span class="javascript"><span class="xml">son</span></span><br><span class="javascript"><span class="xml">&#125;,</span></span><br><span class="javascript"><span class="xml">    setup () &#123;</span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">const</span> receive = <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> <span class="hljs-built_in">console</span>.log(res)  <span class="hljs-comment">// 接收数据</span></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">return</span> &#123; receive &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><p><code>son.js</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;template&gt;<br>    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 展示dom --&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;pass&quot;</span> &gt;</span>子组件<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>                   <span class="hljs-comment">&lt;!-- 触发传递函数 --&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="javascript"><span class="xml">    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;son&#x27;</span>,</span></span><br><span class="javascript"><span class="xml">    setup (props, &#123; emit &#125;) &#123;                        <span class="hljs-comment">// 不可省略props</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">const</span> pass = <span class="hljs-function">() =&gt;</span> emit(<span class="hljs-string">&#x27;msg&#x27;</span>, <span class="hljs-string">&#x27;sonDom&#x27;</span>) <span class="hljs-comment">// 数据传递</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">return</span> &#123; pass &#125;</span></span><br><span class="javascript"><span class="xml">    &#125;</span></span><br><span class="javascript"><span class="xml">&#125;</span></span><br><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="🍁父-lt-gt-子-语法糖"><a href="#🍁父-lt-gt-子-语法糖" class="headerlink" title="🍁父&lt;=&gt;子 语法糖"></a>🍁父&lt;=&gt;子 语法糖</h3><h2 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h2><p><code>provide</code><strong>函数给后代提供数据与方法</strong></p><p><code>inject</code><strong>函数接受父代数据与方法</strong></p><h3 id="🍉向后代传值"><a href="#🍉向后代传值" class="headerlink" title="🍉向后代传值"></a>🍉向后代传值</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; provide &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br>provide(<span class="hljs-string">&#x27;key&#x27;</span>, value)                       <span class="hljs-comment">// 向后代传值</span><br></code></pre></div></td></tr></table></figure><h3 id="🍉接收值"><a href="#🍉接收值" class="headerlink" title="🍉接收值"></a>🍉接收值</h3><p><strong>单向数据流</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> key = inject(<span class="hljs-string">&#x27;key&#x27;</span>)                  <span class="hljs-comment">// 接受父代传递值</span><br></code></pre></div></td></tr></table></figure><h3 id="🍉数据通信"><a href="#🍉数据通信" class="headerlink" title="🍉数据通信"></a>🍉数据通信</h3><p><strong>在父组件定义并传递一个数据修改方法</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> changeValue = <span class="hljs-function">() =&gt;</span> key()            <span class="hljs-comment">// 修改value</span><br>provide(<span class="hljs-string">&#x27;changeKey&#x27;</span>, changeValue)          <span class="hljs-comment">// 向后代传递方法</span><br></code></pre></div></td></tr></table></figure><p><strong>后代接收方法来修改数据</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> change = inject(<span class="hljs-string">&#x27;changeKey&#x27;</span>)         <span class="hljs-comment">// 用此函数修改key的值</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue3</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>yarn基础使用</title>
    <link href="/2022/01/16/yarn%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/01/16/yarn%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="脚本起用"><a href="#脚本起用" class="headerlink" title="脚本起用"></a>脚本起用</h2><ul><li><strong>在当前窗口启用脚本</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell"><span class="hljs-built_in">Set-ExecutionPolicy</span> RemoteSigned <span class="hljs-keyword">Process</span>       <span class="hljs-comment"># 在当前窗口启用脚本</span><br></code></pre></div></td></tr></table></figure><h2 id="安装全部项目依赖"><a href="#安装全部项目依赖" class="headerlink" title="安装全部项目依赖"></a>安装全部项目依赖</h2><ul><li><strong>package</strong><code>name</code><strong>含中文字符会报错</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn                                           <span class="hljs-comment"># 安装所有依赖包</span><br></code></pre></div></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn init <span class="hljs-literal">-y</span>   <span class="hljs-comment"># 默认</span><br>yarn init      <span class="hljs-comment"># 自定义</span><br></code></pre></div></td></tr></table></figure><h2 id="添加包"><a href="#添加包" class="headerlink" title="添加包"></a>添加包</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn add name [<span class="hljs-type">package</span>] <span class="hljs-comment"># 安装包</span><br>yarn add global [<span class="hljs-type">package</span>] <span class="hljs-comment"># 全局安装包</span><br></code></pre></div></td></tr></table></figure><h2 id="移除包"><a href="#移除包" class="headerlink" title="移除包"></a>移除包</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn remove [<span class="hljs-type">package</span>]                          <span class="hljs-comment"># 移除包</span><br>yarn remove global [<span class="hljs-type">package</span>]                   <span class="hljs-comment"># 全局移除包</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>yarn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>webpack基础使用</title>
    <link href="/2022/01/16/webpack%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/01/16/webpack%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p><strong>webpack打包后压缩冗余空格与换行、变量名</strong></p><h2 id="初始化包环境"><a href="#初始化包环境" class="headerlink" title="初始化包环境"></a>初始化包环境</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn init                                   <span class="hljs-comment"># 回车确认</span><br>yarn init <span class="hljs-literal">-y</span>                                <span class="hljs-comment"># 默认配置</span><br></code></pre></div></td></tr></table></figure><h2 id="安装webpack包"><a href="#安装webpack包" class="headerlink" title="安装webpack包"></a>安装webpack包</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn add webpack webpack<span class="hljs-literal">-cli</span> <span class="hljs-literal">-D</span><br></code></pre></div></td></tr></table></figure><h2 id="配置scripts"><a href="#配置scripts" class="headerlink" title="配置scripts"></a>配置scripts</h2><ul><li><strong>在</strong><code>package.json</code><strong>文件下配置</strong></li></ul><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json"><span class="hljs-string">&quot;scripts&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;build&quot;</span>: <span class="hljs-string">&quot;webpack&quot;</span><br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="建立项目文件夹src"><a href="#建立项目文件夹src" class="headerlink" title="建立项目文件夹src"></a>建立项目文件夹src</h2><ul><li><p><strong>默认入口</strong>:<code>src/index.js</code></p></li><li><p><strong>在</strong><code>package.json</code><strong>目录下建立</strong><code>src</code><strong>文件夹</strong></p></li></ul><h2 id="js打包"><a href="#js打包" class="headerlink" title="js打包"></a>js打包</h2><h3 id="🍉导出模块文件"><a href="#🍉导出模块文件" class="headerlink" title="🍉导出模块文件"></a>🍉导出模块文件</h3><p><code>src</code><strong>下新建</strong><code>sum/sum.js</code></p><p><code>sum.js</code><strong>写入导出求和函数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> sum = <span class="hljs-function">(<span class="hljs-params">x, y</span>) =&gt;</span> x + y<br></code></pre></div></td></tr></table></figure><h3 id="🍉导入模块文件"><a href="#🍉导入模块文件" class="headerlink" title="🍉导入模块文件"></a>🍉导入模块文件</h3><p><code>src</code><strong>下新建默认入口文件</strong><code>index.js</code></p><p><code>index.js</code><strong>引用</strong><code>sum</code><strong>函数</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123;sum&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./sum/sum&#x27;</span><br><br><span class="hljs-keyword">const</span> [x, y] = [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>]<br><span class="hljs-built_in">console</span>.log(sum(x, y))<br></code></pre></div></td></tr></table></figure><h3 id="🍉打包"><a href="#🍉打包" class="headerlink" title="🍉打包"></a>🍉打包</h3><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">yarn build                                      <span class="hljs-comment"># 或 `npm run build`</span><br></code></pre></div></td></tr></table></figure><p><strong>运行后在</strong><code>src</code><strong>的同级目录下生成默认出口</strong><code>dist/main.js</code></p><p><code>main.js</code><strong>的内容为</strong><code>index.js</code><strong>与其模块</strong><code>sum.js</code><strong>的打包内容</strong></p><ul><li><strong>只有与入口文件关联的代码会被打包</strong></li></ul><p><code>main.js</code><strong>内容如下</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">(<span class="hljs-function">()=&gt;</span>&#123;<span class="hljs-string">&quot;use strict&quot;</span>;<span class="hljs-keyword">const</span>[o,s]=[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>];<span class="hljs-built_in">console</span>.log((<span class="hljs-function">(<span class="hljs-params">o,s</span>)=&gt;</span>o+s)(o,s))&#125;)();<br></code></pre></div></td></tr></table></figure><h3 id="🍉更新代码"><a href="#🍉更新代码" class="headerlink" title="🍉更新代码"></a>🍉更新代码</h3><p><strong>添加功能后再次</strong><code>yarn build</code><strong>打包即可更新</strong><code>main.js</code></p><h2 id="自定义打包出入口"><a href="#自定义打包出入口" class="headerlink" title="自定义打包出入口"></a>自定义打包出入口</h2><h3 id="🍇新建webpack配置文件"><a href="#🍇新建webpack配置文件" class="headerlink" title="🍇新建webpack配置文件"></a>🍇新建webpack配置文件</h3><p><strong>在</strong><code>src</code><strong>同级目录下新建</strong><code>webpack.config.js</code><strong>文件</strong></p><h3 id="🍇配置打包出入口"><a href="#🍇配置打包出入口" class="headerlink" title="🍇配置打包出入口"></a>🍇配置打包出入口</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;path&quot;</span>)<br><br><span class="hljs-built_in">module</span>.exports = &#123;<br>    <span class="hljs-attr">entry</span>: <span class="hljs-string">&#x27;./src/入口文件名.js&#x27;</span>,<br>    <span class="hljs-attr">output</span>: &#123;<br>        <span class="hljs-attr">path</span>: path.join(__dirname, <span class="hljs-string">&#x27;出口文件夹&#x27;</span>),<br>        <span class="hljs-attr">filename</span>: <span class="hljs-string">&#x27;出口文件名.js&#x27;</span><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><ul><li><strong>🥝要先自定义打包命令以使用配置文件</strong></li></ul><p><strong>自定义打包命令:</strong><a href="#%E9%85%8D%E7%BD%AEscripts">配置scripts</a></p><h3 id="🍇打包yarn-build"><a href="#🍇打包yarn-build" class="headerlink" title="🍇打包yarn build"></a>🍇打包<code>yarn build</code></h3><h2 id="自动嵌入html"><a href="#自动嵌入html" class="headerlink" title="自动嵌入html"></a>自动嵌入html</h2><p><code>html-webpack-plugin</code><strong>可以使webpack打包后自动将js引入html</strong><code>head</code><strong>标签中</strong></p><h3 id="🍅安装"><a href="#🍅安装" class="headerlink" title="🍅安装"></a>🍅安装</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn add html-webpack-plugin -D<br></code></pre></div></td></tr></table></figure><h3 id="🍅提供主页面"><a href="#🍅提供主页面" class="headerlink" title="🍅提供主页面"></a>🍅提供主页面</h3><p>在<code>src</code>同目录下新建<code>pubilc\index.html</code></p><h3 id="🍅配置"><a href="#🍅配置" class="headerlink" title="🍅配置"></a>🍅配置</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> HtmlWebpackPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;html-webpack-plugin&#x27;</span>)<br><br><span class="hljs-built_in">module</span>.exports = &#123;<br>    <span class="hljs-attr">plugins</span>: [<br>        <span class="hljs-keyword">new</span> HtmlWebpackPlugin(&#123;<br>            <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;./public/index.html&#x27;</span>          <span class="hljs-comment">// 要导入的html</span><br>        &#125;)<br>    ]<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="🍅打包"><a href="#🍅打包" class="headerlink" title="🍅打包"></a>🍅打包</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn build<br></code></pre></div></td></tr></table></figure><p><strong>默认在</strong><code>dist</code><strong>目录下生成</strong><code>index.html</code></p><h2 id="css打包"><a href="#css打包" class="headerlink" title="css打包"></a>css打包</h2><h3 id="🥑新建css文件"><a href="#🥑新建css文件" class="headerlink" title="🥑新建css文件"></a>🥑新建css文件</h3><p><strong>在</strong><code>./src</code><strong>目录下新建</strong><code>css/background.css</code></p><p><code>background.css</code><strong>:</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span>&#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#000</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>webpack不可直接打包css(webpack默认识别js与json文件)</strong></p><p><strong>可安装loader加载器来打包css</strong></p><h3 id="🥑安装loader"><a href="#🥑安装loader" class="headerlink" title="🥑安装loader"></a>🥑安装loader</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn add style-loader css-loader -D<br></code></pre></div></td></tr></table></figure><p><strong>webpack通过</strong><code>css-loader</code><strong>识别与打包css</strong><br> <code>style-loader</code><strong>将样式绑定dom</strong></p><h3 id="🥑webpack配置"><a href="#🥑webpack配置" class="headerlink" title="🥑webpack配置"></a>🥑webpack配置</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">module</span>.exports = &#123;<br>    <span class="hljs-attr">module</span>: &#123;<br>        <span class="hljs-attr">rules</span>: [<br>            &#123;<br>                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.css$/</span>,                        <span class="hljs-comment">// 匹配所有css</span><br>                use: [<span class="hljs-string">&#x27;style-loader&#x27;</span>, <span class="hljs-string">&#x27;css-loader&#x27;</span>]<br>            &#125;<br>        ]<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="🥑引入入口js"><a href="#🥑引入入口js" class="headerlink" title="🥑引入入口js"></a>🥑引入入口js</h3><p><strong>在</strong><code>index.js</code><strong>(入口文件)中引入</strong><code>background.css</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./css/background.css&#x27;</span><br></code></pre></div></td></tr></table></figure><h3 id="🥑打包构建"><a href="#🥑打包构建" class="headerlink" title="🥑打包构建"></a>🥑打包构建</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn build<br></code></pre></div></td></tr></table></figure><h2 id="图片打包"><a href="#图片打包" class="headerlink" title="图片打包"></a>图片打包</h2><h3 id="🥕安装依赖"><a href="#🥕安装依赖" class="headerlink" title="🥕安装依赖"></a>🥕安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">yarn add url-loader file-loader -D<br></code></pre></div></td></tr></table></figure><h3 id="🥕webpack配置"><a href="#🥕webpack配置" class="headerlink" title="🥕webpack配置"></a>🥕webpack配置</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&#123;<br>    <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.(png|jpg|gif|jpeg)$/i</span>,<br>    use: [<br>        &#123;<br>        <span class="hljs-attr">loader</span>: <span class="hljs-string">&#x27;url-loader&#x27;</span>,<br>        <span class="hljs-attr">options</span>: &#123;<br>        <span class="hljs-attr">limit</span>: <span class="hljs-number">8</span> * <span class="hljs-number">1024</span>,<br>        &#125;,<br>        &#125;,<br>    ],<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="字体图标打包"><a href="#字体图标打包" class="headerlink" title="字体图标打包"></a>字体图标打包</h2>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>webpack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo博客搭建</title>
    <link href="/2022/01/16/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/01/16/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="1-安装依赖包"><a href="#1-安装依赖包" class="headerlink" title="1.安装依赖包"></a>1.安装依赖包</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">npm install <span class="hljs-literal">-g</span> hexo<span class="hljs-literal">-cli</span><br></code></pre></div></td></tr></table></figure><h2 id="2-初始化"><a href="#2-初始化" class="headerlink" title="2.初始化"></a>2.初始化</h2><figure class="highlight powershell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs powershell">hexo init<br>npm install<br></code></pre></div></td></tr></table></figure><h2 id="3-关联github"><a href="#3-关联github" class="headerlink" title="3.关联github"></a>3.关联github</h2><h2 id="清除修改"><a href="#清除修改" class="headerlink" title="清除修改"></a>清除修改</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo clean<br></code></pre></div></td></tr></table></figure><h2 id="上传博客"><a href="#上传博客" class="headerlink" title="上传博客"></a>上传博客</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo g[enerate]<br>hexo d<br></code></pre></div></td></tr></table></figure><h2 id="本地服务器"><a href="#本地服务器" class="headerlink" title="本地服务器"></a>本地服务器</h2><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo g<br>hexo s[erver]<br></code></pre></div></td></tr></table></figure><h2 id="给文章加封面"><a href="#给文章加封面" class="headerlink" title="给文章加封面"></a>给文章加封面</h2><ul><li><p><strong>在</strong><code>/source/img</code><strong>中放入图片</strong></p></li><li><p><strong>在开头</strong><code>Front-matter</code><strong>中配置</strong> <code>index_img</code> <strong>属性如下</strong></p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">index<span class="hljs-emphasis">_img: [url]</span><br></code></pre></div></td></tr></table></figure><h2 id="给文章加图片"><a href="#给文章加图片" class="headerlink" title="给文章加图片"></a>给文章加图片</h2><p><strong>在</strong><code>_config.yml</code><strong>中设置</strong><code>post_asset_folder: true</code></p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></div></td></tr></table></figure><p><strong>新建文章</strong></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo n <span class="hljs-string">&quot;title&quot;</span><br></code></pre></div></td></tr></table></figure><p><strong>在</strong><code>_post</code><strong>下的</strong><code>title</code><strong>文件夹中放入图片</strong></p><p><strong>用markdown引用</strong></p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">![<span class="hljs-string">加载失败信息</span>](<span class="hljs-link">title\xxx.png</span>)<br></code></pre></div></td></tr></table></figure><h2 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h2><ol><li><strong>创建分类页</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo new page categories<br></code></pre></div></td></tr></table></figure><ol start="2"><li><strong>在</strong><code>source/categories/index.md</code><strong>开头</strong><code>Front-matter</code><strong>中添加</strong><code>type: &quot;categories&quot;</code><strong>如下</strong></li></ol><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">---<br>title: categories<br>date: 2022-01-15 21:30:40<br><span class="hljs-section">type: &quot;categories&quot;</span><br><span class="hljs-section">---</span><br></code></pre></div></td></tr></table></figure><ol start="3"><li><strong>在博客的头部添加</strong><code>categories: - type</code><strong>即可分类</strong></li></ol><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">---<br>title: hexo博客搭建<br><span class="hljs-section">categories: [categories1, categories2] </span><br><span class="hljs-section">---</span><br></code></pre></div></td></tr></table></figure><h2 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h2><ol><li><strong>创建标签页</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">hexo new page tags<br></code></pre></div></td></tr></table></figure><ol start="2"><li><strong>在</strong><code>source/tags/index.md</code><strong>开头</strong><code>Front-matter</code><strong>中添加</strong><code>type: &quot;tags&quot;</code><strong>如下</strong></li></ol><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">---<br>title: categories<br>date: 2022-01-15 21:30:40<br><span class="hljs-section">type: &quot;tags&quot;</span><br><span class="hljs-section">---</span><br></code></pre></div></td></tr></table></figure><ol start="3"><li><strong>在博客的头部添加</strong><code>tags: [tag1, tag2, ...]</code><strong>即可分类</strong></li></ol><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">---<br>title: hexo博客搭建<br><span class="hljs-section">tags: [tag1, tag2] </span><br><span class="hljs-section">---</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
